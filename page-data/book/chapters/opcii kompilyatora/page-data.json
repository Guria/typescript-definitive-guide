{"componentChunkName":"component---src-page-templates-book-page-book-page-provider-tsx","path":"/book/chapters/opcii kompilyatora","result":{"pageContext":{"localization":{"lang":"ru","title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи.","appNavigation":[{"id":"index","path":"/","name":"Главная"},{"id":"book-contents","path":"/book/chapters","name":"Оглавление"},{"id":"what-is-new-contents","path":"/what-is-new","name":"Что нового?"},{"id":"pdf","path":"/pdf","name":"PDF Версия"}],"notification":{"behaviorNotification":{"copyLink":"Ссылка скопирована!"}},"layouts":{"shared":{"informers":{"donateInformer":{"minBanner":{"label":"Хочешь поддержать проект финансово?","buttons":{"yes":"Да, хочу! Узнать подробнее...","no":"Нет. Закрыть окно."}},"maxBanner":{"html":{"__html":"Чтобы <b>контент</b> приносил <b>максимальную пользу</b> его <b>необходимо</b> постоянно <b>совершенствовать</b> и <b>адаптировать</b>\n        под каждую новую версию <i>TypeScript</i>. Это отнимает <b>много времени</b> и без Вашей, даже <b>незначительно\n        финансовой</b>, поддержки практически <b>невозможно</b>. Помогая проекту вы прежде всего принимаете <b>участие</b> в\n        <b>развитии</b> профессионального уровня ваших <b>друзей</b>, <b>коллег</b>, <b>подчиненных</b>. Выпусти желание\n        сделать свой мир лучше. <b>Сделай контент для будующих специалистов ещё качественей и доступней!</b>"},"href":"#"}},"watchWithTelegramInformer":{"text":["Хочешь поддерживать свои знания в актуальном состоянии?","Тогда подписывайся на Telegram канал и узнавай обо всех изменениях!"],"subscribeButton":{"label":"Подписаться"}}},"links":{"telegram":"#"},"appContent":{"contentNav":{"prevButton":{"label":"Назад"},"nextButton":{"label":"Вперед"}}},"appHeader":{"navToggleButton":{"tooltips":{"open":["Открыть боковое","меню"],"close":["Закрыть боковое","меню"]}},"appMenu":{"pdfButton":{"href":"#","tooltip":["Скачать","PDF версию"],"label":"Скачать PDF версию"},"telegramButton":{"href":"https://t.me/nauchikus","tooltip":["Следить за","изменениями в","Telegram"],"label":"Следить за изменениями в Telegram"},"githubButton":{"href":"https://github.com/nauchikus/typescript-definitive-guide","tooltip":["Посетить проект на","Github"],"label":"Посетить проект на Github"}},"donateDropdown":{"href":"https://yasobe.ru/na/typescript_definitive_guide","toggleButton":{"label":["Поддержать","финансово"]},"content":{"title":"Сделай контент для будующих поколений ещё качественей и доступней!","subtitle":{"__html":"Контент требует постоянного совершенстования и адаптации под каждую новую версию\nязыка TypeScript.\nЭто отнимает много времени и без Вашей, даже незначительно финансовой, поддержки практически\nневозможно.\nПрийми участие в развитии профессионального уровня своих друзей, коллег, подчиненных. Встань на\nсторону небезразличных!"}}},"appSearch":{"inputPlaceholder":"Я ищу...","submitButton":{"ariaLabel":"Отправить"}}},"pdf":{"downloadPdfBookButton":{"title":"Скачать PDF Версию","href":"pdf/TypeScript Подробное Руководство.pdf"}}}},"pages":{"index":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"appDescription":"Книга и документация в одном","subtitleAll":["TypeScript в деталях","TypeScript крупным планом","TypeScript под микроскопом","TypeScript со всех сторон"]}},"book__chapters":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"tocItem":{"copyLinkToBufferButton":{"tooltip":"Скопировать ссылку в буфер обмена"},"collapseTocButton":{"tooltip":{"openState":"Открыть","closeState":"Закрыть"}}},"secondaryContentBar":{"label":"Оглавление","tocFilterButton":{"tooltip":"Отфильтровать на основе разделов"},"tocCollapseAllButton":{"tooltip":{"openState":"Раскрыть все","closeState":"Закрыть все"}}},"asideLayout":{"tagBarLabel":"Тематические разделы","tagBar":{"cleanFilterButton":"Все разделы"}}}},"book__chapter":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"secondaryContentBar":{"editOnGithubButton":{"tooltip":"Редактировать на Github"}}}},"what-is-new__toc":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"primaryContentBar":{"label":"История нововведений"},"tocItem":{"copyLinkToBufferButton":{"tooltip":"Скопировать ссылку в буфер обмена"}}}},"not-found":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"notFound_404":{"status":"404","title":"Страница не найдена :("}}},"pdf":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"title":"TypeScript Подробное Руководство","subtitle":"PDF Версия"}}}},"pageContentData":{"title":"Опции компилятора","section":"Компилятор","path":"opcii kompilyatora","subtitles":[{"subtitle":"strict","path":"opcii kompilyatora#strict"},{"subtitle":"suppressExcessPropertyErrors","path":"opcii kompilyatora#suppressexcesspropertyerrors"},{"subtitle":"suppressImplicitAnyIndexErrors","path":"opcii kompilyatora#suppressimplicitanyindexerrors"},{"subtitle":"noImplicitAny","path":"opcii kompilyatora#noimplicitany"},{"subtitle":"checkJs","path":"opcii kompilyatora#checkjs"},{"subtitle":"JSX","path":"opcii kompilyatora#jsx"},{"subtitle":"jsxFactory","path":"opcii kompilyatora#jsxfactory"},{"subtitle":"target (t)","path":"opcii kompilyatora#target (t)"},{"subtitle":"extends","path":"opcii kompilyatora#extends"},{"subtitle":"alwaysStrict","path":"opcii kompilyatora#alwaysstrict"},{"subtitle":"strictNullChecks","path":"opcii kompilyatora#strictnullchecks"},{"subtitle":"stripInternal","path":"opcii kompilyatora#stripinternal"},{"subtitle":"noImplicitThis","path":"opcii kompilyatora#noimplicitthis"},{"subtitle":"noImplicitUseStrict","path":"opcii kompilyatora#noimplicitusestrict"},{"subtitle":"baseUrl","path":"opcii kompilyatora#baseurl"},{"subtitle":"paths","path":"opcii kompilyatora#paths"},{"subtitle":"rootDir","path":"opcii kompilyatora#rootdir"},{"subtitle":"rootDirs","path":"opcii kompilyatora#rootdirs"},{"subtitle":"traceResolution","path":"opcii kompilyatora#traceresolution"},{"subtitle":"lib","path":"opcii kompilyatora#lib"},{"subtitle":"noLib","path":"opcii kompilyatora#nolib"},{"subtitle":"noResolve","path":"opcii kompilyatora#noresolve"},{"subtitle":"noStrictGenericChecks","path":"opcii kompilyatora#nostrictgenericchecks"},{"subtitle":"preserveConstEnums","path":"opcii kompilyatora#preserveconstenums"},{"subtitle":"removeComments","path":"opcii kompilyatora#removecomments"},{"subtitle":"noUnusedLocals","path":"opcii kompilyatora#nounusedlocals"},{"subtitle":"noUnusedParameters","path":"opcii kompilyatora#nounusedparameters"},{"subtitle":"skipLibCheck","path":"opcii kompilyatora#skiplibcheck"},{"subtitle":"declarationDir","path":"opcii kompilyatora#declarationdir"},{"subtitle":"types","path":"opcii kompilyatora#types"},{"subtitle":"typeRoots","path":"opcii kompilyatora#typeroots"},{"subtitle":"allowUnusedLabels","path":"opcii kompilyatora#allowunusedlabels"},{"subtitle":"noImplicitReturns","path":"opcii kompilyatora#noimplicitreturns"},{"subtitle":"noFallthroughCasesInSwitch","path":"opcii kompilyatora#nofallthroughcasesinswitch"},{"subtitle":"outFile","path":"opcii kompilyatora#outfile"},{"subtitle":"allowSyntheticDefaultImports","path":"opcii kompilyatora#allowsyntheticdefaultimports"},{"subtitle":"allowUnreachableCode","path":"opcii kompilyatora#allowunreachablecode"},{"subtitle":"allowJs","path":"opcii kompilyatora#allowjs"},{"subtitle":"reactNamespace","path":"opcii kompilyatora#reactnamespace"},{"subtitle":"pretty","path":"opcii kompilyatora#pretty"},{"subtitle":"moduleResolution","path":"opcii kompilyatora#moduleresolution"},{"subtitle":"exclude","path":"opcii kompilyatora#exclude"},{"subtitle":"noEmitHelpers","path":"opcii kompilyatora#noemithelpers"},{"subtitle":"newLine","path":"opcii kompilyatora#newline"},{"subtitle":"inlineSourceMap","path":"opcii kompilyatora#inlinesourcemap"},{"subtitle":"inlineSources","path":"opcii kompilyatora#inlinesources"},{"subtitle":"noEmitOnError","path":"opcii kompilyatora#noemitonerror"},{"subtitle":"noEmit","path":"opcii kompilyatora#noemit"},{"subtitle":"charset","path":"opcii kompilyatora#charset"},{"subtitle":"diagnostics","path":"opcii kompilyatora#diagnostics"},{"subtitle":"declaration","path":"opcii kompilyatora#declaration"},{"subtitle":"downlevelIteration","path":"opcii kompilyatora#downleveliteration"},{"subtitle":"emitBOM","path":"opcii kompilyatora#emitbom"},{"subtitle":"emitDecoratorMetadata","path":"opcii kompilyatora#emitdecoratormetadata"},{"subtitle":"forceConsistentCasingInFileNames","path":"opcii kompilyatora#forceconsistentcasinginfilenames"},{"subtitle":"help (h)","path":"opcii kompilyatora#help (h)"},{"subtitle":"importHelpers","path":"opcii kompilyatora#importhelpers"},{"subtitle":"isolatedModules","path":"opcii kompilyatora#isolatedmodules"},{"subtitle":"listEmittedFiles","path":"opcii kompilyatora#listemittedfiles"},{"subtitle":"listFiles","path":"opcii kompilyatora#listfiles"},{"subtitle":"sourceRoot","path":"opcii kompilyatora#sourceroot"},{"subtitle":"mapRoot","path":"opcii kompilyatora#maproot"},{"subtitle":"maxNodeModuleJsDepth","path":"opcii kompilyatora#maxnodemodulejsdepth"},{"subtitle":"project (p)","path":"opcii kompilyatora#project (p)"},{"subtitle":"init","path":"opcii kompilyatora#init"},{"subtitle":"version (v)","path":"opcii kompilyatora#version (v)"},{"subtitle":"watch (w)","path":"opcii kompilyatora#watch (w)"},{"subtitle":"preserveSymlinks","path":"opcii kompilyatora#preservesymlinks"},{"subtitle":"strictFunctionTypes","path":"opcii kompilyatora#strictfunctiontypes"},{"subtitle":"locale","path":"opcii kompilyatora#locale"},{"subtitle":"strinctPropertyInitialization","path":"opcii kompilyatora#strinctpropertyinitialization"},{"subtitle":"esModuleInterop","path":"opcii kompilyatora#esmoduleinterop"},{"subtitle":"emitDeclarationsOnly","path":"opcii kompilyatora#emitdeclarationsonly"},{"subtitle":"resolveJsonModule","path":"opcii kompilyatora#resolvejsonmodule"},{"subtitle":"declarationMap","path":"opcii kompilyatora#declarationmap"},{"subtitle":"strictBindCallApply","path":"opcii kompilyatora#strictbindcallapply"},{"subtitle":"showConfig","path":"opcii kompilyatora#showconfig"},{"subtitle":"build","path":"opcii kompilyatora#build"},{"subtitle":"verbose","path":"opcii kompilyatora#verbose"},{"subtitle":"dry","path":"opcii kompilyatora#dry"},{"subtitle":"clean","path":"opcii kompilyatora#clean"},{"subtitle":"force","path":"opcii kompilyatora#force"},{"subtitle":"incremental","path":"opcii kompilyatora#incremental"},{"subtitle":"tsBuildInfoFile","path":"opcii kompilyatora#tsbuildinfofile"},{"subtitle":"allowUmdGlobalAccess","path":"opcii kompilyatora#allowumdglobalaccess"},{"subtitle":"disableSourceOfProjectReferenceRedirect","path":"opcii kompilyatora#disablesourceofprojectreferenceredirect"},{"subtitle":"useDefineForClassFields","path":"opcii kompilyatora#usedefineforclassfields"},{"subtitle":"importsNotUsedAsValues","path":"opcii kompilyatora#importsnotusedasvalues"},{"subtitle":"assumeChangesOnlyAffectDirectDependencies","path":"opcii kompilyatora#assumechangesonlyaffectdirectdependencies"},{"subtitle":"watchFile","path":"opcii kompilyatora#watchfile"},{"subtitle":"watchDirectory","path":"opcii kompilyatora#watchdirectory"},{"subtitle":"fallbackPolling","path":"opcii kompilyatora#fallbackpolling"},{"subtitle":"synchronousWatchDirectory","path":"opcii kompilyatora#synchronouswatchdirectory"}],"html":"<section class=\"content__section\" id=\"\"><h1 class=\"content__heading_1 main-title\">\n    <button class=\"content__button_copy-to-buffer\" path=\"\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Опции компилятора</span></h1></section>\n<section class=\"content__section\" id=\"strict\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"strict\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>strict</span></h2><p><code>--strict</code> - активирует все флаги, сопутствующие строгости проверки типов. На данный момент флаг <code>strict</code> активирует следующие опции компилятора: <code>--strictNullChecks</code>, <code>--noImplicitAny</code>, <code>--noImplicitThis</code>, <code>--alwaysStrict</code>, <code>--strictFunctionTypes</code>, <code>--strictPropertyInitialization</code> и <code>--strictBindCallApply</code>. Несмотря на то, что флаг <code>strict</code> активирует сразу все указанные флаги, при желании конкретные флаги можно отключить.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;strict&quot;: false,\n      &quot;strictNullChecks&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"suppressexcesspropertyerrors\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"suppressexcesspropertyerrors\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>suppressExcessPropertyErrors</span></h2><p><code>--suppressExcessPropertyErrors</code> - если данная опция активна, то компилятор перестает проверять литералы объекта на излишние члены.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;suppressExcessPropertyErrors&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p><p><em>Пример</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">interface T1 {\n  f1: number;\n}\n\nlet v1: T1 = {f1: 0, f2: &#39;&#39;}; // suppressExcessPropertyErrors === false ? Error : Ok</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"suppressimplicitanyindexerrors\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"suppressimplicitanyindexerrors\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>suppressImplicitAnyIndexErrors</span></h2><p><code>--suppressImplicitAnyIndexErrors</code> - при активной опции <code>--noImplicitAny</code> подавляет ошибки, связанные с добавлением динамических свойств в объекты, у которых отсутствует индексное определение.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;suppressImplicitAnyIndexErrors&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p><p><em>Пример для неактивной опции</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// tsconfig.json\n\n{\n  &quot;compilerOptions&quot;: {\n      &quot;noImplicitAny&quot;: true,\n      &quot;suppressImplicitAnyIndexErrors&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// index.ts\n\ninterface Member {\n\n}\ninterface IndexMember {\n  [key: string]: any;\n}\n\n\nlet memberObject: Member = {};\nmemberObject[&#39;name&#39;] = &#39;object&#39;; // Error\n\nlet indexMemeberObject: IndexMember = {};\nindexMemeberObject[&#39;name&#39;] = &#39;object&#39;; // Ok</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><em>Пример для активной опции</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// tsconfig.json\n\n{\n  &quot;compilerOptions&quot;: {\n      &quot;noImplicitAny&quot;: true,\n      &quot;suppressImplicitAnyIndexErrors&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// index.ts\n\ninterface Member {\n\n}\ninterface IndexMember {\n  [key: string]: any;\n}\n\n\nlet memberObject: Member = {};\nmemberObject[&#39;name&#39;] = &#39;object&#39;; // Ok\n\nlet indexMemeberObject: IndexMember = {};\nindexMemeberObject[&#39;name&#39;] = &#39;object&#39;; // Ok</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"noimplicitany\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"noimplicitany\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>noImplicitAny</span></h2><p><code>--noImplicitAny</code> - при активной опции выводит ошибку, если вывод типов установил принадлежность типа члена к типу <code>any</code>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;noImplicitAny&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p><p><em>Пример с неактивной опцией</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">let v1; // Ok\n\nfunction f1(p1) { // Ok\n  let v1; // Ok\n\n  return p1;\n}\n\ntype T2 = {f1}; // Ok\n\ninterface IT1 {\n  f1; // Ok\n}\n\nclass T1 {\n  public f1; // Ok\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><em>Пример с активной опцией</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">let v1; // Ok\n\nfunction f1(p1) { // Parameter &#39;p1&#39; implicitly has an &#39;any&#39; type.\n  let v1; // Ok\n\n  return p1;\n}\n\ntype T2 = {f1}; // Member &#39;f1&#39; implicitly has an &#39;any&#39; type\n\ninterface IT1 {\n  f1; // Member &#39;f1&#39; implicitly has an &#39;any&#39; type\n}\n\nclass T1 {\n  public f1; // Member &#39;f1&#39; implicitly has an &#39;any&#39; type\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"checkjs\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"checkjs\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>checkJs</span></h2><p><code>--checkJs</code> - данная опция говорит компилятору, что код, который находится в файлах с расширением <em>.js</em>, также нужно проверять на ошибки. При этом можно исключить определенные файлы из проверки, добавив им строку <code>// @ts-nocheck</code>. Или наоборот, можно попросить компилятор проверять только помеченные как <code>// @ts-check</code> файлы без активации опции <code>--checkJs</code>. К тому же можно игнорировать ошибки на конкретных строках, указав <code>// @ts-ignore: error message</code> предыдущей строке.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;checkJs&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p><p>Кроме того, при активной опции <code>--checkJS</code> компилятору с помощью аннотации <code>/** @type {...} */</code> можно указывать типы прямо в файлах с расширением <em>.js</em>.</p><p>При использовании <em>JavaScript</em> в <em>TypeScript</em> коде нарушается типобезопасность программы.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// file sum.js\n\nexport function sum(a ,b){\n  return a + b;\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// file index.ts\n\nimport {sum} from &quot;./sum.js&quot;;\n\nlet n = sum(&#39;5&#39;, 5); // len n: any, кроме того результаты выполнения функции будет неверным</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p>Но это можно исправить с помощью специальной аннотации, которая располагается в <em>JavaScript</em> коде.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// file sum.js\n\n/** @type {(a:number,b:number) =&gt; number)} */\nexport function sum( a ,b){\n  return a + b;\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// file index.ts\n\nimport {sum} from &quot;./sum.js&quot;;\n\nlet n0 = sum(&#39;5&#39;, 5); // Error\nlet n1 = sum(5, 5); // Ok, let n1: number</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"jsx\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"jsx\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>JSX</span></h2><p><code>--jsx</code> - данная опция указывает компилятору, какое расширение указывать <em>.tsx</em> файлам после компиляции. Все дело в том, что у реакта существует два вида приложений, одни создаются для веб-платформы, другие для мобильных платформ. Кроме того, файлы для веб-платформы на входе должны иметь расширение <em>.jsx</em>, в то время как для мобильной платформы — <em>.js</em>. Поэтому компилятору нужно указывать, в какой именно формат преобразовывать файлы с расширением <em>.tsx</em>.</p><p>При указании <code>\"react\"</code> в качестве значения опции <code>--jsx</code> компилятор преобразует <em>.tsx</em> в <em>.jsx</em> файлы, которые затем компилируются в <em>.js</em>. Если в качестве значения будет указано <code>\"preserve\"</code>, то компилятор преобразует <em>.tsx</em> в <em>.jsx</em>, которые сохраняют <em>XML</em>-подобный синтаксис. Если указать значение <code>\"react-native\"</code>, то компилятор преобразует файлы <em>.tsx</em> в требующийся <em>.js</em>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;jsx&quot;: &quot;react&quot; | &quot;react-native&quot; | &quot;preserve&quot;\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>preserve</code>\n<strong>values</strong>: <code>react</code>, <code>react-native</code>, <code>preserve</code></p></section>\n<section class=\"content__section\" id=\"jsxfactory\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"jsxfactory\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>jsxFactory</span></h2><p><code>--jsxFactory</code> - данная опция позволяет при трансляции файлов <em>.tsx</em> в <em>.js</em> переопределить фабрику рендера.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// default\n\n// from file .tsx\n\nimport * as React from &quot;react&quot;;\n\n&lt;h1&gt;Ok&lt;/h1&gt;</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// to file .js\n\n&quot;use strict&quot;;\nexports.__esModule = true;\nvar React = require(&quot;react&quot;);\nReact.createElement(&quot;h1&quot;, null, &quot;Ok&quot;);</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p>Установив желаемое значение текущей опции появляется возможность переопределить функцию рендера <em>React</em> на любую другую.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// set options jsxFactory to dom\n\n// from file .tsx\n\nimport dom from &quot;dom&quot;;\n\n&lt;h1&gt;Ok&lt;/h1&gt;</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// set options jsxFactory to dom\n\n// to file .js\n\n&quot;use strict&quot;;\n/** @jsx renderer */\nexports.__esModule = true;\nvar dom = require(&quot;dom&quot;);\ndom[&quot;default&quot;](&quot;h1&quot;, null, &quot;Ok&quot;);</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p>Кроме того, подобного поведения можно добиться при помощи нотации <code>/** @jsx identifier */</code>, которая указывается в начале файла, а вместо <em>identifier</em> вписывается имя функции рендера.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// from file .tsx\n\n/** @jsx renderer */\n\nimport renderer from &quot;renderer&quot;;\n\n&lt;h1&gt;Ok&lt;/h1&gt;</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// to file .js\n\n&quot;use strict&quot;;\n/** @jsx renderer */\nexports.__esModule = true;\nvar renderer = require(&quot;renderer&quot;);\nrenderer[&quot;default&quot;](&quot;h1&quot;, null, &quot;Ok&quot;);</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p>Кроме того, аннотация <code>/** jsx identifier */</code> позволяет переопределить функцию рендера, переопределенную с помощью опции <code>--jsxFactory</code>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;jsxFactory&quot;: &quot;React.createElement&quot;\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>React.createElement</code>\n<strong>values</strong>: <code>\"*\"</code></p></section>\n<section class=\"content__section\" id=\"target_(t)\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"target (t)\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>target (t)</span></h2><p><code>--target</code>, или <code>-t</code> - указывает компилятору, с какой версией спецификации должен быть совместим генерируемый <em>JavaScript</em> код. По умолчанию установлена совместимость с <code>ES3</code>. Кроме того можно указывать совместимость с <code>ES5</code>, <code>ES2015</code> (она же <code>ES6</code>), <code>ES2016</code>, <code>ES2017</code>, <code>ESNext</code>. Стоит добавить, что <code>ESNext</code> равноценно <em>latest version</em>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n        &quot;target&quot;: &quot;es3&quot;\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>es3</code>\n<strong>values</strong>: <code>es3</code>, <code>es5</code>, <code>es6</code> / <code>es2015</code>, <code>es2016</code>, <code>es2017</code>, <code>esnext</code></p></section>\n<section class=\"content__section\" id=\"extends\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"extends\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>extends</span></h2><p><code>extends</code> - с помощью этого свойства можно расширять конфигурацию <em>tsconfig.json</em>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// tsconfig.base.json\n\n{\n  &quot;compilerOptions&quot;: {\n      &quot;target&quot;: &quot;es2015&quot;\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// tsconfig.json\n\n{\n  &quot;extends&quot;: &quot;./tsconfig.base.json&quot;\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>\"\"</code>\n<strong>values</strong>: <code>*</code></p><p>Кроме того, при использовании механизма расширения (<code>extends</code>) поиск файла конфигурации <code>taconfig.json</code> может осуществляться по пакетам (<code>packages</code>) <code>NodeJS</code> модулей, находящихся в директории <code>node_modules</code>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// tsconfig.json\n\n{\n  &quot;extends&quot;: &quot;some-npm-module&quot;\n}\n\n// or\n\n{\n  &quot;extends&quot;: &quot;some-npm-module/some-tsconfig.json&quot;\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p>Алгоритм разрешения аналогичен алгоритму поиска модулей самого <code>NodeJS</code>. Проще говоря, если путь, указанный в качестве значения атрибута <code>extends</code> не будет найден в директории <code>node_modules</code>, находящейся в текущей директории, то поиск продолжится в директории <code>node_modules</code> вверх по дереву. Но есть одна особенность, которая заключается в том, что при разрешении пути компилятор <code>tsc</code>, зайдя в директорию <code>node_modules</code>, сначала  проверяет <code>package.json</code> на наличие атрибута <code>tsconfig</code>, которому в качестве значения указывают путь до конфигурационного файла <code>TypeScript</code>. Если атрибут <code>tsconfig</code> найден, то конфигурация, на которую он ссылается, будет установлена в качестве расширяемой. Если <code>package.json</code> не содержит атрибут <code>tsconfig</code>, то в качестве расширяемого конфигурационного файла будет выбран файл <code>tsconfig.json</code>, находящийся в корне директории. Если в корне директории файла <code>tsconfig.json</code> найдено не будет, то поиск продолжится вверх по дереву.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">/project\n    /node_modules\n        /some-module\n            package.json // with attr &quot;tsconfig&quot;: &quot;tsconfig.custom.json&quot;\n            tsconfig.custom.json\n            tsconfig.json\n    tsconfig.json // &quot;extends&quot;: &quot;some-module&quot;\n\n// в этом случае в качестве расширяемого конфигурационного файла будет выбран файл находящийся по пути /node_modules/some-module/tsconfig.custom.json</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">/project\n    /node_modules\n        /some-module\n            package.json // without attr &quot;tsconfig&quot;\n            tsconfig.custom.json\n            tsconfig.json\n    tsconfig.json // &quot;extends&quot;: &quot;some-module&quot;\n\n// в этом случае в качестве расширяемого конфигурационного файла будет выбран файл находящийся по пути /node_modules/some-module/tsconfig.json</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">/project\n    /node_modules\n        /some-module\n            package.json // without attr  &quot;tsconfig&quot;\n            tsconfig.custom.json\n            tsconfig.json\n    tsconfig.json // &quot;extends&quot;: &quot;some-module/tsconfig.custom.json&quot;\n\n// в этом случае в качестве расширяемого конфигурационного файла будет вбран файл находящийся по пути /node_modules/some-module/tsconfig.custom.json</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"alwaysstrict\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"alwaysstrict\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>alwaysStrict</span></h2><p><code>--alwaysStrict</code> - данная опция говорит компилятору, что рассматривать и генерировать код нужно с учетом строгого режима <code>“use strict”</code>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;alwaysStrict&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"strictnullchecks\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"strictnullchecks\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>strictNullChecks</span></h2><p><code>--strictNullChecks</code> - активировав эту опцию, компилятор не позволяет указывать в качестве значения типы <code>Null</code> и <code>Undefined</code>, если они не были указаны в аннотации.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;strictNullChecks&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"stripinternal\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"stripinternal\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>stripInternal</span></h2><p><code>--stripInternal</code> - когда данная опция активна, компилятор не создает деклараций <em>.d.ts</em> для файлов, помеченных как <code>/** @internal */</code></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;stripInternal&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"noimplicitthis\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"noimplicitthis\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>noImplicitThis</span></h2><p><code>--noImplicitThis</code> - в активном состоянии запрещает использование <code>this</code> в местах, не предусмотренных контекстом.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;noImplicitThis&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p><p><em>Пример с неактивной опцией</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">function f1(){\n  this.name = &#39;newname&#39;; // Ok -&gt; context T1 window\n}\nfunction f2(this: T1){\n  this.name = &#39;newname&#39;; // Ok -&gt; context T1\n}\n\nthis.name = &#39;newname&#39;; // Error -&gt; context window\n\nclass T1 {\n  public name: string;\n\n  public m1(name: string): void {\n      this.name = name; // Ok -&gt; context T1\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><em>Пример с активной опцией</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">function f1(){\n  this.name = &#39;newname&#39;; // Error -&gt; context T1 window\n}\nfunction f2(this: T1){\n  this.name = &#39;newname&#39;; // Ok -&gt; context T1\n}\n\nthis.name = &#39;newname&#39;; // Error -&gt; context window\n\nclass T1 {\n  public name: string;\n\n  public m1(name: string): void {\n      this.name = name; // Ok -&gt; context T1\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"noimplicitusestrict\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"noimplicitusestrict\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>noImplicitUseStrict</span></h2><p><code>--noImplicitUseStrict</code> - при активной опции будут выводится ошибки в случаях, когда в поток компиляции попадут файлы, содержащие <code>‘use strict’</code>. Кроме того, скомпилированные файлы также не будут содержать указание <code>‘use strict’</code>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;noImplicitUseStrict&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"baseurl\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"baseurl\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>baseUrl</span></h2><p><code>--baseUrl</code> - указывает базовый путь, относительно которого будет производится поиск модулей.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;baseUrl&quot;: &quot;&quot;\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>\"\"</code>\n<strong>values</strong>: <code>base path</code></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// m1 module ./node_modules/m1\n\n// tsconfig.jsson  &quot;baseUrl&quot;: &quot;./node_modules&quot;\n\n// index.ts\n\nimport M1 from &#39;m1&#39;;</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"paths\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"paths\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>paths</span></h2><p><code>--paths</code> - с помощью этой опции создаются псевдонимы для используемых в программе модулей.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;paths&quot;: {\n          &quot;name&quot;: [ “path/to/lib” ]\n      }\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>object</code>\n<strong>default</strong>: <code>null</code>\n<strong>values</strong>: <code>{[key]: *}</code></p><p><em>Пример</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// tsconfig.json\n{\n  &quot;compilerOptions&quot;: {\n      &quot;paths&quot;: {\n          &quot;jquery&quot;: [&quot;node_modules/jquery/dest/jquery.min.js&quot;]\n      }\n  }\n}\n\n// or\n\n// tsconfig.json\n{\n  &quot;compilerOptions&quot;: {\n      &quot;baseUrl&quot;: &quot;./node_modules&quot;,\n      &quot;paths&quot;: {\n          &quot;jquery&quot;: [&quot;jquery/dest/jquery.min.js&quot;]\n      }\n  }\n}\n\nimport jquery from &#39;jquery&#39;;\n\n// or\n\n// tsconfig.json\n{\n  &quot;compilerOptions&quot;: {\n      &quot;baseUrl&quot;: &quot;./node_modules&quot;,\n      &quot;paths&quot;: {\n          &quot;jQ&quot;: [&quot;jquery/dest/jquery.min.js&quot;]\n      }\n  }\n}\n\nimport jquery from &#39;jQ&#39;;</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"rootdir\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"rootdir\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>rootDir</span></h2><p><code>--rootDir</code> - с помощью этой опции можно ограничить область выборки файлов для компиляции. В качестве значения выступает строка — путь до конкретной директории или файла.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;rootDir&quot;: &quot;&quot;\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>\"\"</code>\n<strong>values</strong>: <code>path to dir with .ts files</code></p></section>\n<section class=\"content__section\" id=\"rootdirs\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"rootdirs\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>rootDirs</span></h2><p><code>--rootDirs</code> - с помощью этой опции можно ограничить область выборки файлов для компиляции. В качестве значения принимается массив с путями до директорий и файлов.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;rootDirs&quot;: [\n\n      ]\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>array[ ]</code>\n<strong>default</strong>: <code>null</code>\n<strong>values</strong>: <code>path to dir with .ts files</code></p></section>\n<section class=\"content__section\" id=\"traceresolution\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"traceresolution\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>traceResolution</span></h2><p><code>--traceResolution</code> - в случае активной опции, при компиляции будет выводиться информация о собираемых модулях.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;traceResolution&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"lib\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"lib\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>lib</span></h2><p><code>--lib</code> - с помощью этой опции можно управлять конструкциями, которые включены в ту или иную версию <em>ES</em>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;lib&quot;: [\n\n      ]\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string[ ]</code>\n<strong>default</strong>: for es5 <code>[dom, es5, ScriptHost]</code>, for es6 <code>[dom, es6, dom.Iterable, ScriptHost]</code>\n<strong>values</strong>: <code>dom</code>, <code>webworker</code>, <code>es5</code>, <code>es6</code> / <code>es2015</code>, <code>es2015.core</code>, <code>es2015.collection</code>, <code>es2015.iterable</code>, ,<code>es2015.promise</code> ,<code>es2015.proxy</code> ,<code>es2015.reflect</code> ,<code>es2015.generator</code> ,<code>es2015.symbol</code> ,<code>es2015.symbol.wellknown</code> ,<code>es2016</code> ,<code>es2016.array.include</code> ,<code>es2017</code> ,<code>es2017.object</code> ,<code>es2017.sharedmemory</code> ,<code>scripthost</code></p></section>\n<section class=\"content__section\" id=\"nolib\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"nolib\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>noLib</span></h2><p><code>--noLib</code> - не использует декларацию <em>lib.d.ts</em> по умолчанию.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;noLib&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"noresolve\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"noresolve\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>noResolve</span></h2><p><code>--noResolve</code> - данная опция говорит компилятору не компилировать файлы, которые не были указаны в командной строке.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// terminal\n\ntsc index.ts T1 --noResolve</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// index.ts\n\nimport T1 from &#39;./T1&#39;; // Ok\nimport T2 from &#39;./T2&#39;; // Error</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"nostrictgenericchecks\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"nostrictgenericchecks\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>noStrictGenericChecks</span></h2><p><code>--noStrictGenericChecks</code> - отключает строгую проверку параметров типа для функциональных типов.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;noStrictGenericChecks&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"preserveconstenums\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"preserveconstenums\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>preserveConstEnums</span></h2><p><code>--preserveConstEnums</code> - говорит компилятору не удалять из исходного кода перечисления (<code>enum</code>), объявленные как <code>const</code>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;preserveConstEnums&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p><p><em>Пример с неактивной опцией</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// .ts\n\nconst enum Animal {\n  Bird = &#39;bird&#39;,\n  Fish = &#39;fish&#39;\n}\n\nlet greeting: string = `Hello ${ Animal.Bird }!`;</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// .js\n\nlet greeting = `Hello ${&quot;bird&quot; /* Bird */}!`;</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><em>Пример с активной опцией</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// .ts\n\nconst enum Animal {\n  Bird = &#39;bird&#39;,\n  Fish = &#39;fish&#39;\n}\n\nlet greeting: string = `Hello ${ Animal.Bird }!`;</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// .js\n\nvar Animal;\n(function (Animal) {\n  Animal[&quot;Bird&quot;] = &quot;bird&quot;;\n  Animal[&quot;Fish&quot;] = &quot;fish&quot;;\n})(Animal || (Animal = {}));\nlet greeting = `Hello ${&quot;bird&quot; /* Bird */}!`;</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"removecomments\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"removecomments\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>removeComments</span></h2><p><code>--removeComments</code> - удаляет комментарии из сгенерированного <em>.js</em>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;removeComments&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"nounusedlocals\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"nounusedlocals\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>noUnusedLocals</span></h2><p><code>--noUnusedLocals</code> - активная опция заставляет компилятор выводить сообщения о неиспользуемых элементах кода. Простыми словами, если в коде что-то объявлено, но не используется, будет возникать ошибка.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;noUnusedLocals&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p><p><em>Пример</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">import T1 from &quot;./T1&quot;; // Error\n\nlet v0: number; // Warning\nlet v1: number = 0; // Warning\n\nfunction f /** Warning */ (  ){\n  let lv0: number; // Warning\n  let lv1: string = 0; // Error\n\n  f();\n}\n\nclass C /**Error */ {\n  private f0: number; // Warning\n  private f1: number; // Warning\n  private f2: number = 0; // Warning\n\n  constructor(  ) {\n      this.f0 = 0;\n\n      let c: C = new C(); // Warning\n  }\n\n  private m0 /** Warning */ (){} // Warning\n  private m1 /** Warning */ (){  // Warning\n      this.m1();\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"nounusedparameters\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"nounusedparameters\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>noUnusedParameters</span></h2><p><code>--noUnusedParameters</code> - данная опция заставляет компилятор выводить ошибки, если в коде будут найдены функции, чьи параметры не используются (за исключением параметров, чьи идентификаторы начинаются с нижней черты, например, <code>_prop</code>).</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;noUnusedParameters&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p><p><em>Пример</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">function f ( p0: number /** Warning */,\n          p1: number /** Warning */,\n          p2: number = 0 /** Warning */ ){\n  p1 = 0;\n}\n\nclass C {\n  constructor( p0: number /** Warning */,\n      p1: number /** Warning */,\n      p2: number = 0 /** Warning */ ) {}\n\n  private m ( p0: number /** Warning */,\n      p1: number /** Warning */,\n      p2: number = 0 /** Warning */ ){\n          p1 = 0;\n      }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"skiplibcheck\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"skiplibcheck\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>skipLibCheck</span></h2><p><code>--skipLibCheck</code> - при активной опции, компилятор перестает проверять типы в файлах библиотеках с расширением <em>.d.ts</em>, что экономит время, но может привести к редким ошибкам, связанным с типами.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;skipLibCheck&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"declarationdir\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"declarationdir\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>declarationDir</span></h2><p><code>--declarationDir</code> - указывает директорию, откуда будут подключаться или в которую будут создаваться файлы декларации <code>.d.ts</code>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;declarationDir&quot;: &quot;&quot;\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>\"\"</code>\n<strong>values</strong>: <code>path to dir with .d.ts</code></p></section>\n<section class=\"content__section\" id=\"types\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"types\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>types</span></h2><p><code>--types</code> - декларации, которые размещены в <em>/node_modules/@types/</em> и чьи идентификаторы перечислены в массиве, будут доступны глобально. В случае указания пустого массива, глобальный доступ к декларациям будет запрещен. К декларациям, которые запрещены глобально, можно получить доступ только путем импортирования модуля описываемого декларацией.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;types&quot;: [ &quot;node&quot;, &quot;express&quot;, &quot;rxjs&quot; ]\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string[ ]</code>\n<strong>default</strong>: null\n<strong>values</strong>: <code>lib identifier</code></p><blockquote>\n<p>Важно - все примеры ниже производились после установки декларации. <code>npm i -D @types/react</code></p>\n</blockquote><p><em>Пример с отключенной опцией</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// tsconfig.json\n\n{\n  &quot;compilerOptions&quot;: {\n\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// index.ts\n\nclass T1 extends React.Component {} // Ok -&gt; global\n\n\nimport {Component} from &#39;react&#39;;\n\nclass T2 extends Component {} // Ok -&gt; import</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><em>Пример с пустым массивом</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// tsconfig.json\n\n{\n  &quot;compilerOptions&quot;: {\n      &quot;types&quot;: [\n\n      ]\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// index.ts\n\nclass T1 extends React.Component {} // Error -&gt; global\n\n\nimport {Component} from &#39;react&#39;;\n\nclass T2 extends Component {} // Ok -&gt; import</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><em>Пример с установленным значением</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// tsconfig.json\n\n{\n  &quot;compilerOptions&quot;: {\n      &quot;types&quot;: [ &quot;react&quot; ]\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// index.ts\n\nclass T1 extends React.Component {} // Ok -&gt; global\n\n\nimport {Component} from &#39;react&#39;;\n\nclass T2 extends Component {} // Ok -&gt; import</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"typeroots\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"typeroots\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>typeRoots</span></h2><p><code>--typeRoots</code> - ожидает массив путей до директорий с декларациями.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;typeRoots&quot;: [ &quot;./types&quot; ]\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string[ ]</code>\n<strong>default</strong>: <code>null</code>\n<strong>values</strong>: <code>path to .d.ts</code></p></section>\n<section class=\"content__section\" id=\"allowunusedlabels\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"allowunusedlabels\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>allowUnusedLabels</span></h2><p><code>--allowUnusedLabels</code> - в случае, если флаг <code>--allowUnusedLabels</code> не активен, при выявлении неиспользуемых <code>label</code> возникают ошибки.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;allowUnusedLabels&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"noimplicitreturns\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"noimplicitreturns\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>noImplicitReturns</span></h2><p><code>--noImplicitReturns</code> - функции, имеющие возвращаемый тип, отличный от типа <code>void</code>, фактически могут не возвращать значение явно. Другими словами, чтобы удовлетворять условиям данной опции, в теле функции должен присутствовать лишь оператор <code>return</code>. Но при активной текущей опции, функции будут обязаны возвращать значение явно.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;noImplicitReturns&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p><p><em>Пример</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// noImplicitReturns === false\n\nfunction f(value: number): number{\n if (value) {\n   return; // Ok\n }\n\n // Ok\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// noImplicitReturns === true\n\nfunction f(value: number): number{\n if (value) {\n   return; // Erorr\n }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// noImplicitReturns === true\n\nfunction f(value: number): number{\n if (value) {\n   return value; // Ok\n }\n\n // Error\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// noImplicitReturns === true\n\nfunction f(value: number): number{\n if (value) {\n   return value; // Ok\n }\n\n return; // Error\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// noImplicitReturns === true\n\nfunction f(value: number): number{\n if (value) {\n   return value; // Ok\n }\n\n return 0; // Ok\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"nofallthroughcasesinswitch\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"nofallthroughcasesinswitch\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>noFallthroughCasesInSwitch</span></h2><p><code>--noFallthroughCasesInSwitch</code> - при активной опции в случае, если блок кода <code>case</code> имеет код, при этом не имеет выхода из него (<code>break</code> или <code>return</code>), возникнет ошибка.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;noFallthroughCasesInSwitch&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p><p><em>Пример</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">function isAdmin( value: string ){\n  switch (value) {\n      case &#39;user&#39;: // If noFallthroughCasesInSwitch === false then Ok\n          if( nodeenv.mode === &#39;dev&#39; ){\n              console.log( `...` );\n          }\n      case &#39;moderator&#39;:\n          return false;\n      case &#39;admin&#39;:\n          return true;\n  }\n}\nfunction isAdmin( value: string ){\n  switch (value) {\n      case &#39;user&#39;: // If noFallthroughCasesInSwitch === true then Error\n          if( nodeenv.mode === &#39;dev&#39; ){\n              console.log( `...` );\n          }\n      case &#39;moderator&#39;:\n          return false;\n      case &#39;admin&#39;:\n          return true;\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"outfile\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"outfile\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>outFile</span></h2><p><code>--outFile</code> - компилятор, при условии, что в качестве модулей указанно <code>amd</code> или <code>system</code>, будет сохранять все скомпилированные модули в один файл, указанный в качестве значения опции.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;outFile&quot;: &quot;&quot;\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>\"\"</code>\n<strong>values</strong>: <code>path to bundle</code></p><p><em>до компиляции</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// T1.ts\n\nexport default class T1 {}\n\n// T2.ts\n\nimport T1 from &#39;./T1&#39;;\n\nexport default class T2 extends T1 {}\n\n// index.ts\n\nimport T2 from &#39;./T2&#39;;\n\nconst v1: T2 = new T2();</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><em>после компиляции</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">define(&quot;T1&quot;, [&quot;require&quot;, &quot;exports&quot;], function (require, exports) {\n  &quot;use strict&quot;;\n  Object.defineProperty(exports, &quot;__esModule&quot;, { value: true });\n  class T1 {\n  }\n  exports.default = T1;\n});\ndefine(&quot;T2&quot;, [&quot;require&quot;, &quot;exports&quot;, &quot;T1&quot;], function (require, exports, T1_1) {\n  &quot;use strict&quot;;\n  Object.defineProperty(exports, &quot;__esModule&quot;, { value: true });\n  class T2 extends T1_1.default {\n  }\n  exports.default = T2;\n});\ndefine(&quot;index&quot;, [&quot;require&quot;, &quot;exports&quot;, &quot;T2&quot;], function (require, exports, T2_1) {\n  &quot;use strict&quot;;\n  Object.defineProperty(exports, &quot;__esModule&quot;, { value: true });\n  const v1 = new T2_1.default();\n});</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"allowsyntheticdefaultimports\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"allowsyntheticdefaultimports\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>allowSyntheticDefaultImports</span></h2><p><code>--allowSyntheticDefaultImports</code> - позволяет предотвращать ошибки, которые возникают во время сборки по причине несовместимости <em>SystemJS</em> и <em>CommonJS</em>. Дело в том, что в <em>ES6</em> синтаксисе есть возможность экспорта по умолчанию (<code>export default</code>), после компиляции которого <em>CommonJS</em> испытывает трудности, так как не знает, что такое <code>default</code>. Чаще всего проблема возникает в тех случая, когда разработка ведется с применением одних модулей, а подключаемые библиотеки используют другие.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;allowSyntheticDefaultImports&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"allowunreachablecode\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"allowunreachablecode\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>allowUnreachableCode</span></h2><p><code>--allowUnreachableCode</code> - если значение данной опции выставлено в <code>true</code>, то при обнаружении кода, который никогда не будет вызван, будет выводится сообщение об ошибке.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;allowUnreachableCode&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p><p><em>Пример</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">function f1(value: number): void {\n  throw new Error(&#39;&#39;);\n\n  console.log(&#39;&#39;); // Error - Unreachable code detected\n}\n\nfunction f2() {\n  return\n  {\n      value: &#39;&#39; // Error - Unreachable code detected\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"allowjs\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"allowjs\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>allowJs</span></h2><p><code>--allowJs</code> - в случае, когда код, одна часть которого написана на <em>TypeScript</em>, а другая на <em>JavaScript</em>, требуется собрать в общий файл, достаточно активировать текущую опцию.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;allowJs&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p><p><em>Пример</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// sun.js\n\nexport default function sum(a, b){\n  return a + b;\n}\n\n// index.ts\n\nimport sum from &#39;./sum&#39;;\n\nlet result: number = sum(1, 1);</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"reactnamespace\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"reactnamespace\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>reactNamespace</span></h2><p><code>--reactNamespace</code> - позволяет установить фабрику рендера <em>.jsx</em> синтаксиса.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;reactNamespace&quot;: &quot;&quot;\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>\"\"</code>\n<strong>values</strong>: <code>\"*\"</code></p><p><em>Пример</em></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// index.tsx\n\nimport {jsxFactory} from &quot;jsxFactory&quot;;\n\nconst div = &lt;div&gt;Hello JSX!&lt;/div&gt;;\n\n// after compile\n\n&quot;use strict&quot;;\nvar jsxFactory_1 = require(&quot;jsxFactory&quot;);\nvar div = jsxFactory_1.jsxFactory.createElement(&quot;div&quot;, null, &quot;Hello JSX!&quot;);</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"pretty\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"pretty\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>pretty</span></h2><p><code>--pretty</code> - раскрашивает в разные цвета выводимые в консоль сообщения, делая их более понятными.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;pretty&quot;: true\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>true</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"moduleresolution\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"moduleresolution\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>moduleResolution</span></h2><p><code>--moduleResolution</code> - позволяет конкретизировать поведение модулей.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;moduleResolution&quot;: &quot;node&quot;\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: module === <code>AMD</code> | <code>System</code> | <code>ES6</code> ? <code>classic</code> : <code>node</code>\n<strong>values</strong>: <code>classic</code>, <code>node</code></p></section>\n<section class=\"content__section\" id=\"exclude\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"exclude\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>exclude</span></h2><p><code>exclude</code> - в обычной ситуации под компиляцию рекурсивно попадают все файлы, которые включает в себя директория, содержащая <em>tsconfig.json</em>. Решением этой проблемы является свойство <code>exclude</code>, определенное в корне конфигурационного  файла. В качестве его значения выступает массив с путями к файлам или директориям, которые следует исключить из компиляции.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;exclude&quot;: [\n\n  ]\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string[ ]</code>\n<strong>default</strong>: <code>null</code>\n<strong>values</strong>: <code>path to file or dir</code></p></section>\n<section class=\"content__section\" id=\"noemithelpers\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"noemithelpers\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>noEmitHelpers</span></h2><p><code>--noEmitHelpers</code> - после компиляции файлов с расширением <em>.ts</em> каждый скомпилированный файл <em>.js</em> (модуль) содержит, если в этом есть необходимость, вспомогательный код (проще говоря, helpers), который помогает решить проблему совместимости версий <em>ES</em>. В большей степени этот код, находящийся в разных файлах (модулях), идентичный. Простыми словами, helpers повторяются от файла к файлу. Компилятор вынужден добавлять повторяющийся код, чтобы гарантировать работу каждого модуля по отдельности. Но если модули собираются в одну общую сборку, активация текущего флага укажет компилятору, что helpers нужно вынести в отдельный модуль, который будет доступен в тех частях кода, которые от него зависят. Это поможет избавиться от дублирования кода и сократит размер собранного файла.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;noEmitHelpers&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"newline\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"newline\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>newLine</span></h2><p><code>--newLine</code> - по умолчанию, новая строка обозначается <code>\\r\\n</code> на <em>Windows</em> и <code>\\r</code> на *<em>nix</em> системах. Для переопределения поведения используется данная опция.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;newLine&quot;: &quot;LF&quot;\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>platform specific</code>\n<strong>values</strong>: <code>CRLF</code>, <code>LF</code></p></section>\n<section class=\"content__section\" id=\"inlinesourcemap\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"inlinesourcemap\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>inlineSourceMap</span></h2><p><code>--inlineSourceMap</code> - активная опция приводит к тому, что <em>source maps</em> записываются <em>inline</em> в <em>.js</em> файлы, а не выносятся в отдельные файлы <em>.map.js</em>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;inlineSourceMap&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"inlinesources\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"inlinesources\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>inlineSources</span></h2><p><code>--inlineSources</code> - при активной опции, источник <em>source map</em> включается в файл вместе c <em>source map</em>. Работает в паре с опцией <code>--inlineSourceMap</code>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;inlineSources&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"noemitonerror\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"noemitonerror\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>noEmitOnError</span></h2><p><code>--noEmitOnError</code> -  несмотря на ошибки в <em>TypeScript</em> коде, компилятор все равно генерирует <em>.js</em> файлы. Для того чтобы компилятор генерировал файлы  <em>.js</em> только в случае успешной компиляции, нужно активировать данную опцию.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;noEmitOnError&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"noemit\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"noemit\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>noEmit</span></h2><p><code>--noEmit</code> - при активной  опции перестаёт выводится информация о компиляции.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;noEmit&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"charset\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"charset\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>charset</span></h2><p><code>--charset</code> - устанавливает формат входных файлов.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;charset&quot;: &quot;&quot;\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>utf8</code>\n<strong>values</strong>: <code>*</code></p></section>\n<section class=\"content__section\" id=\"diagnostics\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"diagnostics\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>diagnostics</span></h2><p><code>--diagnostics</code> - выводит диагностическую информацию.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;diagnostics&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"declaration\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"declaration\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>declaration</span></h2><p><code>--declaration</code> - генерирует файлы декларации <code>.d.ts</code> из <code>.ts</code> файлов.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;declaration&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"downleveliteration\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"downleveliteration\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>downlevelIteration</span></h2><p><code>--downlevelIteration</code> - при активной опции становится возможно использовать итераторы при компиляции в версии ниже  <code>ES6</code>. Помимо самих итераторов, становятся доступны и нововведения (<code>for...of</code>, <code>Array Destructuring</code>, <code>Spread</code> и т.д.), которые построены с их использованием.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;downlevelIteration&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"emitbom\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"emitbom\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>emitBOM</span></h2><p><code>--emitBOM</code> - Извлекает <em>маркер последовательности байтов</em> <em>UTF-8</em> (BOM) в начале выходных файлов.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;emitBOM&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"emitdecoratormetadata\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"emitdecoratormetadata\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>emitDecoratorMetadata</span></h2><p><code>--emitDecoratorMetadata</code> - ...</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;emitDecoratorMetadata&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"forceconsistentcasinginfilenames\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"forceconsistentcasinginfilenames\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>forceConsistentCasingInFileNames</span></h2><p><code>--forceConsistentCasingInFileNames</code> - запрещает несогласованные ссылки на один и тот же файл.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;forceConsistentCasingInFileNames&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"help_(h)\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"help (h)\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>help (h)</span></h2><p><code>--help</code> или <code>-h</code> - выводит список доступных опций.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">tsc --help\ntsc -h</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"importhelpers\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"importhelpers\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>importHelpers</span></h2><p><code>--importHelpers</code> - импортирует таких помощников (helpers), как <code>__extends</code>, <code>__rest</code> и т.д.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;importHelpers&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"isolatedmodules\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"isolatedmodules\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>isolatedModules</span></h2><p><code>--isolatedModules</code> - транслирует каждый файл, как отдельный модуль.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;isolatedModules&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"listemittedfiles\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"listemittedfiles\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>listEmittedFiles</span></h2><p><code>--listEmittedFiles</code> - выводит список сгенерированных файлов.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;listEmittedFiles&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"listfiles\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"listfiles\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>listFiles</span></h2><p><code>--listFiles</code> - выводит список участвующих в компиляции файлов.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;listFiles&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"sourceroot\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"sourceroot\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>sourceRoot</span></h2><p><code>--sourceRoot</code> - в качестве значения принимает базовый путь до директории, в которой лежат исходники <em>.ts</em>, необходимые для ассоциации с <em>source map</em>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;sourceRoot&quot;: &quot;&quot;\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>\"\"</code>\n<strong>values</strong>: <code>path to source .ts dir</code></p></section>\n<section class=\"content__section\" id=\"maproot\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"maproot\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>mapRoot</span></h2><p><code>--mapRoot</code> - место, откуда будут браться файлы <em>.map.js</em>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;mapRoot&quot;: &quot;&quot;\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>\"\"</code>\n<strong>values</strong>: <code></code></p></section>\n<section class=\"content__section\" id=\"maxnodemodulejsdepth\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"maxnodemodulejsdepth\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>maxNodeModuleJsDepth</span></h2><p><code>--maxNodeModuleJsDepth</code> - максимальная глубина поиска зависимостей в <em>node_modules</em> и загрузки файлов <em>.js</em>. Работает только с активной опцией <code>--allowJs</code>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;maxNodeModuleJsDepth&quot;: 0\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>number</code>\n<strong>default</strong>: <code>0</code>\n<strong>values</strong>: <code>0...n</code></p></section>\n<section class=\"content__section\" id=\"project_(p)\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"project (p)\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>project (p)</span></h2><p><code>--project</code> или <code>-p</code> - с помощью этого флага можно указать как путь до директории, которая содержит <code>tsconfig.json</code>, так и на конкретный <code>tsconfig.json</code> файл.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">tsc --project\ntsc -p ./configs/tsconfig.es6.json</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code></code>\n<strong>values</strong>: <code>path to tsconfig.json</code></p></section>\n<section class=\"content__section\" id=\"init\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"init\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>init</span></h2><p><code>--init</code> - создает новый <em>tsconfig.json</em> со всеми доступными опциями, большинство из которых закомментировано, дабы создать оптимальную конфигурацию.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">tsc --init</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"version_(v)\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"version (v)\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>version (v)</span></h2><p><code>--version</code> или <code>-v</code> - выводит информацию о текущей версии <em>TypeScript</em>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">tsc --version\ntsc -v</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"watch_(w)\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"watch (w)\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>watch (w)</span></h2><p><code>--watch</code> или <code>-w</code> - запускает компилятор в режиме наблюдения за изменением файлов. При каждом изменении отслеживаемых  файлов компиляция будет запущена автоматически.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">tsc --watch\ntsc -w</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"preservesymlinks\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"preservesymlinks\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>preserveSymlinks</span></h2><p><code>--preserveSymlinks</code> - текущая опция демонстрирует поведение, идентичное реализуемому в <em>NodeJS</em> с активным флагом <code>--preserve-symlinks</code>. При активной опции символические ссылки на модели (modules) и пакеты (packages) разрешаются относительно файла символической ссылки, а не относительно пути, к которому разрешается символическая ссылка. Кроме того, поведение при активной текущей опции противоположно поведению, предоставляемому <em>Webpack</em> с помощью флага со схожим по смыслу названием <code>resolve.symlinks</code>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;preserveSymlinks&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"strictfunctiontypes\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"strictfunctiontypes\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>strictFunctionTypes</span></h2><p><code>--strictFunctionTypes</code> - при активной опции параметры функций начинают сравниваться по контрвариантным правилам, в то время, как при не активной опции, сравнения производятся по бивариантным правилам.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;strictFunctionTypes&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"locale\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"locale\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>locale</span></h2><p><code>--locale</code> - позволяет указать один из заданных языков для вывода диагностических сообщений.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;locale&quot;: &quot;en&quot; | &quot;cs&quot; | &quot;de&quot; | &quot;es&quot; | &quot;fr&quot; | &quot;it&quot; | &quot;ja&quot; | &quot;ko&quot; | &quot;pl&quot; | &quot;pt-BR&quot; | &quot;ru&quot; | &quot;tr&quot; | &quot;zh-CN&quot; | &quot;zh-TW&quot; |\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>platform specific</code>\n<strong>values</strong>: English (US): <code>en</code>,Czech: <code>cs</code>,German: <code>de</code> ,Spanish: <code>es</code> ,French: <code>fr</code>,Italian: <code>it</code> ,Japanese: <code>ja</code> ,Korean: <code>ko</code>,Polish: <code>pl</code> ,Portuguese(Brazil): <code>pt-BR</code> ,Russian: <code>ru</code>,Turkish: <code>tr</code>,Simplified Chinese: <code>zh-CN</code> ,Traditional Chinese: <code>zh-TW</code></p></section>\n<section class=\"content__section\" id=\"strinctpropertyinitialization\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"strinctpropertyinitialization\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>strinctPropertyInitialization</span></h2><p><code>--strictPropertyInitialization</code> - при активной опции в случае, когда в классе присутствуют поля, не инициализированные в момент создания или в конструкторе, возникает ошибка. Более подробно данная тема раскрыта в главе <a href=\"/book/chapters/definite%20assignment%20assertion%20modifier\">“Классы - Definite Assignment Assertion Modifier”</a>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;strictPropertyInitialization&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">class Identifier {\n  public a: number = 0; // Ok, инициализация при объявлении\n  public b: number; // Ok, инициализация в конструкторе\n  public c: number | undefined; // Ok, явное указание принадлежности к типу Undefined\n  public d: number; // Error, инициализация отсутствует\n  constructor() {\n      this.b = 0;\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"esmoduleinterop\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"esmoduleinterop\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>esModuleInterop</span></h2><p><code>--esModuleInterop</code> - с активной опцией сгенерированный код таких модулей формата <em>CommonJS</em>/<em>AMD</em>/<em>UMD</em> больше походит на код, сгенерированный <em>Babel</em>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;esModuleInterop&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"emitdeclarationsonly\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"emitdeclarationsonly\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>emitDeclarationsOnly</span></h2><p><code>--emitDeclarationsOnly</code> - данная опция указывает компилятору, что нужно генерировать только файлы декларации с расширением <em>.d.ts</em> и пропускать файлы с расширением <em>.js</em> и <em>.jsx</em>. Такое поведение может быть полезно, если код, помимо компилятора <em>TypeScript</em>, компилируется ещё и с помощью <em>Babel</em>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;emitDeclarationsOnly&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"resolvejsonmodule\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"resolvejsonmodule\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>resolveJsonModule</span></h2><p><code>--resolveJsonModule</code> - данная опция, при активной опции <code>--esModuleInterop</code>\nи опции <code>--module</code>, установленной в <code>commonjs</code>, позволяет в среде <em>NodeJS</em> полноценно взаимодействовать с <em>json</em>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;resolveJsonModule&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// file config.json\n\n{\n  &quot;name&quot;: &quot;&quot;,\n  &quot;age&quot;: 0\n}\n\n// file index.ts\n\n\nimport config from &quot;./config.json&quot;;\n\nconfig.name = &#39;name&#39;; // Ok\nconfig.name = 0; // Error\n\n\n// tsconfig.json\n\n\n{\n   &quot;compilerOptions&quot;: {\n       &quot;module&quot;: &quot;commonjs&quot;,\n       &quot;resolveJsonModule&quot;: true,\n       &quot;esModuleInterop&quot;: true\n   }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"declarationmap\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"declarationmap\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>declarationMap</span></h2><p><code>--declarationMap</code> - при совместном использовании с активной опцией <code>--declaration</code> заставляет компилятор, помимо <em>.d.ts</em>, также генерировать <em>.d.ts.map</em>, которые позволяют при переходе к определению (go to definition) направлять в файл <em>.ts</em>, а не <em>.d.ts</em>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;declarationMap&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"strictbindcallapply\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"strictbindcallapply\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>strictBindCallApply</span></h2><p><code>--strictBindCallApply</code> - текущий флаг, входящий в группировку <code>--strict</code>, активирует проверку вызова таких методов, как <code>apply</code>, <code>call</code> и <code>bind</code>. Это стало возможным благодаря добавлению двух новых типов, <code>CallableFunction</code> и <code>NewableFunction</code>, которые содержат обобщенное описание методов <code>apply</code>, <code>call</code> и <code>bind</code>, как для обычных функций, так и для функций конструкторов соответственно.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;strictBindCallApply&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">function f(p0: number, p1: string){}\n\n\nf.call(null, 0, &#39;&#39;); // ok\nf.call(null, 0, 0); // error\nf.call(null, 0); // error\nf.call(null, 0, &#39;&#39;, 0); // error\n\nf.apply(null, [0, &#39;&#39;]); // ok\nf.apply(null, [0, 0]); // error\nf.apply(null, [0]); // error\nf.apply(null, [0, &#39;&#39;, 0]); // error\n\nf.bind(null, 0, &#39;&#39;); // ok\nf.bind(null, 0, 0); // error\nf.bind(null, 0); // ok\nf.bind(null, 0, &#39;&#39;, 0); // ok</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"showconfig\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"showconfig\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>showConfig</span></h2><p><code>--showConfig</code> - при активном текущем флаге компилятор <code>tsc</code> во время компиляции выведет в консоль содержимое конфигурационного файла <code>tsconfig.json</code>, разрешенного с учетом механизма расширения (<code>extends</code>), если таковой механизм имеет место быть. Этот функционал может быть очень полезным при отладке.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n  &quot;compilerOptions&quot;: {\n      &quot;showConfig&quot;: false\n  }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"build\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"build\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>build</span></h2><p><code>--build</code> - данный флаг указывает компилятору <code>tsc</code>, что проект нужно собирать как проект, использующий ссылки на другие проекты. Подробнее об этом можно узнать из главы <a href=\"/book/chapters/sborka%20s%20ispolzovaniem%20ssylok%20na%20proekty\">Сборка с использованием ссылок на проекты</a>. Также флаг <code>--build</code> может использоваться в сочетании со специфичными только для него флагами <code>--verbose</code>, <code>--dry</code>, <code>--clean</code>, <code>--force</code>, а также с флагом <code>--watch</code>.</p><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code></code>\n<strong>values</strong>: <code>paths to tsconfig.json or dir with tsconfig.json</code></p></section>\n<section class=\"content__section\" id=\"verbose\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"verbose\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>verbose</span></h2><p><code>--verbose</code> - текущий флаг указывает компилятору выводить более подробный отчет при инкрементальной сборке проекта. Используется только совместно с флагом <code>--build</code>.</p></section>\n<section class=\"content__section\" id=\"dry\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"dry\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>dry</span></h2><p><code>--dry</code> - при указании текущего флага сборка будет выполнена без порождения выходных файлов. Данный флаг полезно использовать совместно с флагом <code>--verbose</code>. Используется только совместно с флагом <code>--build</code>.</p></section>\n<section class=\"content__section\" id=\"clean\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"clean\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>clean</span></h2><p><code>--clean</code> - удаляет выходные файлы, соответствующие заданным входным. Используется только совместно с флагом <code>--build</code>.</p></section>\n<section class=\"content__section\" id=\"force\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"force\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>force</span></h2><p><code>--force</code> - принудительно выполняет неинкрементальную сборку. Используется только совместно с флагом <code>--build</code>.</p></section>\n<section class=\"content__section\" id=\"incremental\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"incremental\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>incremental</span></h2><p><code>--incremental</code> - флаг, при активации которого, после первой компиляции проекта, в заданной атирибутом <code>outDir</code> директории создается файл <code>.tsbuildinf</code>, который хранит метаинформацию об изменении файлов, что позволяет производить ускоренные инкрементальные сборки при всех последующих запусках компилятора.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n    &quot;compilerOptions&quot;: {\n        &quot;incremental&quot;: true,\n        &quot;outDir&quot;: &quot;./dest&quot;\n    }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p>В случае, когда имя выходного файла задается с помощью флага <code>--outFile</code>, имя генерируемого файла <code>.tsbuildinf</code> будет включать в себя название выходного файла (<code>.client.tsbuildinf</code> для файла <code>client.js</code> и <code>.server.tsbuildinf</code> для <code>server.js</code> соответственно).</p><p><strong>Примечание:</strong> создатели <em>TypeScript</em> предупреждают зарание, что генерируемые файлы <code>.tsbuildinf</code> не предназначены для использования сторонними библиотеками, так как их определение не будет обладать совместимостью от версии к версии.</p><p>Кроме того, с помощью флага <code>--tsBuildInfoFile</code> можно задать место сохранения файла <code>.tsbuildinf</code>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n    &quot;compilerOptions&quot;: {\n        &quot;incremental&quot;: true,\n        &quot;tsBuildInfoFile&quot;: &quot;./buildinfo&quot;,\n        &quot;outDir&quot;: &quot;./dest&quot;\n    }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"tsbuildinfofile\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"tsbuildinfofile\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>tsBuildInfoFile</span></h2><p><code>--tsBuildInfoFile</code> - флаг, с помощью которого указывается место сохранения файла <code>.tsbuildinf</code>, генерирующегося при активной опции <code>--incremental</code> и служущего для хранения метаинформации, призванной ускорить последующие сборки.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n    &quot;compilerOptions&quot;: {\n        &quot;incremental&quot;: true,\n        &quot;tsBuildInfoFile&quot;: &quot;./buildinfo&quot;,\n    }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"allowumdglobalaccess\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"allowumdglobalaccess\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>allowUmdGlobalAccess</span></h2><p><code>--allowUmdGlobalAccess</code> - при активном текущем флаге становится возможным обращение к глобальным определениям из модулей.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n    &quot;compilerOptions&quot;: {\n        &quot;allowUmdGlobalAccess&quot;: false,\n    }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// allowUmdGlobalAccess === false\n\nimport * as Rx from &#39;rxjs&#39;;\n\nconst ref = React.createRef(); // Error, обращение к глобальным переменным в модулях недопустимо</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">// allowUmdGlobalAccess === true\n\nimport * as Rx from &#39;rxjs&#39;;\n\nconst ref = React.createRef(); // Ok, доступ к глобальному определению из модуля</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div></section>\n<section class=\"content__section\" id=\"disablesourceofprojectreferenceredirect\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"disablesourceofprojectreferenceredirect\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>disableSourceOfProjectReferenceRedirect</span></h2><p><code>--disableSourceOfProjectReferenceRedirect</code> - при использовании механизма ссылок на проекты активация данного флага говорит компилятору, что в качестве информации о типах следует использовать файлы декларации <code>.d.ts</code>, а не исходные файлы проекта. Активация данного флага способна повысить производительность сборки, но вносит некоторую специфику, поэтому уместна лишь на больших проектах. Более подробно читайте об этом в главе, посвященной использованию ссылок на проекты.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n    &quot;compilerOptions&quot;: {\n        &quot;disableSourceOfProjectReferenceRedirect&quot;: false,\n    }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"usedefineforclassfields\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"usedefineforclassfields\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>useDefineForClassFields</span></h2><p><code>--useDefineForClassFields</code> - данный флаг активирует новое поведение генерации конечного кода, доступное с версии <code>v3.7</code> и предназначенное для предотвращения переопределения свойств при механизме наследования.</p><p>[Важно] Начиная с версии <code>4.0</code> логика компилятора <em>TypeScript</em> подразумевает непереопределяемое поведение равнозначное поведению при активном текущем флаге.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n    &quot;compilerOptions&quot;: {\n        &quot;useDefineForClassFields&quot;: false,\n    }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"importsnotusedasvalues\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"importsnotusedasvalues\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>importsNotUsedAsValues</span></h2><p><code>--importsNotUsedAsValues</code> - задает стратегию используемую компилятором для разрешения зависимостей модуля путем уточнения формы импорта и экспорта. Более подрбно о текущем флаге можно прочесть в главе \"Импорт и экспорт только типа и флаг --importsNotUsedAsValues\".</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">{\n    &quot;compilerOptions&quot;: {\n        &quot;importsNotUsedAsValues&quot;: &quot;remove&quot;,\n    }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>remove</code>\n<strong>values</strong>: <code>remove</code>, <code>preserve</code>, <code>error</code></p></section>\n<section class=\"content__section\" id=\"assumechangesonlyaffectdirectdependencies\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"assumechangesonlyaffectdirectdependencies\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>assumeChangesOnlyAffectDirectDependencies</span></h2><p><code>--assumeChangesOnlyAffectDirectDependencies</code> - в режиме <code>--watch</code> + <code>--incremental</code> активация данной опции позволяет компилятору отказаться от перепроверок\\перестраивания файлов, которые на основе метоинформации считаюся затронутыми. Вместо этого будет перепроверятся\\перестраиваться только непосредственно именненые файлы и файлы их импортирующие.</p><p>Представьте что <code>fileA.ts</code> импортирует <code>fileB.ts</code>, который импортирует <code>fileC.ts</code>, который импортирует <code>fileD.td</code>.</p><p>При активном рижиме <code>--watch</code> изменения в файле <code>fileD.ts</code> означает что как минимум будут проверены <code>fileC.ts</code>, <code>fileB.ts</code> и <code>fileA.ts</code>. При активной опциеи <code>--assumeChangesOnlyAffectDirectDependencies</code> проверке подвергнется лишь <code>fileA.ts</code> и <code>fileB.ts</code>.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_json\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">json</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"json[object object]\"><pre class=\"language-json[object object]\"><code class=\"language-json[object object]\">// tsconfig.json\n\n{\n    &quot;watchOptions&quot;: {\n        &quot;assumeChangesOnlyAffectDirectDependencies&quot;: &quot;false&quot;\n    }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_json\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>\n<section class=\"content__section\" id=\"watchfile\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"watchfile\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>watchFile</span></h2><p><code>--watchFile</code> - стратегия наблюдения за отдельными файлами.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_json\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">json</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"json[object object]\"><pre class=\"language-json[object object]\"><code class=\"language-json[object object]\">// tsconfig.json\n\n{\n    &quot;watchOptions&quot;: {\n        &quot;watchFile&quot;: &quot;useFsEvents&quot;\n    }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_json\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>useFsEvents</code>\n<strong>values</strong>: <code>fixedPollingInterval</code>, <code>priorityPollingInterval</code>, <code>dynamicPriorityPolling</code>, <code>useFsEvents</code>, <code>useFsEventsOnParentDirectory</code></p><p><strong>описание</strong></p><ul class=\"content__list\">\n<li><code>fixedPollingInterval</code>: Проверять каждый файл на наличие изменений несколько раз в секунду с фиксированным интервалом.</li>\n<li><code>priorityPollingInterval</code>: Проверяйть каждый файл на наличие изменений несколько раз в секунду, но использовать эвристику для проверки файлов определенных типов реже, чем других.</li>\n<li><code>dynamicPriorityPolling</code>: Использовать динамическую очередь, в которой менее часто изменяемые файлы будут проверяться реже.</li>\n<li><code>useFsEvents</code> [ПО УМОЛЧАНИЮ]: Пытаться использовать собственные события операционной системы / файловой системы для изменения файлов.</li>\n<li><code>useFsEventsOnParentDirectory</code>: Пытаться использовать собственные события операционной системы/файловой системы для прослушивания изменений в каталогах, содержащих файл. Это может использовать меньше файловых наблюдателей, но также быть менее точным.</li>\n</ul></section>\n<section class=\"content__section\" id=\"watchdirectory\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"watchdirectory\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>watchDirectory</span></h2><p><code>--watchDirectory</code> - стратегия наблюдения за целыми деревьями каталогов в системах, в которых отсутствует рекурсивная функция наблюдения за файлами.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_json\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">json</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"json[object object]\"><pre class=\"language-json[object object]\"><code class=\"language-json[object object]\">// tsconfig.json\n\n{\n    &quot;watchOptions&quot;: {\n        &quot;watchDirectory&quot;: &quot;useFsEvents&quot;\n    }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_json\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>useFsEvents</code>\n<strong>values</strong>: <code>fixedPollingInterval</code>, <code>dynamicPriorityPolling</code>, <code>useFsEvents</code></p><p><strong>описание</strong></p><ul class=\"content__list\">\n<li><code>fixedPollingInterval</code>: Проверять каждый каталог на наличие изменений несколько раз в секунду с фиксированным интервалом.</li>\n<li><code>dynamicPriorityPolling</code>: Использовать динамическую очередь, в которой менее часто изменяемые каталоги будут проверяться реже.</li>\n<li><code>useFsEvents</code>[ПО УМОЛЧАНИЮ]: Пытаться использовать собственные события операционной системы / файловой системы для изменений каталога.</li>\n</ul></section>\n<section class=\"content__section\" id=\"fallbackpolling\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"fallbackpolling\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>fallbackPolling</span></h2><p><code>--fallbackPolling</code> - при использовании событий файловой системы этот параметр определяет стратегию опроса, которая используется, когда в системе заканчиваются собственные наблюдатели файлов и / или не поддерживаются собственные средства простмотра файлов.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_json\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">json</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"json[object object]\"><pre class=\"language-json[object object]\"><code class=\"language-json[object object]\">// tsconfig.json\n\n{\n    &quot;watchOptions&quot;: {\n        &quot;fallbackPolling&quot;: &quot;dynamicPriorityPolling&quot;\n    }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_json\"></div>\n</div><p><strong>type</strong>: <code>string</code>\n<strong>default</strong>: <code>useFsEvents</code>\n<strong>values</strong>: <code>fixedPollingInterval</code>, <code>dynamicPriorityPolling</code>, <code>priorityPollingInterval</code></p><p><strong>описание</strong></p><ul class=\"content__list\">\n<li><code>fixedPollingInterval</code>: Проверять каждый файл на наличие изменений несколько раз в секунду с фиксированным интервалом.</li>\n<li><code>dynamicPriorityPolling</code>: Использовать динамическую очередь, в которой менее часто изменяемые файлы будут проверяться реже.</li>\n<li><code>priorityPollingInterval</code>: Проверяйть каждый файл на наличие изменений несколько раз в секунду, но использовать эвристику для проверки файлов определенных типов реже, чем других.</li>\n</ul></section>\n<section class=\"content__section\" id=\"synchronouswatchdirectory\"><h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"synchronouswatchdirectory\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>synchronousWatchDirectory</span></h2><p><code>--synchronousWatchDirectory</code> - отключить отложенное наблюдение за каталогами.</p><div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_json\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">json</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"json[object object]\"><pre class=\"language-json[object object]\"><code class=\"language-json[object object]\">// tsconfig.json\n\n{\n    &quot;watchOptions&quot;: {\n        &quot;synchronousWatchDirectory&quot;: &quot;false&quot;\n    }\n}</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_json\"></div>\n</div><p><strong>type</strong>: <code>boolean</code>\n<strong>default</strong>: <code>false</code>\n<strong>values</strong>: <code>true</code>, <code>false</code></p></section>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/book/undefined/060\\.\\(Компилятор\\) Опции компилятора/content.md"},"pageNavDataAll":[{"name":"Что такое и для чего нужен TypeScript","path":"chto takoe i dlya chego nujen typescript","sections":[{"name":"Что такое TypeScript","path":"chto takoe typescript"},{"name":"История TypeScript","path":"istoriya typescript"},{"name":"Для чего нужен TypeScript","path":"dlya chego nujen typescript"},{"name":"Зачем разработчику TypeScript","path":"zachem razrabotchiku typescript"}]},{"name":"Вступление","path":"vstuplenie","sections":[]},{"name":"Система типов, тип данных, значимые и ссылочные типы","path":"sistema tipov, tip dannyh, znachimye i ssylochnye tipy","sections":[{"name":"Система Типов","path":"sistema tipov"},{"name":"Тип данных (тип)","path":"tip dannyh (tip)"},{"name":"Тип данных, передающийся по значению (примитивный тип)","path":"tip dannyh, peredaushchiisya po znacheniu (primitivnyi tip)"},{"name":"Тип данных, передающийся по ссылке","path":"tip dannyh, peredaushchiisya po ssylke"}]},{"name":"Связывание, типизация, вывод типов","path":"svyazyvanie, tipizaciya, vyvod tipov","sections":[{"name":"Обработка кода компилятором","path":"obrabotka koda kompilyatorom"},{"name":"Лексический анализ (токенизация - tokenizing)","path":"leksicheskii analiz (tokenizaciya - tokenizing)"},{"name":"Синтаксический анализ (разбор - parsing)","path":"sintaksicheskii analiz (razbor - parsing)"},{"name":"Семантический анализ","path":"semanticheskii analiz"},{"name":"Связывание (Binding)","path":"svyazyvanie (binding)"},{"name":"Типизация","path":"tipizaciya"},{"name":"Вывод Типов (type inference)","path":"vyvod tipov (type inference)"}]},{"name":"Преобразование типов","path":"preobrazovanie tipov","sections":[{"name":"Неявные Преобразования","path":"neyavnye preobrazovaniya"},{"name":"Явные Преобразования","path":"yavnye preobrazovaniya"}]},{"name":"Типизированные и нетипизированные языки программирования","path":"tipizirovannye i netipizirovannye yazyki programmirovaniya","sections":[{"name":"Нетипизированные языки","path":"netipizirovannye yazyki"},{"name":"Типизированные языки","path":"tipizirovannye yazyki"}]},{"name":"Статическая и динамическая типизация","path":"staticheskaya i dinamicheskaya tipizaciya","sections":[{"name":"Статическая типизация (Static Typing)","path":"staticheskaya tipizaciya (static typing)"},{"name":"Динамическая Типизация (Dynamic Typing)","path":"dinamicheskaya tipizaciya (dynamic typing)"}]},{"name":"Сильная и слабая типизация","path":"silnaya i slabaya tipizaciya","sections":[{"name":"Сильная типизация (strongly typed)","path":"silnaya tipizaciya (strongly typed)"},{"name":"Слабая типизация (weakly typed)","path":"slabaya tipizaciya (weakly typed)"}]},{"name":"Явная и неявная типизация","path":"yavnaya i neyavnaya tipizaciya","sections":[{"name":"Явная типизация (explicit typing)","path":"yavnaya tipizaciya (explicit typing)"},{"name":"Неявная типизация (implicit typing)","path":"neyavnaya tipizaciya (implicit typing)"}]},{"name":"Совместимость типов на основе вида типизации","path":"sovmestimost tipov na osnove vida tipizacii","sections":[{"name":"Совместимость типов (Types Compatibility)","path":"sovmestimost tipov (types compatibility)"},{"name":"Номинативная Типизация (nominative typing)","path":"nominativnaya tipizaciya (nominative typing)"},{"name":"Структурная Типизация (structural typing)","path":"strukturnaya tipizaciya (structural typing)"},{"name":"Утиная Типизация (Duck typing)","path":"utinaya tipizaciya (duck typing)"}]},{"name":"Совместимость типов на основе вариантности","path":"sovmestimost tipov na osnove variantnosti","sections":[{"name":"Вариантность","path":"variantnost"},{"name":"Иерархия наследования","path":"ierarhiya nasledovaniya"},{"name":"Ковариантность","path":"kovariantnost"},{"name":"Контравариантность","path":"kontravariantnost"},{"name":"Инвариантность","path":"invariantnost"},{"name":"Бивариантность","path":"bivariantnost"}]},{"name":"Аннотация Типов","path":"annotaciya tipov","sections":[{"name":"Аннотация Типов - общее","path":"annotaciya tipov - obshchee"},{"name":"Аннотация типа","path":"annotaciya tipa"},{"name":"Синтаксические конструкции var, let, const","path":"sintaksicheskie konstrukcii var, let, const"},{"name":"Функции (function)","path":"funkcii (function)"},{"name":"Стрелочные Функции (arrow function)","path":"strelochnye funkcii (arrow function)"},{"name":"Классы (class)","path":"klassy (class)"},{"name":"Сравнение Синтаксиса TypeScript и JavaScript","path":"sravnenie sintaksisa typescript i javascript"},{"name":"Итог","path":"itog"}]},{"name":"Базовый Тип Any","path":"bazovyi tip any","sections":[{"name":"Any (any) произвольный тип","path":"any (any) proizvolnyi tip"}]},{"name":"Примитивные типы Number, String, Boolean, Symbol, BigInt","path":"primitivnye tipy number, string, boolean, symbol, bigint","sections":[{"name":"Важно","path":"vajno"},{"name":"Number (number) примитивный числовой тип","path":"number (number) primitivnyi chislovoi tip"},{"name":"String (string) примитивный строковый тип","path":"string (string) primitivnyi strokovyi tip"},{"name":"Boolean (boolean) примитивный логический тип","path":"boolean (boolean) primitivnyi logicheskii tip"},{"name":"Symbol (symbol) примитивный символьный тип","path":"symbol (symbol) primitivnyi simvolnyi tip"},{"name":"BigInt (bigint) примитивный числовой тип","path":"bigint (bigint) primitivnyi chislovoi tip"}]},{"name":"Примитивные типы Null, Undefined, Void, Never, Unknown","path":"primitivnye tipy null, undefined, void, never, unknown","sections":[{"name":"Важно","path":"vajno"},{"name":"Null (null) примитивный null тип","path":"null (null) primitivnyi null tip"},{"name":"Undefined (undefined) примитивный неопределенный тип","path":"undefined (undefined) primitivnyi neopredelennyi tip"},{"name":"Void (void) отсутствие конкретного типа","path":"void (void) otsutstvie konkretnogo tipa"},{"name":"Never (never) примитивный тип","path":"never (never) primitivnyi tip"},{"name":"Unknown (unknown)","path":"unknown (unknown)"}]},{"name":"Примитивный Тип Enum","path":"primitivnyi tip enum","sections":[{"name":"Примитивный Тип Enum","path":"primitivnyi tip enum"},{"name":"Enum (enum) примитивный перечисляемый тип","path":"enum (enum) primitivnyi perechislyaemyi tip"},{"name":"Перечисления с числовым значением","path":"perechisleniya s chislovym znacheniem"},{"name":"Перечисления со строковым значением","path":"perechisleniya so strokovym znacheniem"},{"name":"Смешанное перечисление (mixed enum)","path":"smeshannoe perechislenie (mixed enum)"},{"name":"Перечисление в качестве типа данных","path":"perechislenie v kachestve tipa dannyh"},{"name":"Перечисление const с числовым и строковым значением","path":"perechislenie const s chislovym i strokovym znacheniem"},{"name":"Итог","path":"itog"}]},{"name":"Типы - Union, Intersection","path":"tipy - union, intersection","sections":[{"name":"Тип Объединение (Union Types)","path":"tip obedinenie (union types)"},{"name":"Тип Пересечение (Intersection Type)","path":"tip peresechenie (intersection type)"},{"name":"Итоги","path":"itogi"}]},{"name":"Type Queries (запросы типа), Alias (псевдонимы типа)","path":"type queries (zaprosy tipa), alias (psevdonimy tipa)","sections":[{"name":"Запросы Типа (Type Queries)","path":"zaprosy tipa (type queries)"},{"name":"Псевдонимы Типов (Type Aliases)","path":"psevdonimy tipov (type aliases)"},{"name":"Итоги","path":"itogi"}]},{"name":"Примитивные литеральные типы Number, String, Boolean, Unique Symbol, Enum","path":"primitivnye literalnye tipy number, string, boolean, unique symbol, enum","sections":[{"name":"Примитивные типы — литеральные типы Number, String, Boolean, Unique Symbol, Enum","path":"primitivnye tipy — literalnye tipy number, string, boolean, unique symbol, enum"},{"name":"Литеральный тип Number (Numeric Literal Types)","path":"literalnyi tip number (numeric literal types)"},{"name":"Литеральный тип String (String Literal Types)","path":"literalnyi tip string (string literal types)"},{"name":"Литеральный Тип Boolean (Boolean Literal Types)","path":"literalnyi tip boolean (boolean literal types)"},{"name":"Литеральный Тип Unique Symbol (unique symbol) уникальный символьный тип","path":"literalnyi tip unique symbol (unique symbol) unikalnyi simvolnyi tip"},{"name":"Литеральный тип Enum (Enum Literal Types)","path":"literalnyi tip enum (enum literal types)"},{"name":"Итоги","path":"itogi"}]},{"name":"Object, Array, Tuple","path":"object, array, tuple","sections":[{"name":"Типы — Object, Array, Tuple","path":"tipy — object, array, tuple"},{"name":"Object (object) — ссылочный объектный тип","path":"object (object) — ssylochnyi obektnyi tip"},{"name":"Array (type[]) ссылочный массивоподобный тип","path":"array (type[]) ssylochnyi massivopodobnyi tip"},{"name":"Tuple ([T0, T1, …, Tn]) тип кортеж","path":"tuple ([t0, t1, …, tn]) tip kortej"},{"name":"Итоги","path":"itogi"}]},{"name":"Function, Functional Types","path":"function, functional types","sections":[{"name":"Function, Functional Types","path":"function, functional types"},{"name":"Function Types - тип функция","path":"function types - tip funkciya"},{"name":"Functional Types - функциональный тип","path":"functional types - funkcionalnyi tip"},{"name":"this в сигнатуре функции","path":"this v signature funkcii"},{"name":"Итог","path":"itog"}]},{"name":"Interfaces","path":"interfaces","sections":[{"name":"Общая теория","path":"obshchaya teoriya"},{"name":"Интерфейс в TypeScript","path":"interfeis v typescript"},{"name":"Объявление (declaration)","path":"obyavlenie (declaration)"},{"name":"Конвенции именования интерфейсов","path":"konvencii imenovaniya interfeisov"},{"name":"Реализация интерфейса (implements)","path":"realizaciya interfeisa (implements)"},{"name":"Декларация свойств get и set (accessors)","path":"deklaraciya svoistv get i set (accessors)"},{"name":"Указание интерфейса в качестве типа (interface types)","path":"ukazanie interfeisa v kachestve tipa (interface types)"},{"name":"Расширение интерфейсов (extends interface)","path":"rasshirenie interfeisov (extends interface)"},{"name":"Расширение интерфейсом класса (extends class)","path":"rasshirenie interfeisom klassa (extends class)"},{"name":"Описание класса (функции-конструктора)","path":"opisanie klassa (funkcii-konstruktora)"},{"name":"Описание функционального выражения","path":"opisanie funkcionalnogo vyrajeniya"},{"name":"Описание индексных членов в объектных типов","path":"opisanie indeksnyh chlenov v obektnyh tipov"},{"name":"Инлайн интерфейсы (Inline Interface)","path":"inlain interfeisy (inline interface)"},{"name":"Слияние интерфейсов","path":"sliyanie interfeisov"}]},{"name":"Объектные типы с индексными членами (объектный тип с динамическими ключами)","path":"obektnye tipy s indeksnymi chlenami (obektnyi tip s dinamicheskimi kluchami)","sections":[{"name":"Типы — Объектные типы с индексными членами (объектный тип с динамическими ключами)","path":"tipy — obektnye tipy s indeksnymi chlenami (obektnyi tip s dinamicheskimi kluchami)"}]},{"name":"Модификаторы доступа (Access Modifiers)","path":"modifikatory dostupa (access modifiers)","sections":[{"name":"Модификаторы доступа (Access Modifiers)","path":"modifikatory dostupa (access modifiers)"},{"name":"Модификатор доступа public (публичный)","path":"modifikator dostupa public (publichnyi)"},{"name":"Модификатор доступа private (закрытый или скрытый)","path":"modifikator dostupa private (zakrytyi ili skrytyi)"},{"name":"Модификатор доступа protected (защищенный)","path":"modifikator dostupa protected (zashchishchennyi)"},{"name":"Модификаторы доступа и конструкторы класса","path":"modifikatory dostupa i konstruktory klassa"},{"name":"Быстрое объявление полей","path":"bystroe obyavlenie polei"}]},{"name":"Закрытые поля определенные спецификацией ECMAScript","path":"zakrytye polya opredelennye specifikaciei ecmascript","sections":[{"name":"Закрытые поля определенные спецификацией ECMAScript","path":"zakrytye polya opredelennye specifikaciei ecmascript"}]},{"name":"Абстрактные классы (abstract classes)","path":"abstraktnye klassy (abstract classes)","sections":[{"name":"Абстрактные классы (abstract classes)","path":"abstraktnye klassy (abstract classes)"},{"name":"Общие характеристики","path":"obshchie harakteristiki"},{"name":"Теория","path":"teoriya"}]},{"name":"Полиморфный тип this","path":"polimorfnyi tip this","sections":[{"name":"Полиморфный тип this","path":"polimorfnyi tip this"}]},{"name":"Модификатор readonly (только для чтения)","path":"modifikator readonly (tolko dlya chteniya)","sections":[{"name":"Модификатор readonly (только для чтения)","path":"modifikator readonly (tolko dlya chteniya)"}]},{"name":"Definite Assignment Assertion Modifier","path":"definite assignment assertion modifier","sections":[{"name":"Классы — Definite Assignment Assertion Modifier","path":"klassy — definite assignment assertion modifier"}]},{"name":"Классы — Тонкости","path":"klassy — tonkosti","sections":[{"name":"Классы — Тонкости","path":"klassy — tonkosti"},{"name":"Классы - Тонкости implements","path":"klassy - tonkosti implements"},{"name":"Частичное Слияние интерфейса с классом","path":"chastichnoe sliyanie interfeisa s klassom"},{"name":"Переопределение свойств полями и наоборот при наследовании","path":"pereopredelenie svoistv polyami i naoborot pri nasledovanii"}]},{"name":"Различия var, let, const и модификатора readonly при неявном указании примитивных типов","path":"razlichiya var, let, const i modifikatora readonly pri neyavnom ukazanii primitivnyh tipov","sections":[{"name":"Различия var, let, const и модификатора readonly при неявном указании примитивных типов","path":"razlichiya var, let, const i modifikatora readonly pri neyavnom ukazanii primitivnyh tipov"},{"name":"Итог","path":"itog"}]},{"name":"Optional, Not-Null, Not-Undefined, Definite Assignment Assertion","path":"optional, not-null, not-undefined, definite assignment assertion","sections":[{"name":"Операторы — Optional, Not-Null, Not-Undefined, Definite Assignment Assertion","path":"operatory — optional, not-null, not-undefined, definite assignment assertion"},{"name":"Необязательные поля, параметры и методы (Optional Fields, Parameters and Methods)","path":"neobyazatelnye polya, parametry i metody (optional fields, parameters and methods)"},{"name":"Оператор ! (Non-Null and Non-Undefined Operator)","path":"operator ! (non-null and non-undefined operator)"},{"name":"Оператор ! (Definite Assignment Assertion)","path":"operator ! (definite assignment assertion)"},{"name":"Итог","path":"itog"}]},{"name":"Обобщения (Generics)","path":"obobshcheniya (generics)","sections":[{"name":"Обобщения - общие понятия","path":"obobshcheniya - obshchie ponyatiya"},{"name":"Обобщения в TypeScript","path":"obobshcheniya v typescript"},{"name":"Параметры типа - extends (generic constraints)","path":"parametry tipa - extends (generic constraints)"},{"name":"Параметра типа - значение по умолчанию = (generic parameter defaults)","path":"parametra tipa - znachenie po umolchaniu = (generic parameter defaults)"},{"name":"Параметры типа - как тип данных","path":"parametry tipa - kak tip dannyh"}]},{"name":"Дискриминантное Объединения (Discriminated Union)","path":"diskriminantnoe obedineniya (discriminated union)","sections":[{"name":"Дискриминантное Объединения (Discriminated Union)","path":"diskriminantnoe obedineniya (discriminated union)"}]},{"name":"Импорт и экспорт только типа","path":"import i eksport tolko tipa","sections":[{"name":"Импорт и экспорт только типа","path":"import i eksport tolko tipa"}]},{"name":"Утверждение Типов (Type Assertion)","path":"utverjdenie tipov (type assertion)","sections":[{"name":"Утверждение Типов - общее","path":"utverjdenie tipov - obshchee"},{"name":"Утверждение Типа `<Type>` синтаксис","path":"utverjdenie tipa `<type>` sintaksis"},{"name":"Утверждение Типа с помощью оператора as","path":"utverjdenie tipa s pomoshchu operatora as"},{"name":"Приведение (утверждение) к константе (const assertion)","path":"privedenie (utverjdenie) k konstante (const assertion)"},{"name":"Утверждение в сигнатуре (Signature Assertion)","path":"utverjdenie v signature (signature assertion)"},{"name":"Итоги","path":"itogi"}]},{"name":"Защитники типа","path":"zashchitniki tipa","sections":[{"name":"Защитники Типа - общее","path":"zashchitniki tipa - obshchee"},{"name":"Сужение диапазона множества типов на основе типа данных","path":"sujenie diapazona mnojestva tipov na osnove tipa dannyh"},{"name":"Сужение диапазона множества типов на основе признаков присущих типу Tagged Union","path":"sujenie diapazona mnojestva tipov na osnove priznakov prisushchih tipu tagged union"},{"name":"Сужение диапазона множества типов на основе доступных членов объекта","path":"sujenie diapazona mnojestva tipov na osnove dostupnyh chlenov obekta"},{"name":"Сужение диапазона множества типов на основе функции, определенной пользователем","path":"sujenie diapazona mnojestva tipov na osnove funkcii, opredelennoi polzovatelem"}]},{"name":"Вывод типов","path":"vyvod tipov","sections":[{"name":"Вывод типов - общие сведения","path":"vyvod tipov - obshchie svedeniya"},{"name":"Вывод примитивных типов","path":"vyvod primitivnyh tipov"},{"name":"Вывод примитивных типов для констант (const) и полей только для чтения (readonly)","path":"vyvod primitivnyh tipov dlya konstant (const) i polei tolko dlya chteniya (readonly)"},{"name":"Вывод объектных типов","path":"vyvod obektnyh tipov"},{"name":"Вывод типа для полей класса на основе инициализации их в конструкторе","path":"vyvod tipa dlya polei klassa na osnove inicializacii ih v konstruktore"},{"name":"Вывод объединенных (Union) типов","path":"vyvod obedinennyh (union) tipov"},{"name":"Вывод пересечения (Intersection) с дискриминантными полями","path":"vyvod peresecheniya (intersection) s diskriminantnymi polyami"},{"name":"Вывод типов кортеж (Tuple)","path":"vyvod tipov kortej (tuple)"}]},{"name":"Совместимость объектных типов (Compatible Object Types)","path":"sovmestimost obektnyh tipov (compatible object types)","sections":[{"name":"Важно","path":"vajno"},{"name":"Совместимость объектных типов в TypeScript","path":"sovmestimost obektnyh tipov v typescript"}]},{"name":"Совместимость функциональных типов (Compatible Function Types)","path":"sovmestimost funkcionalnyh tipov (compatible function types)","sections":[{"name":"важно","path":"vajno"},{"name":"Совместимость параметров","path":"sovmestimost parametrov"},{"name":"Совместимость возвращаемого значения","path":"sovmestimost vozvrashchaemogo znacheniya"}]},{"name":"Совместимость объединений (Union Types)","path":"sovmestimost obedinenii (union types)","sections":[{"name":"Совместимость","path":"sovmestimost"}]},{"name":"Типизация в TypeScript","path":"tipizaciya v typescript","sections":[{"name":"Общие сведения","path":"obshchie svedeniya"},{"name":"Статическая типизация (static typing)","path":"staticheskaya tipizaciya (static typing)"},{"name":"Сильная типизация (strongly typed)","path":"silnaya tipizaciya (strongly typed)"},{"name":"Явно типизированный (explicit typing) с выводом типов (type inference)","path":"yavno tipizirovannyi (explicit typing) s vyvodom tipov (type inference)"},{"name":"Совместимость типов (Type Compatibility), структурная типизация (structural typing)","path":"sovmestimost tipov (type compatibility), strukturnaya tipizaciya (structural typing)"},{"name":"Вариантность (variance)","path":"variantnost (variance)"},{"name":"Наилучший общий тип (Best common type)","path":"nailuchshii obshchii tip (best common type)"},{"name":"Контекстный тип (Contextual Type)","path":"kontekstnyi tip (contextual type)"},{"name":"Итог","path":"itog"}]},{"name":"Оператор keyof, Lookup Types, Mapped Types, Mapped Types - префиксы + и -","path":"operator keyof, lookup types, mapped types, mapped types - prefiksy + i -","sections":[{"name":"Оператор keyof, Lookup Types, Mapped Types, Mapped Types - префиксы + и -","path":"operator keyof, lookup types, mapped types, mapped types - prefiksy + i -"},{"name":"Запрос ключей keyof","path":"zapros kluchei keyof"},{"name":"Поиск типов (Lookup Types)","path":"poisk tipov (lookup types)"},{"name":"Сопоставление типов (Mapped Types)","path":"sopostavlenie tipov (mapped types)"},{"name":"Префиксы + и - в сопоставленных типах","path":"prefiksy + i - v sopostavlennyh tipah"}]},{"name":"Условные типы (Conditional Types)","path":"uslovnye tipy (conditional types)","sections":[{"name":"Условные типы (Conditional Types)","path":"uslovnye tipy (conditional types)"},{"name":"Распределительные условные типы (Distributive Conditional Types)","path":"raspredelitelnye uslovnye tipy (distributive conditional types)"},{"name":"Вывод типов в условном типе","path":"vyvod tipov v uslovnom tipe"}]},{"name":"Readonly, Partial, Required, Pick, Record","path":"readonly, partial, required, pick, record","sections":[{"name":"Расширенные типы — Readonly, Partial, Required, Pick, Record","path":"rasshirennye tipy — readonly, partial, required, pick, record"},{"name":"Readonly","path":"readonly"},{"name":"Partial","path":"partial"},{"name":"Required","path":"required"},{"name":"Pick","path":"pick"},{"name":"Record","path":"record"}]},{"name":"Exclude, Extract, NonNullable, ReturnType, InstanceType, Omit","path":"exclude, extract, nonnullable, returntype, instancetype, omit","sections":[{"name":"Расширенные типы — Exclude, Extract, NonNullable, ReturnType, InstanceType, Omit","path":"rasshirennye tipy — exclude, extract, nonnullable, returntype, instancetype, omit"},{"name":"Exclude","path":"exclude"},{"name":"Extract","path":"extract"},{"name":"NonNullable","path":"nonnullable"},{"name":"ReturnType","path":"returntype"},{"name":"InstanceType","path":"instancetype"},{"name":"Parameters","path":"parameters"},{"name":"ConstructorParameters","path":"constructorparameters"},{"name":"Тип Omit","path":"tip omit"}]},{"name":"Массивоподобные readonly типы, ReadonlyArray, ReadonlyMap, ReadonlySet","path":"massivopodobnye readonly tipy, readonlyarray, readonlymap, readonlyset","sections":[{"name":"Массивоподобные readonly типы","path":"massivopodobnye readonly tipy"},{"name":"ReadonlyArray","path":"readonlyarray"},{"name":"ReadonlyMap","path":"readonlymap"},{"name":"ReadonlySet","path":"readonlyset"}]},{"name":"Синтаксические конструкции и операторы","path":"sintaksicheskie konstrukcii i operatory","sections":[{"name":"Операторы присваивания короткого замыкания (&&=, ||=, &&=)","path":"operatory prisvaivaniya korotkogo zamykaniya (&&=, ||=, &&=)"},{"name":"Операнды для delete должны быть необязательными","path":"operandy dlya delete doljny byt neobyazatelnymi"}]},{"name":"React - расширение .tsx","path":"react - rasshirenie .tsx","sections":[{"name":"React — расширение .tsx","path":"react — rasshirenie .tsx"}]},{"name":"Функциональные компоненты","path":"funkcionalnye komponenty","sections":[{"name":"Определение компонента как Function Declaration","path":"opredelenie komponenta kak function declaration"},{"name":"Определение компонента как Function Expression","path":"opredelenie komponenta kak function expression"}]},{"name":"Классовые компоненты","path":"klassovye komponenty","sections":[{"name":"React — производные от Component","path":"react — proizvodnye ot component"},{"name":"React - производные от PureComponent","path":"react - proizvodnye ot purecomponent"}]},{"name":"Универсальные компоненты","path":"universalnye komponenty","sections":[{"name":"Обобщенные компоненты (Generics Component)","path":"obobshchennye komponenty (generics component)"}]},{"name":"Типизированные хуки","path":"tipizirovannye huki","sections":[{"name":"Предопределенные хуки","path":"predopredelennye huki"},{"name":"Пользовательский хук","path":"polzovatelskii huk"}]},{"name":"Контекст (Context)","path":"kontekst (context)","sections":[{"name":"Определение контекста","path":"opredelenie konteksta"}]},{"name":"HOC (Higher-Order Components)","path":"hoc (higher-order components)","sections":[{"name":"Определение hoc","path":"opredelenie hoc"},{"name":"Определение hoc на основе функционального компонента","path":"opredelenie hoc na osnove funkcionalnogo komponenta"},{"name":"Определение hoc на основе классового компонента","path":"opredelenie hoc na osnove klassovogo komponenta"}]},{"name":"Пространства имен (namespace) и модули (module)","path":"prostranstva imen (namespace) i moduli (module)","sections":[{"name":"Namespace и module — предназначение","path":"namespace i module — prednaznachenie"},{"name":"Namespace - определение","path":"namespace - opredelenie"},{"name":"Модули (export, import) — определение","path":"moduli (export, import) — opredelenie"},{"name":"Конфигурирование проекта","path":"konfigurirovanie proekta"}]},{"name":"Настройка рабочего окружения","path":"nastroika rabochego okrujeniya","sections":[{"name":"Настройка рабочего окружения","path":"nastroika rabochego okrujeniya"},{"name":"Сборка проекта с помощью tsc (TypeScript compiler)","path":"sborka proekta s pomoshchu tsc (typescript compiler)"}]},{"name":"Сборка с использованием ссылок на проекты","path":"sborka s ispolzovaniem ssylok na proekty","sections":[{"name":"Ссылки на проекты","path":"ssylki na proekty"}]},{"name":"Декларации","path":"deklaracii","sections":[{"name":"Что такое декларация (Declaration)","path":"chto takoe deklaraciya (declaration)"},{"name":"Установка деклараций с помощью @types","path":"ustanovka deklaracii s pomoshchu @types"},{"name":"Подготовка к созданию декларации","path":"podgotovka k sozdaniu deklaracii"},{"name":"Разновидности деклараций","path":"raznovidnosti deklaracii"},{"name":"Декларации и область видимости","path":"deklaracii i oblast vidimosti"},{"name":"Декларации для библиотек с одной точкой входа","path":"deklaracii dlya bibliotek s odnoi tochkoi vhoda"},{"name":"Декларации для библиотек с множеством точек входа","path":"deklaracii dlya bibliotek s mnojestvom tochek vhoda"},{"name":"Создание деклараций вручную","path":"sozdanie deklaracii vruchnuu"},{"name":"Директива с тройным слешем (triple-slash directives)","path":"direktiva s troinym sleshem (triple-slash directives)"},{"name":"Импортирование декларации (import)","path":"importirovanie deklaracii (import)"}]},{"name":"Публикация","path":"publikaciya","sections":[{"name":"Публикация","path":"publikaciya"}]},{"name":"Опции компилятора","path":"opcii kompilyatora","sections":[{"name":"strict","path":"strict"},{"name":"suppressExcessPropertyErrors","path":"suppressexcesspropertyerrors"},{"name":"suppressImplicitAnyIndexErrors","path":"suppressimplicitanyindexerrors"},{"name":"noImplicitAny","path":"noimplicitany"},{"name":"checkJs","path":"checkjs"},{"name":"JSX","path":"jsx"},{"name":"jsxFactory","path":"jsxfactory"},{"name":"target (t)","path":"target (t)"},{"name":"extends","path":"extends"},{"name":"alwaysStrict","path":"alwaysstrict"},{"name":"strictNullChecks","path":"strictnullchecks"},{"name":"stripInternal","path":"stripinternal"},{"name":"noImplicitThis","path":"noimplicitthis"},{"name":"noImplicitUseStrict","path":"noimplicitusestrict"},{"name":"baseUrl","path":"baseurl"},{"name":"paths","path":"paths"},{"name":"rootDir","path":"rootdir"},{"name":"rootDirs","path":"rootdirs"},{"name":"traceResolution","path":"traceresolution"},{"name":"lib","path":"lib"},{"name":"noLib","path":"nolib"},{"name":"noResolve","path":"noresolve"},{"name":"noStrictGenericChecks","path":"nostrictgenericchecks"},{"name":"preserveConstEnums","path":"preserveconstenums"},{"name":"removeComments","path":"removecomments"},{"name":"noUnusedLocals","path":"nounusedlocals"},{"name":"noUnusedParameters","path":"nounusedparameters"},{"name":"skipLibCheck","path":"skiplibcheck"},{"name":"declarationDir","path":"declarationdir"},{"name":"types","path":"types"},{"name":"typeRoots","path":"typeroots"},{"name":"allowUnusedLabels","path":"allowunusedlabels"},{"name":"noImplicitReturns","path":"noimplicitreturns"},{"name":"noFallthroughCasesInSwitch","path":"nofallthroughcasesinswitch"},{"name":"outFile","path":"outfile"},{"name":"allowSyntheticDefaultImports","path":"allowsyntheticdefaultimports"},{"name":"allowUnreachableCode","path":"allowunreachablecode"},{"name":"allowJs","path":"allowjs"},{"name":"reactNamespace","path":"reactnamespace"},{"name":"pretty","path":"pretty"},{"name":"moduleResolution","path":"moduleresolution"},{"name":"exclude","path":"exclude"},{"name":"noEmitHelpers","path":"noemithelpers"},{"name":"newLine","path":"newline"},{"name":"inlineSourceMap","path":"inlinesourcemap"},{"name":"inlineSources","path":"inlinesources"},{"name":"noEmitOnError","path":"noemitonerror"},{"name":"noEmit","path":"noemit"},{"name":"charset","path":"charset"},{"name":"diagnostics","path":"diagnostics"},{"name":"declaration","path":"declaration"},{"name":"downlevelIteration","path":"downleveliteration"},{"name":"emitBOM","path":"emitbom"},{"name":"emitDecoratorMetadata","path":"emitdecoratormetadata"},{"name":"forceConsistentCasingInFileNames","path":"forceconsistentcasinginfilenames"},{"name":"help (h)","path":"help (h)"},{"name":"importHelpers","path":"importhelpers"},{"name":"isolatedModules","path":"isolatedmodules"},{"name":"listEmittedFiles","path":"listemittedfiles"},{"name":"listFiles","path":"listfiles"},{"name":"sourceRoot","path":"sourceroot"},{"name":"mapRoot","path":"maproot"},{"name":"maxNodeModuleJsDepth","path":"maxnodemodulejsdepth"},{"name":"project (p)","path":"project (p)"},{"name":"init","path":"init"},{"name":"version (v)","path":"version (v)"},{"name":"watch (w)","path":"watch (w)"},{"name":"preserveSymlinks","path":"preservesymlinks"},{"name":"strictFunctionTypes","path":"strictfunctiontypes"},{"name":"locale","path":"locale"},{"name":"strinctPropertyInitialization","path":"strinctpropertyinitialization"},{"name":"esModuleInterop","path":"esmoduleinterop"},{"name":"emitDeclarationsOnly","path":"emitdeclarationsonly"},{"name":"resolveJsonModule","path":"resolvejsonmodule"},{"name":"declarationMap","path":"declarationmap"},{"name":"strictBindCallApply","path":"strictbindcallapply"},{"name":"showConfig","path":"showconfig"},{"name":"build","path":"build"},{"name":"verbose","path":"verbose"},{"name":"dry","path":"dry"},{"name":"clean","path":"clean"},{"name":"force","path":"force"},{"name":"incremental","path":"incremental"},{"name":"tsBuildInfoFile","path":"tsbuildinfofile"},{"name":"allowUmdGlobalAccess","path":"allowumdglobalaccess"},{"name":"disableSourceOfProjectReferenceRedirect","path":"disablesourceofprojectreferenceredirect"},{"name":"useDefineForClassFields","path":"usedefineforclassfields"},{"name":"importsNotUsedAsValues","path":"importsnotusedasvalues"},{"name":"assumeChangesOnlyAffectDirectDependencies","path":"assumechangesonlyaffectdirectdependencies"},{"name":"watchFile","path":"watchfile"},{"name":"watchDirectory","path":"watchdirectory"},{"name":"fallbackPolling","path":"fallbackpolling"},{"name":"synchronousWatchDirectory","path":"synchronouswatchdirectory"}]}]}},"staticQueryHashes":["408059355","63159454"]}