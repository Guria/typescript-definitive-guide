{"componentChunkName":"component---src-page-templates-what-is-new-page-what-is-new-page-provider-tsx","path":"/what-is-new/3.5","result":{"pageContext":{"localization":{"lang":"ru","title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи.","appNavigation":[{"id":"index","path":"/","name":"Главная"},{"id":"book-contents","path":"/book/chapters","name":"Оглавление"},{"id":"what-is-new-contents","path":"/what-is-new","name":"Что нового?"},{"id":"pdf","path":"/pdf","name":"PDF Версия"}],"notification":{"behaviorNotification":{"copyLink":"Ссылка скопирована!"}},"layouts":{"shared":{"informers":{"donateInformer":{"minBanner":{"label":"Хочешь поддержать проект финансово?","buttons":{"yes":"Да, хочу! Узнать подробнее...","no":"Нет. Закрыть окно."}},"maxBanner":{"html":{"__html":"Чтобы <b>контент</b> приносил <b>максимальную пользу</b> его <b>необходимо</b> постоянно <b>совершенствовать</b> и <b>адаптировать</b>\n        под каждую новую версию <i>TypeScript</i>. Это отнимает <b>много времени</b> и без Вашей, даже <b>незначительно\n        финансовой</b>, поддержки практически <b>невозможно</b>. Помогая проекту вы прежде всего принимаете <b>участие</b> в\n        <b>развитии</b> профессионального уровня ваших <b>друзей</b>, <b>коллег</b>, <b>подчиненных</b>. Выпусти желание\n        сделать свой мир лучше. <b>Сделай контент для будующих специалистов ещё качественей и доступней!</b>"},"href":"#"}},"watchWithTelegramInformer":{"text":["Хочешь поддерживать свои знания в актуальном состоянии?","Тогда подписывайся на Telegram канал и узнавай обо всех изменениях!"],"subscribeButton":{"label":"Подписаться"}}},"links":{"telegram":"#"},"appContent":{"contentNav":{"prevButton":{"label":"Назад"},"nextButton":{"label":"Вперед"}}},"appHeader":{"navToggleButton":{"tooltips":{"open":["Открыть боковое","меню"],"close":["Закрыть боковое","меню"]}},"appMenu":{"pdfButton":{"href":"#","tooltip":["Скачать","PDF версию"],"label":"Скачать PDF версию"},"telegramButton":{"href":"https://t.me/nauchikus","tooltip":["Следить за","изменениями в","Telegram"],"label":"Следить за изменениями в Telegram"},"githubButton":{"href":"https://github.com/nauchikus/typescript-definitive-guide","tooltip":["Посетить проект на","Github"],"label":"Посетить проект на Github"}},"donateDropdown":{"href":"https://yasobe.ru/na/typescript_definitive_guide","toggleButton":{"label":["Поддержать","финансово"]},"content":{"title":"Сделай контент для будующих поколений ещё качественей и доступней!","subtitle":{"__html":"Контент требует постоянного совершенстования и адаптации под каждую новую версию\nязыка TypeScript.\nЭто отнимает много времени и без Вашей, даже незначительно финансовой, поддержки практически\nневозможно.\nПрийми участие в развитии профессионального уровня своих друзей, коллег, подчиненных. Встань на\nсторону небезразличных!"}}},"appSearch":{"inputPlaceholder":"Я ищу...","submitButton":{"ariaLabel":"Отправить"}}},"pdf":{"downloadPdfBookButton":{"title":"Скачать PDF Версию","href":"pdf/TypeScript Подробное Руководство.pdf"}}}},"pages":{"index":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"appDescription":"Книга и документация в одном","subtitleAll":["TypeScript в деталях","TypeScript крупным планом","TypeScript под микроскопом","TypeScript со всех сторон"]}},"book__chapters":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"tocItem":{"copyLinkToBufferButton":{"tooltip":"Скопировать ссылку в буфер обмена"},"collapseTocButton":{"tooltip":{"openState":"Открыть","closeState":"Закрыть"}}},"secondaryContentBar":{"label":"Оглавление","tocFilterButton":{"tooltip":"Отфильтровать на основе разделов"},"tocCollapseAllButton":{"tooltip":{"openState":"Раскрыть все","closeState":"Закрыть все"}}},"asideLayout":{"tagBarLabel":"Тематические разделы","tagBar":{"cleanFilterButton":"Все разделы"}}}},"book__chapter":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"secondaryContentBar":{"editOnGithubButton":{"tooltip":"Редактировать на Github"}}}},"what-is-new__toc":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"primaryContentBar":{"label":"История нововведений"},"tocItem":{"copyLinkToBufferButton":{"tooltip":"Скопировать ссылку в буфер обмена"}}}},"not-found":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"notFound_404":{"status":"404","title":"Страница не найдена :("}}},"pdf":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"title":"TypeScript Подробное Руководство","subtitle":"PDF Версия"}}}},"innovationData":{"releaseHistory":[{"version":"3.5","dateRelease":"May 29, 2019"}],"mmp":"3.5","innovations":[{"id":"","version":"3.5","innovationName":"Вспомогательный тип Omit","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"vspomogatelnyi tip omit","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"vspomogatelnyi tip omit\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Вспомогательный тип Omit</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>В повседневной разработке очень часто требуется определить новый тип описывающий некоторую часть существующего. До версии <em>TypeScript</em> <code>3.5</code> подобное можно было реализовать при помощи типов <code>Exclude&#x3C;T, U></code> и <code>Pick&#x3C;T, K></code>.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">type Person = {\n    firstName: string;\n    lastName: string;\n\n    age: number;\n};\n\n/**\n * определяем тип Union состоящий из строковых литеральных типов\n * представляемых ключами типа Person, за исключением исключенного\n * поля age.\n *\n * type RemainingKeys = &quot;firstName&quot; | &quot;lastName&quot;\n */\ntype RemainingKeys = Exclude&lt;keyof Person, &#39;age&#39;&gt;;\n\n/**\n * определяем новый тип состоящий из ключей\n * полученных на предыдущем шаге.\n *\n * type PersonName = {\n *  firstName: string;\n *  lastName: string;\n * }\n */\ntype PersonName = Pick&lt;Person, RemainingKeys&gt;;\n```\n\nПоскольку потребность в сужении типа возникает довольно часто, это вынуждает разработчиков выносить требующийся функционал в отдельную сущность, что неизбежно затрудняет чтение кода другими разработчиками, так как знакомый всем механизм скрыт за незнакомым им идентификатором типа (именем типа).\n\nПо этой причине разработчики `TypeScript` расширили стандартную библиотеку `lib.d.ts` новым вспомогательным типом `Omit&lt;T, K&gt;`, который стандартизирует, обсуждаемую на протяжении главы, логику.\n\n`````ts\ntype Person = {\n    firstName: string;\n    lastName: string;\n\n    age: number;\n};\n\n/**\n * type PersonName = {\n *  firstName: string;\n *  lastName: string;\n * }\n */\ntype PersonName = Omit&lt;Person, &#39;age&#39;&gt;;\n```</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.5/Вспомогательный тип Omit/content.md"},{"id":"","version":"3.5","innovationName":"Улучшение механизма проверки избыточных полей в объедененных типах (Union types)","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie mehanizma proverki izbytochnyh polei v obedenennyh tipah (union types)","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"uluchshenie mehanizma proverki izbytochnyh polei v obedenennyh tipah (union types)\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Улучшение механизма проверки избыточных полей в объедененных типах (Union types)</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>В <em>TypeScript</em> есть механизм называемый <em>проверкой избыточности свойств</em> (<em>excess property checking</em>), который призван выявлять опечатки в литералах объекта.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">type RectCssStyle = {\n    width: string;\n    height: string;\n\n    color?: string;\n};\n\nlet graphics: RectCssStyle = {\n    width: &#39;24px&#39;,\n    height: &#39;24px&#39;,\n\n    colour: &#39;red&#39;, // Error\n};\n```\n\nС этим механизмом связанно два неоднозначных момента. Первый момент заключается в том, что в _TypeScript_, в некоторых случаях, избыточность допускается. Один из таких случчаев является присвоение идентификатору, ассоциированного с типом Union, значения принадлежащего одновеременно ко всем типам определеляющих это объединение.\n\n`````ts\n// до версии v3.5\n\ntype CoordXY = {\n    x: number;\n    y: number;\n};\n\ntype CoordZ = {\n    z: number;\n};\n\n/**\n * По логике, в данном объекте, либо поля xy либо поле z являются излишними,\n * так как тип Union одновременно представляет лишь один определяющий\n * его тип данных\n */\nconst coords: CoordXY | CoordZ = {\n    x: 0,\n    y: 0,\n\n    z: 0,\n};\n```\n\nВторой неоднозначный момент сокрыт в реализации описанного выше поведения, которая даже не предусматривает проверку типов для полей являющихся излишними.\n\n`````ts\n// до версии v3.5\n\ntype CoordXY = {\n    x: number;\n    y: number;\n};\n\ntype CoordZ = {\n    z: number;\n};\n\n// вывод типов считает что значение принадлежит к типу CoordXY\nconst coordsFirst: CoordXY | CoordZ = {\n    x: 0,\n    y: 0,\n    z: &#39;&#39;, // Ok, несмотря на то, что тип определен как number при присваивании значения принадлежащего к типу string ошибки не возникает\n};\n\n// вывод типов считает что значение принадлежит к типу CoordZ\nconst coordsSecond: CoordXY | CoordZ = {\n    x: &#39;&#39;, // Ok...\n    y: &#39;&#39;, // Ok, несмотря на то, что тип определен как number при присваивании значения принадлежащего к типу string ошибки не возникает\n    z: 0,\n};\n```\n\nЭто поведение кажется нелогичным, поэтому Начиная с версии _TypeScript_ `v3.5` частично было изменено. Теперь при проверке литералов объекта выполняется проверка типов, что устроняет второй неоднозначным случай.\n\n`````ts\n// начиная с v3.5\n\ntype CoordXY = {\n    x: number;\n    y: number;\n};\n\ntype CoordZ = {\n    z: number;\n};\n\nconst coordsFirst: CoordXY | CoordZ = {\n    x: 0,\n    y: 0,\n    z: &#39;&#39;, // Error\n};\n\nconst coordsSecond: CoordXY | CoordZ = {\n    x: &#39;&#39;, // Error\n    y: &#39;&#39;, // Error\n    z: 0,\n};\n```\n\nТем не менее, нужно помнить, что первый случай, который также быд обозначен как не совсем очевидный, остался.\n\n`````ts\n// ...\n\nconst coords: CoordXY | CoordZ = {\n    x: 0,\n    y: 0,\n    z: 0,\n}; // Ok\n```</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.5/Улучшение механизма проверки избыточных полей в объедененных типах \\(Union types\\)/content.md"},{"id":"","version":"3.5","innovationName":"Введение нового флага --allowUmdGlobalAccess","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"vvedenie novogo flaga --allowumdglobalaccess","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"vvedenie novogo flaga --allowumdglobalaccess\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Введение нового флага --allowUmdGlobalAccess</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>Посколько, до недавнего времени, спецификация <em>ESMAScript</em> не предлагала модульную систему, разработчикам приходилось прибегать к использованию множества несовместимых между собой реализаций поражденных сообществом, которые затем были унифицированы за счет так называемой <em>универсальной модульной системы</em> (<em>UMD</em>). Кроме того,библиотеки создавались таким образом чтобы быть доступными через глобальную область видимости.</p>\n<p>Со стандартизацией <em>esmodules</em>, в <em>TypeScript</em>, при попытке обратится к библиотеке через объявленный в глобальной области идентификатор, возникает ошибка.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">import * as Rx from &#39;rxjs&#39;;\n\nconst ref = React.createRef(); // Error, обращение к глобальным переменным в модулях недопустимо\n```\n\n`````ts\nimport * as Rx from &#39;rxjs&#39;;\nimport * as React from &#39;react&#39;;\n\nconst ref = React.createRef(); // Ok, так как импортирован модуль\n```\n\nНо посколько со стороны сообщества неоднократно поступали просьбы сделать доступными в модулях глобальные определения, разработчики _TypeScript_ ввели новый флаг `--allowUmdGlobalAccess` благодаря которому появилась такая возможность.\n\n`````ts\n// tsconfig.json\n\n{\n  {\n    &quot;compilerOptions&quot;: {\n      &quot;allowUmdGlobalAccess&quot;: false\n    }\n  }\n}\n```\n\n`````ts\nimport * as Rx from &#39;rxjs&#39;;\n\nconst ref = React.createRef(); // Ok, доступ к глобальному определению из модуля\n```</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.5/Введение нового флага --allowUmdGlobalAccess/content.md"},{"id":"","version":"3.5","innovationName":"Улучшение механизма проверки объединенных типов","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie mehanizma proverki obedinennyh tipov","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"uluchshenie mehanizma proverki obedinennyh tipov\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Улучшение механизма проверки объединенных типов</span></h2>\n<div class=\"content__tag-bar\"></div>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">type Source = { done: boolean; value: number };\ntype Target = { done: false; value: number } | { done: true; value: number };\n\ndeclare let source: Source;\ndeclare let target: Target;\n\ntarget = source; // Error, до v3.5 и Ok после\n```\n\nПоскольку в примере выше тип `Source`, за исключением поля `done`, идентичен типу `Target`, новый механизм проверки объедененных типов допускает присвоение значения первого типа идентификатору принадлежащего ко второму типу.</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.5/Улучшение механизма проверки объединенных типов/content.md"},{"id":"","version":"3.5","innovationName":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie mehanizma vyvoda tipa vysshego poryadka dlya obobshchennyh konstruktorov","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"uluchshenie mehanizma vyvoda tipa vysshego poryadka dlya obobshchennyh konstruktorov\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>В <em>TypeScript</em> версии <code>v3.4</code> был усовершенствован механизм вывода типов для обобщенных функций реализующих функциональную композицию. Это в свою очередь повысило эффективность использования <em>функциональных-hoc</em> при разработке <em>React-приложений</em>. С выходом версии <code>v3.5</code> подобный механизм был перенесен на конструкторы классов, что также повысило эффективность вывода типов при использования их в качестве <em>классовых-hoc</em>.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">type ComponentClass&lt;P&gt; = new (props: P) =&gt; Component&lt;P&gt;;\ndeclare class Component&lt;P&gt; {\n    props: P;\n    constructor(props: P);\n}\n\ntype HocProps = { hocProp: string };\ndeclare function hoc&lt;WrappedProps&gt;(\n    WrappedComponent: ComponentClass&lt;WrappedProps&gt;\n): ComponentClass&lt;WrappedProps &amp; HocProps&gt;;\n\ntype NestedProps&lt;T&gt; = { nestedProp: T };\nclass CustomComponent&lt;T&gt; extends Component&lt;NestedProps&lt;T&gt;&gt; {}\n\n/**\n * &lt;v3.5\n * const WrappedComponent: ComponentClass&lt;NestedProps&lt;{}&gt; &amp; HocProps&gt;\n *\n * &gt;=v3.5\n * const WrappedComponent: new &lt;T&gt;(props: NestedProps&lt;T&gt; &amp; HocProps) =&gt; Component&lt;NestedProps&lt;T&gt; &amp; HocProps&gt;\n *\n */\nconst WrappedComponent = hoc(CustomComponent);\n```</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.5/Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов/content.md"},{"id":"","version":"3.5","innovationName":"Неявное ограничение обобщенных параметров типом unknown","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"neyavnoe ogranichenie obobshchennyh parametrov tipom unknown","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"neyavnoe ogranichenie obobshchennyh parametrov tipom unknown\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Неявное ограничение обобщенных параметров типом unknown</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>Начиная с версии <code>v3.5</code> обобщенные параметры типа неявно определяются как принадлежащие к типу <code>unknown</code>.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">declare class Stack&lt;T&gt; {\n    getItem(): T;\n}\n\n/**\n * &lt;v3.5\n * let item: {}\n *\n * &gt;= v3.5\n * let item: unknown\n */\nlet stack = new Stack();\nlet item = stack.getItem();\n```</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.5/Неявное ограничение обобщенных параметров типом unknown/content.md"},{"id":"","version":"3.5","innovationName":"Изменение правил для типа unknown и индексной сигнатуре","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"izmenenie pravil dlya tipa unknown i indeksnoi signature","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"izmenenie pravil dlya tipa unknown i indeksnoi signature\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Изменение правил для типа unknown и индексной сигнатуре</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>В <em>TypeScript</em> тип представленный индексной сигнатурой ассоциированной с типом <code>any</code>, совместим с любым объектным типом.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">type Dictionary = { [key: string]: any };\n\nlet dictionary: Dictionary;\n\nclass SomeClass {}\nconst literalObjectType = { f0: 0, f1: &#39;&#39; };\nconst anyType: any = 5;\n\ndictionary = {}; // Ok\ndictionary = literalObjectType; // Ok\ndictionary = anyType;\ndictionary = new SomeClass(); // Ok\ndictionary = () =&gt; {}; // Ok\ndictionary = Boolean; // Ok\n```\n\nДо версии `v3.5` тип `unknown` в индексной сигнатуре вел себя аналогичным образом.\n\n`````ts\n// &lt;v3.5\n\ntype Dictionary = { [key: string]: unknown };\n\nlet dictionary: Dictionary;\n\nclass SomeClass {}\nconst literalObjectType = { f0: 0, f1: &#39;&#39; };\nconst anyType: any = 5;\n\ndictionary = {}; // Ok\ndictionary = literalObjectType; // Ok\ndictionary = anyType;\ndictionary = new SomeClass(); // Ok\ndictionary = () =&gt; {}; // Ok\ndictionary = Boolean; // Ok\n```\n\nНачиная с версии `v3.5` поведение для типа `unknown` в индексной сигнатуре было изменено. Теперь он совместим лишь с типами представляемыми литералами объектов и типом `any`.\n\n`````ts\n// &gt;= 3.5\n\ntype Dictionary = { [key: string]: unknown };\n\nlet dictionary: Dictionary;\n\nclass SomeClass {}\nconst literalObjectType = { f0: 0, f1: &#39;&#39; };\nconst anyType: any = 5;\n\ndictionary = {}; // Ok\ndictionary = literalObjectType; // Ok\ndictionary = anyType;\ndictionary = new SomeClass(); // Error\ndictionary = () =&gt; {}; // Error\ndictionary = Boolean; // Error\n```</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.5/Изменение правил для типа unknown и индексной сигнатуре/content.md"},{"id":"","version":"3.5","innovationName":"Изменение логики для Object.keys для версии es5","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"izmenenie logiki dlya object.keys dlya versii es5","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"izmenenie logiki dlya object.keys dlya versii es5\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Изменение логики для Object.keys для версии es5</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>Начиная с версии <em>es6</em> метод <code>Object.keys</code> при передави в качестве аргументов значения не принадлежащему к типу <code>object</code> возвращает пустой массив. Тем не менее в аналогичной ситуации в версии <em>es5</em> возникает исключение. Поэтому начиная с версии <em>v3.5</em> поведение для метода <code>Object.keys</code> при передачи в него аргументов не совместымых с типом <code>object</code> было изменено.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts[object object]\"><pre class=\"language-ts[object object]\"><code class=\"language-ts[object object]\">/**\n * tsconfig.json\n * &quot;target&quot;: &quot;es5&quot; or\\and &quot;lib&quot;: [&quot;es5&quot;]\n *\n * v&lt;3.5 is Ok, let keys: string[]\n * v&gt;=3.5 is Error\n */\nlet keys = Object.keys(50);\n```</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.5/Изменение логики для Object\\.keys для версии es5/content.md"}]},"winTocTree":[{"id":"0","isCollapse":false,"index":0,"data":{"releaseHistory":[{"version":"3.3","dateRelease":"january 31, 2019"}],"mmp":"3.3","innovations":[{"id":"","version":"3.3","innovationName":"Повышение производительности сборки для команды --build --watch","dateRelease":"January 31, 2019","datePublication":"January 31, 2019","tags":[],"path":"povyshenie proizvoditelnosti sborki dlya komandy --build --watch"},{"id":"","version":"3.3","innovationName":"Улучшение поведения для типов Union указанных в качестве параметров функции","dateRelease":"January 31, 2019","datePublication":"January 31, 2019","tags":[],"path":"uluchshenie povedeniya dlya tipov union ukazannyh v kachestve parametrov funkcii"}]}},{"id":"1","isCollapse":false,"index":1,"data":{"releaseHistory":[{"version":"3.4","dateRelease":"March 29, 2019"}],"mmp":"3.4","innovations":[{"id":"","version":"3.4","innovationName":"Опции компилятора --tsBuildInfoFile","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"opcii kompilyatora --tsbuildinfofile"},{"id":"","version":"3.4","innovationName":"Опции компилятора --incremental","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"opcii kompilyatora --incremental"},{"id":"","version":"3.4","innovationName":"Массивоподобные readonly типы","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"massivopodobnye readonly tipy"},{"id":"","version":"3.4","innovationName":"Расширенный тип ReadonlyArray","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"rasshirennyi tip readonlyarray"},{"id":"","version":"3.4","innovationName":"Привидение к константе (const assertion)","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"prividenie k konstante (const assertion)"},{"id":"","version":"3.4","innovationName":"Проверка типов для globalThis","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"proverka tipov dlya globalthis"}]}},{"id":"2","isCollapse":false,"index":2,"data":{"releaseHistory":[{"version":"3.5","dateRelease":"May 29, 2019"}],"mmp":"3.5","innovations":[{"id":"","version":"3.5","innovationName":"Вспомогательный тип Omit","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"vspomogatelnyi tip omit"},{"id":"","version":"3.5","innovationName":"Улучшение механизма проверки избыточных полей в объедененных типах (Union types)","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie mehanizma proverki izbytochnyh polei v obedenennyh tipah (union types)"},{"id":"","version":"3.5","innovationName":"Введение нового флага --allowUmdGlobalAccess","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"vvedenie novogo flaga --allowumdglobalaccess"},{"id":"","version":"3.5","innovationName":"Улучшение механизма проверки объединенных типов","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie mehanizma proverki obedinennyh tipov"},{"id":"","version":"3.5","innovationName":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie mehanizma vyvoda tipa vysshego poryadka dlya obobshchennyh konstruktorov"},{"id":"","version":"3.5","innovationName":"Неявное ограничение обобщенных параметров типом unknown","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"neyavnoe ogranichenie obobshchennyh parametrov tipom unknown"},{"id":"","version":"3.5","innovationName":"Изменение правил для типа unknown и индексной сигнатуре","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"izmenenie pravil dlya tipa unknown i indeksnoi signature"},{"id":"","version":"3.5","innovationName":"Изменение логики для Object.keys для версии es5","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"izmenenie logiki dlya object.keys dlya versii es5"}]}},{"id":"3","isCollapse":false,"index":3,"data":{"releaseHistory":[{"version":"3.6","dateRelease":"August 28, 2019"}],"mmp":"3.6","innovations":[{"id":"","version":"3.6","innovationName":"Повышение типобезопасности генероторов","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"povyshenie tipobezopasnosti generotorov"},{"id":"","version":"3.6","innovationName":"Добавление хелпера иметирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"dobavlenie helpera imetiruushchego mehanizm spread array pri kompilyacii v ecmascript nije versii 6 pri neaktivnom flage --downleveliteration"},{"id":"","version":"3.6","innovationName":"Расширение системы типов типами представляющими структуры данных только для чтения","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"rasshirenie sistemy tipov tipami predstavlyaushchimi struktury dannyh tolko dlya chteniya"},{"id":"","version":"3.6","innovationName":"Строковой идентификатор функции-конструктора","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"strokovoi identifikator funkcii-konstruktora"},{"id":"","version":"3.6","innovationName":"Расширение вывода об ошибках при работе с Promise","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"rasshirenie vyvoda ob oshibkah pri rabote s promise"},{"id":"","version":"3.6","innovationName":"Слияние одноименных классов и функций из окружающего контекста","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"sliyanie odnoimennyh klassov i funkcii iz okrujaushchego konteksta"},{"id":"","version":"3.6","innovationName":"Добавлена поддержка Unicode для идентификаторов","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"dobavlena podderjka unicode dlya identifikatorov"},{"id":"","version":"3.6","innovationName":"Поддержка import.meta для SystemJS","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"podderjka import.meta dlya systemjs"},{"id":"","version":"3.6","innovationName":"get и set в окружающем контексте","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"get i set v okrujaushchem kontekste"},{"id":"","version":"3.6","innovationName":"Api для поддержки --build и --incremental","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"api dlya podderjki --build i --incremental"},{"id":"","version":"3.6","innovationName":"Интеллектуальное определение синтаксиса авто-импорта","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"intellektualnoe opredelenie sintaksisa avto-importa"}]}},{"id":"4","isCollapse":false,"index":4,"data":{"releaseHistory":[{"version":"3.7","dateRelease":"November 5, 2019"},{"version":"3.7-rc","dateRelease":"November 4, 2019"},{"version":"3.7-beta","dateRelease":"November 3, 2019"},{"version":"3.7-alpha","dateRelease":"November 2, 2019"}],"mmp":"3.7","innovations":[{"id":"","version":"3.7-rc","innovationName":"Оператор опциональной последовательности (?.)","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":["исправление","Критическое изменение","Компилятор"],"path":"operator opcionalnoi posledovatelnosti (?.)"},{"id":"","version":"3.7-rc","innovationName":"Оператор объединения со значением null (??)","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":["высокая ожидаемость"],"path":"operator obedineniya so znacheniem null (??)"},{"id":"","version":"3.7-rc","innovationName":"Утверждение в сигнатуре (Signature Assertion)","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":["важно"],"path":"utverjdenie v signature (signature assertion)"},{"id":"","version":"3.7-rc","innovationName":"Улучшена поддержка для типа never возвращаемого из функций","dateRelease":"November 4, 2019","datePublication":"November 5, 2019","tags":["изменение"],"path":"uluchshena podderjka dlya tipa never vozvrashchaemogo iz funkcii"},{"id":"","version":"3.7-beta","innovationName":"Проверка невызванных функций","dateRelease":"November 3, 2019","datePublication":"November 5, 2019","tags":["баг"],"path":"proverka nevyzvannyh funkcii"},{"id":"","version":"3.7-beta","innovationName":"Рекурсивность для псевдононимов типов","dateRelease":"November 3, 2019","datePublication":"November 5, 2019","tags":["компилятор"],"path":"rekursivnost dlya psevdononimov tipov"},{"id":"","version":"3.7-alpha","innovationName":"Совместное использование флагов --declaration и --allowJs","dateRelease":"November 2, 2019","datePublication":"November 5, 2019","tags":["директивы"],"path":"sovmestnoe ispolzovanie flagov --declaration i --allowjs"},{"id":"","version":"3.7-alpha","innovationName":"@ts-nocheck в TypeScript файлах","dateRelease":"November 2, 2019","datePublication":"November 5, 2019","tags":["общее"],"path":"@ts-nocheck v typescript failah"}]}},{"id":"5","isCollapse":false,"index":5,"data":{"releaseHistory":[{"version":"3.8","dateRelease":"February 20, 2020"}],"mmp":"3.8","innovations":[{"id":"","version":"3.8","innovationName":"Импорт и экспорт только типа и флаг --importsNotUsedAsValues","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"import i eksport tolko tipa i flag --importsnotusedasvalues"},{"id":"","version":"3.8","innovationName":"Закрытые поля ECMAScript","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"zakrytye polya ecmascript"},{"id":"","version":"3.8","innovationName":"await высшего уровня","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"await vysshego urovnya"},{"id":"","version":"3.8","innovationName":"Реализация новой формы ре-экспорта","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"realizaciya novoi formy re-eksporta"},{"id":"","version":"3.8","innovationName":"Новая конфигурационная группа параметров watchOptions","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"novaya konfiguracionnaya gruppa parametrov watchoptions"},{"id":"","version":"3.8","innovationName":"Новый флаг --assumeChangesOnlyAffectDirectDependencies","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"novyi flag --assumechangesonlyaffectdirectdependencies"},{"id":"","version":"3.8","innovationName":"Модификаторы JSDocs","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"modifikatory jsdocs"},{"id":"","version":"3.8","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Более строгие проверки объединений имеющих с индексной сигнатурой","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"[kriticheskoe izmenenie] bolee strogie proverki obedinenii imeushchih s indeksnoi signaturoi"},{"id":"","version":"3.8","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Тип object в JSDoc при активном флаге --noImplicitAny больше не расценивается как any","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"[kriticheskoe izmenenie] tip object v jsdoc pri aktivnom flage --noimplicitany bolshe ne rascenivaetsya kak any"}]}},{"id":"6","isCollapse":false,"index":6,"data":{"releaseHistory":[{"version":"3.9","dateRelease":"May 12, 2020"}],"mmp":"3.9","innovations":[{"id":"","version":"3.9","innovationName":"Улучшение вывода типа для Promise.all","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"uluchshenie vyvoda tipa dlya promise.all"},{"id":"","version":"3.9","innovationName":"Сокращение скорости компиляции","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"sokrashchenie skorosti kompilyacii"},{"id":"","version":"3.9","innovationName":"Комментарная директива @ts-expect-error","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"kommentarnaya direktiva @ts-expect-error"},{"id":"","version":"3.9","innovationName":"Проверка вызова функции в тернарном условном операторе","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"proverka vyzova funkcii v ternarnom uslovnom operatore"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение поведения для оператора Non-Null при совместном использовании с оператором опциональной цепочки","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] izmenenie povedeniya dlya operatora non-null pri sovmestnom ispolzovanii s operatorom opcionalnoi cepochki"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Возникновение ошибки при наличии в строке закрывающей фигурной или угловатой скобки в файлах с расширением TSX","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] vozniknovenie oshibki pri nalichii v stroke zakryvaushchei figurnoi ili uglovatoi skobki v failah s rasshireniem tsx"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Повышение уровня проверки необязательных полей для типов определяющих тип пересечение","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] povyshenie urovnya proverki neobyazatelnyh polei dlya tipov opredelyaushchih tip peresechenie"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Определение типа пересечения дескриминантными полями","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] opredelenie tipa peresecheniya deskriminantnymi polyami"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Параметр типа расширяющий тип any больше не наследует его характеристики","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] parametr tipa rasshiryaushchii tip any bolshe ne nasleduet ego harakteristiki"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] get и set больше не перечисляемы","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] get i set bolshe ne perechislyaemy"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] export * теперь всегда включается в сборку","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] export * teper vsegda vkluchaetsya v sborku"}]}},{"id":"7","isCollapse":false,"index":7,"data":{"releaseHistory":[{"version":"4.0","dateRelease":"August 20, 2020"}],"mmp":"4.0","innovations":[{"id":"","version":"4.0","innovationName":"Вариативный кортеж","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"variativnyi kortej"},{"id":"","version":"4.0","innovationName":"Помечанные элементы кортежа","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"pomechannye elementy korteja"},{"id":"","version":"4.0","innovationName":"Операторы присваивания короткого замыкания","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"operatory prisvaivaniya korotkogo zamykaniya"},{"id":"","version":"4.0","innovationName":"Вывод типов для полей класса по параметрам конструктора","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"vyvod tipov dlya polei klassa po parametram konstruktora"},{"id":"","version":"4.0","innovationName":"unknown как тип исключения блока catch","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"unknown kak tip isklucheniya bloka catch"},{"id":"","version":"4.0","innovationName":"--noEmit совмещенный с --incremental","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"--noemit sovmeshchennyi s --incremental"},{"id":"","version":"4.0","innovationName":"Пользовательская фабрика jsx фрагментов","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"polzovatelskaya fabrika jsx fragmentov"},{"id":"","version":"4.0","innovationName":"Добавление комментарной директивы @deprecated","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"dobavlenie kommentarnoi direktivy @deprecated"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Изменение lib.d.ts","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[kriticheskoe izmenenie]  izmenenie lib.d.ts"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Переопределение аксессоров полем и наоборот теперь является ошибкой","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[kriticheskoe izmenenie]  pereopredelenie aksessorov polem i naoborot teper yavlyaetsya oshibkoi"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Операнды для delete должны быть необязательными","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[kriticheskoe izmenenie]  operandy dlya delete doljny byt neobyazatelnymi"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Изменение фабричного api Nodejs","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[kriticheskoe izmenenie]  izmenenie fabrichnogo api nodejs"}]}}],"pageNavDataAll":[{"name":"3.3","path":"3.3","sections":[{"name":"Повышение производительности сборки для команды --build --watch","path":"povyshenie proizvoditelnosti sborki dlya komandy --build --watch","data":{"version":"3.3"}},{"name":"Улучшение поведения для типов Union указанных в качестве параметров функции","path":"uluchshenie povedeniya dlya tipov union ukazannyh v kachestve parametrov funkcii","data":{"version":"3.3"}}]},{"name":"3.4","path":"3.4","sections":[{"name":"Опции компилятора --tsBuildInfoFile","path":"opcii kompilyatora --tsbuildinfofile","data":{"version":"3.4"}},{"name":"Опции компилятора --incremental","path":"opcii kompilyatora --incremental","data":{"version":"3.4"}},{"name":"Массивоподобные readonly типы","path":"massivopodobnye readonly tipy","data":{"version":"3.4"}},{"name":"Расширенный тип ReadonlyArray","path":"rasshirennyi tip readonlyarray","data":{"version":"3.4"}},{"name":"Привидение к константе (const assertion)","path":"prividenie k konstante (const assertion)","data":{"version":"3.4"}},{"name":"Проверка типов для globalThis","path":"proverka tipov dlya globalthis","data":{"version":"3.4"}}]},{"name":"3.5","path":"3.5","sections":[{"name":"Вспомогательный тип Omit","path":"vspomogatelnyi tip omit","data":{"version":"3.5"}},{"name":"Улучшение механизма проверки избыточных полей в объедененных типах (Union types)","path":"uluchshenie mehanizma proverki izbytochnyh polei v obedenennyh tipah (union types)","data":{"version":"3.5"}},{"name":"Введение нового флага --allowUmdGlobalAccess","path":"vvedenie novogo flaga --allowumdglobalaccess","data":{"version":"3.5"}},{"name":"Улучшение механизма проверки объединенных типов","path":"uluchshenie mehanizma proverki obedinennyh tipov","data":{"version":"3.5"}},{"name":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов","path":"uluchshenie mehanizma vyvoda tipa vysshego poryadka dlya obobshchennyh konstruktorov","data":{"version":"3.5"}},{"name":"Неявное ограничение обобщенных параметров типом unknown","path":"neyavnoe ogranichenie obobshchennyh parametrov tipom unknown","data":{"version":"3.5"}},{"name":"Изменение правил для типа unknown и индексной сигнатуре","path":"izmenenie pravil dlya tipa unknown i indeksnoi signature","data":{"version":"3.5"}},{"name":"Изменение логики для Object.keys для версии es5","path":"izmenenie logiki dlya object.keys dlya versii es5","data":{"version":"3.5"}}]},{"name":"3.6","path":"3.6","sections":[{"name":"Повышение типобезопасности генероторов","path":"povyshenie tipobezopasnosti generotorov","data":{"version":"3.6"}},{"name":"Добавление хелпера иметирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration","path":"dobavlenie helpera imetiruushchego mehanizm spread array pri kompilyacii v ecmascript nije versii 6 pri neaktivnom flage --downleveliteration","data":{"version":"3.6"}},{"name":"Расширение системы типов типами представляющими структуры данных только для чтения","path":"rasshirenie sistemy tipov tipami predstavlyaushchimi struktury dannyh tolko dlya chteniya","data":{"version":"3.6"}},{"name":"Строковой идентификатор функции-конструктора","path":"strokovoi identifikator funkcii-konstruktora","data":{"version":"3.6"}},{"name":"Расширение вывода об ошибках при работе с Promise","path":"rasshirenie vyvoda ob oshibkah pri rabote s promise","data":{"version":"3.6"}},{"name":"Слияние одноименных классов и функций из окружающего контекста","path":"sliyanie odnoimennyh klassov i funkcii iz okrujaushchego konteksta","data":{"version":"3.6"}},{"name":"Добавлена поддержка Unicode для идентификаторов","path":"dobavlena podderjka unicode dlya identifikatorov","data":{"version":"3.6"}},{"name":"Поддержка import.meta для SystemJS","path":"podderjka import.meta dlya systemjs","data":{"version":"3.6"}},{"name":"get и set в окружающем контексте","path":"get i set v okrujaushchem kontekste","data":{"version":"3.6"}},{"name":"Api для поддержки --build и --incremental","path":"api dlya podderjki --build i --incremental","data":{"version":"3.6"}},{"name":"Интеллектуальное определение синтаксиса авто-импорта","path":"intellektualnoe opredelenie sintaksisa avto-importa","data":{"version":"3.6"}}]},{"name":"3.7","path":"3.7","sections":[{"name":"Оператор опциональной последовательности (?.)","path":"operator opcionalnoi posledovatelnosti (?.)","data":{"version":"3.7-rc"}},{"name":"Оператор объединения со значением null (??)","path":"operator obedineniya so znacheniem null (??)","data":{"version":"3.7-rc"}},{"name":"Утверждение в сигнатуре (Signature Assertion)","path":"utverjdenie v signature (signature assertion)","data":{"version":"3.7-rc"}},{"name":"Улучшена поддержка для типа never возвращаемого из функций","path":"uluchshena podderjka dlya tipa never vozvrashchaemogo iz funkcii","data":{"version":"3.7-rc"}},{"name":"Проверка невызванных функций","path":"proverka nevyzvannyh funkcii","data":{"version":"3.7-beta"}},{"name":"Рекурсивность для псевдононимов типов","path":"rekursivnost dlya psevdononimov tipov","data":{"version":"3.7-beta"}},{"name":"Совместное использование флагов --declaration и --allowJs","path":"sovmestnoe ispolzovanie flagov --declaration i --allowjs","data":{"version":"3.7-alpha"}},{"name":"@ts-nocheck в TypeScript файлах","path":"@ts-nocheck v typescript failah","data":{"version":"3.7-alpha"}}]},{"name":"3.8","path":"3.8","sections":[{"name":"Импорт и экспорт только типа и флаг --importsNotUsedAsValues","path":"import i eksport tolko tipa i flag --importsnotusedasvalues","data":{"version":"3.8"}},{"name":"Закрытые поля ECMAScript","path":"zakrytye polya ecmascript","data":{"version":"3.8"}},{"name":"await высшего уровня","path":"await vysshego urovnya","data":{"version":"3.8"}},{"name":"Реализация новой формы ре-экспорта","path":"realizaciya novoi formy re-eksporta","data":{"version":"3.8"}},{"name":"Новая конфигурационная группа параметров watchOptions","path":"novaya konfiguracionnaya gruppa parametrov watchoptions","data":{"version":"3.8"}},{"name":"Новый флаг --assumeChangesOnlyAffectDirectDependencies","path":"novyi flag --assumechangesonlyaffectdirectdependencies","data":{"version":"3.8"}},{"name":"Модификаторы JSDocs","path":"modifikatory jsdocs","data":{"version":"3.8"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Более строгие проверки объединений имеющих с индексной сигнатурой","path":"[kriticheskoe izmenenie] bolee strogie proverki obedinenii imeushchih s indeksnoi signaturoi","data":{"version":"3.8"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Тип object в JSDoc при активном флаге --noImplicitAny больше не расценивается как any","path":"[kriticheskoe izmenenie] tip object v jsdoc pri aktivnom flage --noimplicitany bolshe ne rascenivaetsya kak any","data":{"version":"3.8"}}]},{"name":"3.9","path":"3.9","sections":[{"name":"Улучшение вывода типа для Promise.all","path":"uluchshenie vyvoda tipa dlya promise.all","data":{"version":"3.9"}},{"name":"Сокращение скорости компиляции","path":"sokrashchenie skorosti kompilyacii","data":{"version":"3.9"}},{"name":"Комментарная директива @ts-expect-error","path":"kommentarnaya direktiva @ts-expect-error","data":{"version":"3.9"}},{"name":"Проверка вызова функции в тернарном условном операторе","path":"proverka vyzova funkcii v ternarnom uslovnom operatore","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение поведения для оператора Non-Null при совместном использовании с оператором опциональной цепочки","path":"[kriticheskoe izmenenie] izmenenie povedeniya dlya operatora non-null pri sovmestnom ispolzovanii s operatorom opcionalnoi cepochki","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Возникновение ошибки при наличии в строке закрывающей фигурной или угловатой скобки в файлах с расширением TSX","path":"[kriticheskoe izmenenie] vozniknovenie oshibki pri nalichii v stroke zakryvaushchei figurnoi ili uglovatoi skobki v failah s rasshireniem tsx","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Повышение уровня проверки необязательных полей для типов определяющих тип пересечение","path":"[kriticheskoe izmenenie] povyshenie urovnya proverki neobyazatelnyh polei dlya tipov opredelyaushchih tip peresechenie","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Определение типа пересечения дескриминантными полями","path":"[kriticheskoe izmenenie] opredelenie tipa peresecheniya deskriminantnymi polyami","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Параметр типа расширяющий тип any больше не наследует его характеристики","path":"[kriticheskoe izmenenie] parametr tipa rasshiryaushchii tip any bolshe ne nasleduet ego harakteristiki","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] get и set больше не перечисляемы","path":"[kriticheskoe izmenenie] get i set bolshe ne perechislyaemy","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] export * теперь всегда включается в сборку","path":"[kriticheskoe izmenenie] export * teper vsegda vkluchaetsya v sborku","data":{"version":"3.9"}}]},{"name":"4.0","path":"4.0","sections":[{"name":"Вариативный кортеж","path":"variativnyi kortej","data":{"version":"4.0"}},{"name":"Помечанные элементы кортежа","path":"pomechannye elementy korteja","data":{"version":"4.0"}},{"name":"Операторы присваивания короткого замыкания","path":"operatory prisvaivaniya korotkogo zamykaniya","data":{"version":"4.0"}},{"name":"Вывод типов для полей класса по параметрам конструктора","path":"vyvod tipov dlya polei klassa po parametram konstruktora","data":{"version":"4.0"}},{"name":"unknown как тип исключения блока catch","path":"unknown kak tip isklucheniya bloka catch","data":{"version":"4.0"}},{"name":"--noEmit совмещенный с --incremental","path":"--noemit sovmeshchennyi s --incremental","data":{"version":"4.0"}},{"name":"Пользовательская фабрика jsx фрагментов","path":"polzovatelskaya fabrika jsx fragmentov","data":{"version":"4.0"}},{"name":"Добавление комментарной директивы @deprecated","path":"dobavlenie kommentarnoi direktivy @deprecated","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Изменение lib.d.ts","path":"[kriticheskoe izmenenie]  izmenenie lib.d.ts","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Переопределение аксессоров полем и наоборот теперь является ошибкой","path":"[kriticheskoe izmenenie]  pereopredelenie aksessorov polem i naoborot teper yavlyaetsya oshibkoi","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Операнды для delete должны быть необязательными","path":"[kriticheskoe izmenenie]  operandy dlya delete doljny byt neobyazatelnymi","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Изменение фабричного api Nodejs","path":"[kriticheskoe izmenenie]  izmenenie fabrichnogo api nodejs","data":{"version":"4.0"}}]}]}},"staticQueryHashes":["408059355","63159454"]}