{"componentChunkName":"component---src-page-templates-what-is-new-page-what-is-new-page-provider-tsx","path":"/what-is-new/3.9","result":{"pageContext":{"localization":{"lang":"ru","title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи.","appNavigation":[{"id":"index","path":"/","name":"Главная"},{"id":"book-contents","path":"/book/chapters","name":"Оглавление"},{"id":"what-is-new-contents","path":"/what-is-new","name":"Что нового?"},{"id":"pdf","path":"/pdf","name":"PDF Версия"}],"notification":{"behaviorNotification":{"copyLink":"Ссылка скопирована!"}},"layouts":{"shared":{"informers":{"donateInformer":{"minBanner":{"label":"Хочешь поддержать проект финансово?","buttons":{"yes":"Да, хочу! Узнать подробнее...","no":"Нет. Закрыть окно."}},"maxBanner":{"html":{"__html":"Чтобы <b>контент</b> приносил <b>максимальную пользу</b> его <b>необходимо</b> постоянно <b>совершенствовать</b> и <b>адаптировать</b>\n        под каждую новую версию <i>TypeScript</i>. Это отнимает <b>много времени</b> и без Вашей, даже <b>незначительно\n        финансовой</b>, поддержки практически <b>невозможно</b>. Помогая проекту вы прежде всего принимаете <b>участие</b> в\n        <b>развитии</b> профессионального уровня ваших <b>друзей</b>, <b>коллег</b>, <b>подчиненных</b>. Выпусти желание\n        сделать свой мир лучше. <b>Сделай контент для будующих специалистов ещё качественей и доступней!</b>"},"href":"#"}},"watchWithTelegramInformer":{"text":["Хочешь поддерживать свои знания в актуальном состоянии?","Тогда подписывайся на Telegram канал и узнавай обо всех изменениях!"],"subscribeButton":{"label":"Подписаться"}}},"links":{"telegram":"#"},"appContent":{"contentNav":{"prevButton":{"label":"Назад"},"nextButton":{"label":"Вперед"}}},"appHeader":{"navToggleButton":{"tooltips":{"open":["Открыть боковое","меню"],"close":["Закрыть боковое","меню"]}},"appMenu":{"pdfButton":{"href":"#","tooltip":["Скачать","PDF версию"],"label":"Скачать PDF версию"},"telegramButton":{"href":"https://t.me/nauchikus","tooltip":["Следить за","изменениями в","Telegram"],"label":"Следить за изменениями в Telegram"},"githubButton":{"href":"https://github.com/nauchikus/typescript-definitive-guide","tooltip":["Посетить проект на","Github"],"label":"Посетить проект на Github"}},"donateDropdown":{"href":"https://yasobe.ru/na/typescript_definitive_guide","toggleButton":{"label":["Поддержать","финансово"]},"content":{"title":"Сделай контент для будующих поколений ещё качественей и доступней!","subtitle":{"__html":"Контент требует постоянного совершенстования и адаптации под каждую новую версию\nязыка TypeScript.\nЭто отнимает много времени и без Вашей, даже незначительно финансовой, поддержки практически\nневозможно.\nПрийми участие в развитии профессионального уровня своих друзей, коллег, подчиненных. Встань на\nсторону небезразличных!"}}},"appSearch":{"inputPlaceholder":"Я ищу...","submitButton":{"ariaLabel":"Отправить"}}},"pdf":{"downloadPdfBookButton":{"title":"Скачать PDF Версию","href":"pdf/TypeScript Подробное Руководство.pdf"}}}},"pages":{"index":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"appDescription":"Книга и документация в одном","subtitleAll":["TypeScript в деталях","TypeScript крупным планом","TypeScript под микроскопом","TypeScript со всех сторон"]}},"book__chapters":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"tocItem":{"copyLinkToBufferButton":{"tooltip":"Скопировать ссылку в буфер обмена"},"collapseTocButton":{"tooltip":{"openState":"Открыть","closeState":"Закрыть"}}},"secondaryContentBar":{"label":"Оглавление","tocFilterButton":{"tooltip":"Отфильтровать на основе разделов"},"tocCollapseAllButton":{"tooltip":{"openState":"Раскрыть все","closeState":"Закрыть все"}}},"asideLayout":{"tagBarLabel":"Тематические разделы","tagBar":{"cleanFilterButton":"Все разделы"}}}},"book__chapter":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"secondaryContentBar":{"editOnGithubButton":{"tooltip":"Редактировать на Github"}}}},"what-is-new__toc":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"primaryContentBar":{"label":"История нововведений"},"tocItem":{"copyLinkToBufferButton":{"tooltip":"Скопировать ссылку в буфер обмена"}}}},"not-found":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"notFound_404":{"status":"404","title":"Страница не найдена :("}}},"pdf":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"title":"TypeScript Подробное Руководство","subtitle":"PDF Версия"}}}},"innovationData":{"releaseHistory":[{"version":"3.9","dateRelease":"May 12, 2020"}],"mmp":"3.9","innovations":[{"id":"","version":"3.9","innovationName":"Улучшение вывода типа для Promise.all","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"uluchshenie vyvoda tipa dlya promise.all","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"uluchshenie vyvoda tipa dlya promise.all\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Улучшение вывода типа для Promise.all</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>В последних версиях <em>TypeScript</em> (начиная с версии <code>3.7</code>) были обновлены декларации для таких методов как <code>Promise.all</code> и <code>Promise.race</code>. Но к сожалению это привело к неожиданным результатам в работе вывода типа, что более всего стало очевидно если в выводе учавствуют <code>null</code> или <code>undefined</code>.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Foodstuff</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">isExpirationDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Milk</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Foodstuff</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Coffee</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Foodstuff</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">factory</span><span class=\"token punctuation\">(</span>milkOrder<span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>Milk<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> coffeeOrder<span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>Coffee <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>milk<span class=\"token punctuation\">,</span> coffee<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>milkOrder<span class=\"token punctuation\">,</span> coffeeOrder<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">/**\n     * [error] Object is possibly 'undefined'.\n     * [сейчас] let milk: Milk | undefined\n     * [должно] let milk: Milk\n     * \n     * [ERROR] Ошибочное поведение!\n     */</span>\n    milk<span class=\"token punctuation\">.</span><span class=\"token function\">isExpirationDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/**\n     * [error] Object is possibly 'undefined'.\n     * [сейчас] let milk: Coffee | undefined\n     * \n     * [Ok] Ожидаемое\\правильное поведение!\n     */</span>\n    coffee<span class=\"token punctuation\">.</span><span class=\"token function\">isExpirationDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>\n<p>Поскольку данное поведение ошибочно, начиная с версии <code>3.9</code> оно было исправленно должным образом.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">factory</span><span class=\"token punctuation\">(</span>milkOrder<span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>Milk<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> coffeeOrder<span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>Coffee <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>milk<span class=\"token punctuation\">,</span> coffee<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>milkOrder<span class=\"token punctuation\">,</span> coffeeOrder<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    milk<span class=\"token punctuation\">.</span><span class=\"token function\">isExpirationDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok! let milk: Milk</span>\n    coffee<span class=\"token punctuation\">.</span><span class=\"token function\">isExpirationDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error! let coffee: Coffee | undefined</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.9/Улучшение вывода типа для Promise\\.all/content.md"},{"id":"","version":"3.9","innovationName":"Сокращение скорости компиляции","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"sokrashchenie skorosti kompilyacii","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"sokrashchenie skorosti kompilyacii\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Сокращение скорости компиляции</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>Работа с такими пакетами как <code>material-ui</code> и <code>styled-components</code>, чья компиляция занимает гораздо больше времени чем хотелось бы, подтолкнула разработчиков языка <code>TypeScript</code> на серию точечных оптимизаций, если быть конкретнее то шести, каждая из которых сократила время компиляции от 5% до 10%. По словам разработчиков время сборки\\редактирования <code>material-ui</code> сократилось на 40%. Кроме того, оптимизации затронули механизм изменения путей для импортов\\экспортов при изменении импортируемых\\экспортируемых файлов.</p>","commitInfoAll":[{"committedDate":"2020-08-31T14:35:57Z","message":"fix win heading.","messageHeadline":"fix win heading.","pushedDate":"2020-08-31T14:36:17Z","authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.9/Сокращение скорости компиляции/content.md"},{"id":"","version":"3.9","innovationName":"Комментарная директива @ts-expect-error","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"kommentarnaya direktiva @ts-expect-error","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"kommentarnaya direktiva @ts-expect-error\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Комментарная директива @ts-expect-error</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>Поскольку разработка на языке <code>TypeScript</code> неразрывно связанна с <code>JavaScript</code> в некоторых моментах может возникать разногласия.</p>\n<p>Представьте ситуацию при которой необходимо покрыть тестами функцию принимающую на вход строковой параметр и кроме того выполняющей в своем теле его валидацию времени выполнения.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">isStringAssert</span><span class=\"token punctuation\">(</span>valid<span class=\"token operator\">:</span><span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">asserts</span> valid <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>valid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">...</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">action</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">isStringAssert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// валидация времени выполнения</span>\n\n    <span class=\"token comment\">// некоторый код...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>\n<p>Поскольку лучшие практики тестирования предполагают написание таких тестов которые по своей природе не должны пройти, тестировщик пишуший тесты также на <code>TypeScript</code> при попытке протестировать ошибку время выполнения (<code>assert</code>) столкнется с проблемой время компиляции, так как компилятор не позволит скомпилировать код выявив несоответствие типов.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// файл .ts</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">isStringAssert</span><span class=\"token punctuation\">(</span>valid<span class=\"token operator\">:</span><span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">asserts</span> valid <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>valid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">...</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">action</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">isStringAssert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// валидация времени выполнения</span>\n\n    <span class=\"token comment\">// некоторый код...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ...где-то в .ts.spec</span>\n\n<span class=\"token comment\">/**\n * [error] Argument of type '5' is not assignable to parameter of type 'string'.\n * Компилятор TypeScript не позволяет скомпилировать код имеющий ошибки вызванные\n * несоответствие типов и тем самым препятствует тестированию кода времени выполнения.\n */</span>\n<span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>\n<p>Чтобы разрешить сложившуюся ситуацию начиная с текущей версии была введена комемнтарная директива <code>// @ts-expect-error</code>.\nНовая комментарная директива затавляет компилятор подовлять сообщение об ошибке в случае её возникновения, но при отсутствии необходимости сама становится её причиной.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// @ts-expect-error</span>\n<span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok!</span>\n<span class=\"token comment\">// @ts-expect-error</span>\n<span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error! Unused '@ts-expect-error' directive.</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.9/Комментарная директива \\@ts-expect-error/content.md"},{"id":"","version":"3.9","innovationName":"Проверка вызова функции в тернарном условном операторе","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"proverka vyzova funkcii v ternarnom uslovnom operatore","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"proverka vyzova funkcii v ternarnom uslovnom operatore\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Проверка вызова функции в тернарном условном операторе</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>В версии <code>3.7</code> была добавлена проверка обязательного вызова функций учавствующих в условном выражении <code>if</code>.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * Начиная с версии 3.7\n     * \n     * [error] This condition will always return true \n     * since the function is always defined.\n     * Did you mean to call it instead?\n     */</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>isValid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">/**\n         * По факту этот блок кода быдет\n         * выполняться всегда, поскольку\n         * в условном выражении участвует\n         * ссылка на функцию, а не предполагаемый\n         * результат её вызова!\n         */</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>\n<p>Начиная с версии <code>3.9</code> подобное поведение было реализованно и для тернарного условного оператора.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * Начиная с версии 3.9\n     * \n     * [error] This condition will always return true \n     * since the function is always defined.\n     * Did you mean to call it instead?\n     */</span>\n    <span class=\"token keyword\">return</span> isValid <span class=\"token operator\">?</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'false'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.9/Проверка вызова функции в тернарном условном операторе/content.md"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение поведения для оператора Non-Null при совместном использовании с оператором опциональной цепочки","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] izmenenie povedeniya dlya operatora non-null pri sovmestnom ispolzovanii s operatorom opcionalnoi cepochki","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"izmenenie povedeniya dlya operatora non-null pri sovmestnom ispolzovanii s operatorom opcionalnoi cepochki\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span> Изменение поведения для оператора Non-Null при совместном использовании с оператором опциональной цепочки</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>После того, как начиная с версии <code>3.7</code> был реализован оператор опциональной последовательности (<code>.?</code>), функционал определенный стандартом <em>ESMAScript</em>, многие обратили внимание на нелогичность его поведения при совместном использовании с таким оператором, как <code>Not-Null\\Not-Undefined</code>.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">T</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    f0<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        f1<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    p<span class=\"token operator\">?.</span>f0<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>f1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>\n<p>Как известно, оператор опциональной последовательности предполагает предотвращение выполнения цепочки вызовов и поскольку в коде выше в функцию <code>f</code> передается объект лишенный хоть каких-то опциональных признаков типа <code>T</code>, то ошибки при обращении к полю <code>f1</code> через нулевую ссылку ассоциированную с полем <code>f0</code> не произойдет.</p>\n<p>То есть предполагается что подобный код после компиляции примет следующий вид -</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_js\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">js</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * Обращение к f1 произойдет только в случае\n     * существования параметра p и определения в\n     * нем поля f0 ссылающегося на объект.\n     */</span><span class=\"token operator\">/</span>\n    p <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> p <span class=\"token operator\">===</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> p<span class=\"token punctuation\">.</span>f0<span class=\"token punctuation\">.</span>f1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_js\"></div>\n</div>\n<p>И это логично!</p>\n<p>Но до текущей версии подобный код разворачивался таким образом что приводило к ошибке во время выполнения.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_js\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">js</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * Обращение к f1 произойдет даже в случае\n     * если параметр p и\\или поле f1 отсутствует,\n     * что приведет к ошибке во время выполнения.\n     * Кроме того подобное поведение в корне противоречит\n     * ожижидаемому разработчиком поведению оператора\n     * опциональной последовательности.\n     */</span>\n     <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> p <span class=\"token operator\">===</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> p<span class=\"token punctuation\">.</span>f0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>f1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_js\"></div>\n</div>\n<p>Исходя из этого начиная с версии <code>3.9</code> поведение оператора <code>Not-Null\\Not-Undefined</code> используемого совместно с оператором опциональной цепочки было изменено на ожидаемое. В случае необходимости получения поведения предшествующего текущей версии предлагается конкретизировать выражение с помощью фигурных скобок.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">T</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    f0<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        f1<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * Указываем что обращение к полю f1\n     * должно произойти независимо от результата\n     * выражения в круглых скобках.\n     * \n     * После компиляции данный код примет подобный вид -\n     * \n     * (p === null || p === void 0 ? void 0 : p.f0).f1;\n     */</span>\n    <span class=\"token punctuation\">(</span>p<span class=\"token operator\">?.</span>f0<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>f1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.9/\\[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ\\] Изменение поведения для оператора Non-Null при совместном использовании с оператором опциональной цепочки/content.md"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Возникновение ошибки при наличии в строке закрывающей фигурной или угловатой скобки в файлах с расширением TSX","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] vozniknovenie oshibki pri nalichii v stroke zakryvaushchei figurnoi ili uglovatoi skobki v failah s rasshireniem tsx","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"vozniknovenie oshibki pri nalichii v stroke zakryvaushchei figurnoi ili uglovatoi skobki v failah s rasshireniem tsx\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span> Возникновение ошибки при наличии в строке закрывающей фигурной или угловатой скобки в файлах с расширением TSX</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>Спецификация <code>JSX</code> не допускает наличие закрывающих фигурных (<code>}</code>) и угловых (<code>></code>) скобок в строках. Поэтому начиная с текущей версии при явном их указании будет возникать ошибка текст которой предложит решение в виде их экранирования или замены на спец-символы допускаемые <code>JSX</code> спецификацией.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> text <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// Unexpected token. Did you mean `{'}'}` or `&amp;rbrace;`?</span>\n    <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span>Text <span class=\"token keyword\">with</span> closing curly bracket <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// Unexpected token. Did you mean `{'>'}` or `&amp;gt;`?</span>\n    <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span>Text <span class=\"token keyword\">with</span> closing angle bracket <span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.9/\\[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ\\] Возникновение ошибки при наличии в строке закрывающей фигурной или угловатой скобки в файлах с расширением TSX/content.md"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Повышение уровня проверки необязательных полей для типов определяющих тип пересечение","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] povyshenie urovnya proverki neobyazatelnyh polei dlya tipov opredelyaushchih tip peresechenie","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"povyshenie urovnya proverki neobyazatelnyh polei dlya tipov opredelyaushchih tip peresechenie\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span> Повышение уровня проверки необязательных полей для типов определяющих тип пересечение</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>До версии <code>3.9</code> такой тип пересечения (<code>Intersection</code>) как <code>A &#x26; B</code> присваивается типу <code>C</code> если <code>A</code> или <code>B</code> присваивается <code>C</code>. При наличии в <code>A</code> или <code>B</code> необязательных членов это может превести к неожиданным последствиям. </p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">A</span></span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">B</span></span> <span class=\"token punctuation\">{</span>\n    b<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">C</span></span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n    b<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">let</span> x<span class=\"token operator\">:</span> <span class=\"token constant\">A</span> <span class=\"token operator\">&amp;</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">let</span> y<span class=\"token operator\">:</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Ok до версии 3.9, поскольку A можно присвоить C\n * и B можно присвоить C.\n */</span>\ny <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>\n<p>Поэтому начиная с текущей версии поведение измененно таким образом, что пока каждый тип определяющим пересечение является объектным типом, система типов будет рассматривать все члены сразу.</p>\n<p>Поэтому в рассматриваемом коде возникнит следующая ошибка -</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// ...код</span>\n\n<span class=\"token comment\">/**\n * Error начиная с версии 3.9 -\n * \n * Type 'A &amp; B' is not assignable to type 'C'.\n * Types of property 'a' are incompatible.\n * Type 'number' is not assignable to type 'boolean | undefined'.\n */</span>\ny <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.9/\\[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ\\] Повышение уровня проверки необязательных полей для типов определяющих тип пересечение/content.md"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Определение типа пересечения дескриминантными полями","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] opredelenie tipa peresecheniya deskriminantnymi polyami","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"opredelenie tipa peresecheniya deskriminantnymi polyami\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span> Определение типа пересечения дескриминантными полями</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>До версии <code>3.9</code> сужение на основе дескиминантных полей определяющих тип пересечение (<code>Intersection</code>) определяло такие поля, как принадлежащие к типу <code>never</code>.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">join</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">U</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token constant\">U</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">&amp;</span> <span class=\"token constant\">U</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">NameInfo</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">;</span>\n\n    firstName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    lastName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AddressInfo</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"address\"</span><span class=\"token punctuation\">;</span>\n\n    country<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    city<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">let</span> nameInfo<span class=\"token operator\">:</span> NameInfo<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">let</span> addressInfo<span class=\"token operator\">:</span> AddressInfo<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * let person: NameInfo &amp; AddressInfo\n */</span>\n<span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token function\">join</span><span class=\"token punctuation\">(</span>nameInfo<span class=\"token punctuation\">,</span> addressInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Ok, До версии 3.9\n */</span>\nperson<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// (property) type: never</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>\n<p>Поскольку на практике потеря информации о типах полей недопустима начиная с текущей версии вывод типов определит как тип <code>never</code> не дескриминантные поля, а сам тип пересечения.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// ...код</span>\n\n\n<span class=\"token comment\">/**\n * let person: never\n */</span>\n<span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token function\">join</span><span class=\"token punctuation\">(</span>nameInfo<span class=\"token punctuation\">,</span> addressInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Error, Начиная с версии 3.9 -\n * \n * Property 'type' does not exist on type 'never'.\n */</span>\nperson<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// (property) type: never</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.9/\\[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ\\] Определение типа пересечения дескриминантными полями/content.md"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Параметр типа расширяющий тип any больше не наследует его характеристики","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] parametr tipa rasshiryaushchii tip any bolshe ne nasleduet ego harakteristiki","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"parametr tipa rasshiryaushchii tip any bolshe ne nasleduet ego harakteristiki\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span> Параметр типа расширяющий тип any больше не наследует его характеристики</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>Раньше параметр типа расширяющий тип <code>any</code> наделялся всеми его характеристиками, что при указании его в качестве типа снижало уровень типобезопасности программы. </p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> f <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\"><span class=\"token builtin\">any</span></span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * [*]\n     * До версии 3.9 - Ok\n     * Начиная с версии 3.9 - Error ->\n     * Property 'notExistsMethod' does not exist on type 'T'.\n     */</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">notExistsMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [*]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.9/\\[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ\\] Параметр типа расширяющий тип any больше не наследует его характеристики/content.md"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] get и set больше не перечисляемы","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] get i set bolshe ne perechislyaemy","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"get i set bolshe ne perechislyaemy\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span> get и set больше не перечисляемы</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>До версии <code>3.9</code> при генерации кода для аксессоров определенных в теле класса под <code>es5</code> \\ <code>es2015</code> поле <code>enumerable</code> устанавливалось в значение <code>true</code>, в то время как спецификация <em>ESMAScript</em> предполагает <code>false</code>.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\"><span class=\"token constant\">T</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">set</span> <span class=\"token function\">accessor</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">get</span> <span class=\"token function\">accessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"accessor\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_js\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">js</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> <span class=\"token constant\">T</span> <span class=\"token operator\">=</span> <span class=\"token comment\">/** @class */</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> <span class=\"token string\">\"accessor\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"accessor\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        enumerable<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// false начиная с версии 3.9, но true для версий ниже</span>\n        configurable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_js\"></div>\n</div>\n<p>Начиная с текущей версии расхождение со спецификацией <em>ESMAScript</em> было исправленно.</p>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.9/\\[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ\\] get и set больше не перечисляемы/content.md"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] export * теперь всегда включается в сборку","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] export * teper vsegda vkluchaetsya v sborku","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"export * teper vsegda vkluchaetsya v sborku\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span> export * теперь всегда включается в сборку</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p>Раньше реэкспорт вида <code>export * from \"path/to/module\";</code> не включался в сборку если модуль не экспортировал валидных с точки зрения <em>JavaScript</em> конструкций. Это поведение вставляло палки в колеса такому компилятору как <em>Babel</em> из-за чего было принято решение изменить поведение.</p>\n<p>Начиная с текущей версии подобные модули будут включены в конечную сборку.</p>","commitInfoAll":[{"committedDate":"2020-08-31T14:35:57Z","message":"fix win heading.","messageHeadline":"fix win heading.","pushedDate":"2020-08-31T14:36:17Z","authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.9/\\[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ\\] export \\* теперь всегда включается в сборку/content.md"}]},"winTocTree":[{"id":"0","isCollapse":false,"index":0,"data":{"releaseHistory":[{"version":"3.3","dateRelease":"january 31, 2019"}],"mmp":"3.3","innovations":[{"id":"","version":"3.3","innovationName":"Повышение производительности сборки для команды --build --watch","dateRelease":"January 31, 2019","datePublication":"January 31, 2019","tags":[],"path":"povyshenie proizvoditelnosti sborki dlya komandy --build --watch"},{"id":"","version":"3.3","innovationName":"Улучшение поведения для типов Union указанных в качестве параметров функции","dateRelease":"January 31, 2019","datePublication":"January 31, 2019","tags":[],"path":"uluchshenie povedeniya dlya tipov union ukazannyh v kachestve parametrov funkcii"}]}},{"id":"1","isCollapse":false,"index":1,"data":{"releaseHistory":[{"version":"3.4","dateRelease":"March 29, 2019"}],"mmp":"3.4","innovations":[{"id":"","version":"3.4","innovationName":"Опции компилятора --tsBuildInfoFile","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"opcii kompilyatora --tsbuildinfofile"},{"id":"","version":"3.4","innovationName":"Опции компилятора --incremental","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"opcii kompilyatora --incremental"},{"id":"","version":"3.4","innovationName":"Массивоподобные readonly типы","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"massivopodobnye readonly tipy"},{"id":"","version":"3.4","innovationName":"Расширенный тип ReadonlyArray","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"rasshirennyi tip readonlyarray"},{"id":"","version":"3.4","innovationName":"Привидение к константе (const assertion)","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"prividenie k konstante (const assertion)"},{"id":"","version":"3.4","innovationName":"Проверка типов для globalThis","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"proverka tipov dlya globalthis"}]}},{"id":"2","isCollapse":false,"index":2,"data":{"releaseHistory":[{"version":"3.5","dateRelease":"May 29, 2019"}],"mmp":"3.5","innovations":[{"id":"","version":"3.5","innovationName":"Вспомогательный тип Omit","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"vspomogatelnyi tip omit"},{"id":"","version":"3.5","innovationName":"Улучшение механизма проверки избыточных полей в объедененных типах (Union types)","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie mehanizma proverki izbytochnyh polei v obedenennyh tipah (union types)"},{"id":"","version":"3.5","innovationName":"Введение нового флага --allowUmdGlobalAccess","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"vvedenie novogo flaga --allowumdglobalaccess"},{"id":"","version":"3.5","innovationName":"Улучшение механизма проверки объединенных типов","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie mehanizma proverki obedinennyh tipov"},{"id":"","version":"3.5","innovationName":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie mehanizma vyvoda tipa vysshego poryadka dlya obobshchennyh konstruktorov"},{"id":"","version":"3.5","innovationName":"Неявное ограничение обобщенных параметров типом unknown","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"neyavnoe ogranichenie obobshchennyh parametrov tipom unknown"},{"id":"","version":"3.5","innovationName":"Изменение правил для типа unknown и индексной сигнатуре","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"izmenenie pravil dlya tipa unknown i indeksnoi signature"},{"id":"","version":"3.5","innovationName":"Изменение логики для Object.keys для версии es5","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"izmenenie logiki dlya object.keys dlya versii es5"}]}},{"id":"3","isCollapse":false,"index":3,"data":{"releaseHistory":[{"version":"3.6","dateRelease":"August 28, 2019"}],"mmp":"3.6","innovations":[{"id":"","version":"3.6","innovationName":"Повышение типобезопасности генероторов","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"povyshenie tipobezopasnosti generotorov"},{"id":"","version":"3.6","innovationName":"Добавление хелпера иметирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"dobavlenie helpera imetiruushchego mehanizm spread array pri kompilyacii v ecmascript nije versii 6 pri neaktivnom flage --downleveliteration"},{"id":"","version":"3.6","innovationName":"Расширение системы типов типами представляющими структуры данных только для чтения","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"rasshirenie sistemy tipov tipami predstavlyaushchimi struktury dannyh tolko dlya chteniya"},{"id":"","version":"3.6","innovationName":"Строковой идентификатор функции-конструктора","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"strokovoi identifikator funkcii-konstruktora"},{"id":"","version":"3.6","innovationName":"Расширение вывода об ошибках при работе с Promise","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"rasshirenie vyvoda ob oshibkah pri rabote s promise"},{"id":"","version":"3.6","innovationName":"Слияние одноименных классов и функций из окружающего контекста","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"sliyanie odnoimennyh klassov i funkcii iz okrujaushchego konteksta"},{"id":"","version":"3.6","innovationName":"Добавлена поддержка Unicode для идентификаторов","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"dobavlena podderjka unicode dlya identifikatorov"},{"id":"","version":"3.6","innovationName":"Поддержка import.meta для SystemJS","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"podderjka import.meta dlya systemjs"},{"id":"","version":"3.6","innovationName":"get и set в окружающем контексте","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"get i set v okrujaushchem kontekste"},{"id":"","version":"3.6","innovationName":"Api для поддержки --build и --incremental","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"api dlya podderjki --build i --incremental"},{"id":"","version":"3.6","innovationName":"Интеллектуальное определение синтаксиса авто-импорта","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"intellektualnoe opredelenie sintaksisa avto-importa"}]}},{"id":"4","isCollapse":false,"index":4,"data":{"releaseHistory":[{"version":"3.7","dateRelease":"November 5, 2019"},{"version":"3.7-rc","dateRelease":"November 4, 2019"},{"version":"3.7-beta","dateRelease":"November 3, 2019"},{"version":"3.7-alpha","dateRelease":"November 2, 2019"}],"mmp":"3.7","innovations":[{"id":"","version":"3.7-rc","innovationName":"Оператор опциональной последовательности (?.)","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":["исправление","Критическое изменение","Компилятор"],"path":"operator opcionalnoi posledovatelnosti (?.)"},{"id":"","version":"3.7-rc","innovationName":"Оператор объединения со значением null (??)","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":["высокая ожидаемость"],"path":"operator obedineniya so znacheniem null (??)"},{"id":"","version":"3.7-rc","innovationName":"Утверждение в сигнатуре (Signature Assertion)","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":["важно"],"path":"utverjdenie v signature (signature assertion)"},{"id":"","version":"3.7-rc","innovationName":"Улучшена поддержка для типа never возвращаемого из функций","dateRelease":"November 4, 2019","datePublication":"November 5, 2019","tags":["изменение"],"path":"uluchshena podderjka dlya tipa never vozvrashchaemogo iz funkcii"},{"id":"","version":"3.7-beta","innovationName":"Проверка невызванных функций","dateRelease":"November 3, 2019","datePublication":"November 5, 2019","tags":["баг"],"path":"proverka nevyzvannyh funkcii"},{"id":"","version":"3.7-beta","innovationName":"Рекурсивность для псевдононимов типов","dateRelease":"November 3, 2019","datePublication":"November 5, 2019","tags":["компилятор"],"path":"rekursivnost dlya psevdononimov tipov"},{"id":"","version":"3.7-alpha","innovationName":"Совместное использование флагов --declaration и --allowJs","dateRelease":"November 2, 2019","datePublication":"November 5, 2019","tags":["директивы"],"path":"sovmestnoe ispolzovanie flagov --declaration i --allowjs"},{"id":"","version":"3.7-alpha","innovationName":"@ts-nocheck в TypeScript файлах","dateRelease":"November 2, 2019","datePublication":"November 5, 2019","tags":["общее"],"path":"@ts-nocheck v typescript failah"}]}},{"id":"5","isCollapse":false,"index":5,"data":{"releaseHistory":[{"version":"3.8","dateRelease":"February 20, 2020"}],"mmp":"3.8","innovations":[{"id":"","version":"3.8","innovationName":"Импорт и экспорт только типа и флаг --importsNotUsedAsValues","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"import i eksport tolko tipa i flag --importsnotusedasvalues"},{"id":"","version":"3.8","innovationName":"Закрытые поля ECMAScript","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"zakrytye polya ecmascript"},{"id":"","version":"3.8","innovationName":"await высшего уровня","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"await vysshego urovnya"},{"id":"","version":"3.8","innovationName":"Реализация новой формы ре-экспорта","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"realizaciya novoi formy re-eksporta"},{"id":"","version":"3.8","innovationName":"Новая конфигурационная группа параметров watchOptions","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"novaya konfiguracionnaya gruppa parametrov watchoptions"},{"id":"","version":"3.8","innovationName":"Новый флаг --assumeChangesOnlyAffectDirectDependencies","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"novyi flag --assumechangesonlyaffectdirectdependencies"},{"id":"","version":"3.8","innovationName":"Модификаторы JSDocs","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"modifikatory jsdocs"},{"id":"","version":"3.8","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Более строгие проверки объединений имеющих с индексной сигнатурой","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"[kriticheskoe izmenenie] bolee strogie proverki obedinenii imeushchih s indeksnoi signaturoi"},{"id":"","version":"3.8","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Тип object в JSDoc при активном флаге --noImplicitAny больше не расценивается как any","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"[kriticheskoe izmenenie] tip object v jsdoc pri aktivnom flage --noimplicitany bolshe ne rascenivaetsya kak any"}]}},{"id":"6","isCollapse":false,"index":6,"data":{"releaseHistory":[{"version":"3.9","dateRelease":"May 12, 2020"}],"mmp":"3.9","innovations":[{"id":"","version":"3.9","innovationName":"Улучшение вывода типа для Promise.all","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"uluchshenie vyvoda tipa dlya promise.all"},{"id":"","version":"3.9","innovationName":"Сокращение скорости компиляции","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"sokrashchenie skorosti kompilyacii"},{"id":"","version":"3.9","innovationName":"Комментарная директива @ts-expect-error","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"kommentarnaya direktiva @ts-expect-error"},{"id":"","version":"3.9","innovationName":"Проверка вызова функции в тернарном условном операторе","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"proverka vyzova funkcii v ternarnom uslovnom operatore"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение поведения для оператора Non-Null при совместном использовании с оператором опциональной цепочки","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] izmenenie povedeniya dlya operatora non-null pri sovmestnom ispolzovanii s operatorom opcionalnoi cepochki"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Возникновение ошибки при наличии в строке закрывающей фигурной или угловатой скобки в файлах с расширением TSX","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] vozniknovenie oshibki pri nalichii v stroke zakryvaushchei figurnoi ili uglovatoi skobki v failah s rasshireniem tsx"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Повышение уровня проверки необязательных полей для типов определяющих тип пересечение","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] povyshenie urovnya proverki neobyazatelnyh polei dlya tipov opredelyaushchih tip peresechenie"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Определение типа пересечения дескриминантными полями","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] opredelenie tipa peresecheniya deskriminantnymi polyami"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Параметр типа расширяющий тип any больше не наследует его характеристики","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] parametr tipa rasshiryaushchii tip any bolshe ne nasleduet ego harakteristiki"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] get и set больше не перечисляемы","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] get i set bolshe ne perechislyaemy"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] export * теперь всегда включается в сборку","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] export * teper vsegda vkluchaetsya v sborku"}]}},{"id":"7","isCollapse":false,"index":7,"data":{"releaseHistory":[{"version":"4.0","dateRelease":"August 20, 2020"}],"mmp":"4.0","innovations":[{"id":"","version":"4.0","innovationName":"Вариативный кортеж","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"variativnyi kortej"},{"id":"","version":"4.0","innovationName":"Помечанные элементы кортежа","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"pomechannye elementy korteja"},{"id":"","version":"4.0","innovationName":"Операторы присваивания короткого замыкания","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"operatory prisvaivaniya korotkogo zamykaniya"},{"id":"","version":"4.0","innovationName":"Вывод типов для полей класса по параметрам конструктора","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"vyvod tipov dlya polei klassa po parametram konstruktora"},{"id":"","version":"4.0","innovationName":"unknown как тип исключения блока catch","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"unknown kak tip isklucheniya bloka catch"},{"id":"","version":"4.0","innovationName":"--noEmit совмещенный с --incremental","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"--noemit sovmeshchennyi s --incremental"},{"id":"","version":"4.0","innovationName":"Пользовательская фабрика jsx фрагментов","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"polzovatelskaya fabrika jsx fragmentov"},{"id":"","version":"4.0","innovationName":"Добавление комментарной директивы @deprecated","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"dobavlenie kommentarnoi direktivy @deprecated"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Изменение lib.d.ts","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[kriticheskoe izmenenie]  izmenenie lib.d.ts"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Переопределение аксессоров полем и наоборот теперь является ошибкой","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[kriticheskoe izmenenie]  pereopredelenie aksessorov polem i naoborot teper yavlyaetsya oshibkoi"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Операнды для delete должны быть необязательными","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[kriticheskoe izmenenie]  operandy dlya delete doljny byt neobyazatelnymi"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Изменение фабричного api Nodejs","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[kriticheskoe izmenenie]  izmenenie fabrichnogo api nodejs"}]}},{"id":"8","isCollapse":false,"index":8,"data":{"releaseHistory":[{"version":"4.1@beta","dateRelease":"September 18, 2020"}],"colors":{"--color_light":"#fff","--color_middle-lite":"#93cf94","--color_accent":"#aff933","--color_ambient":"#a12d2d"},"mmp":"4.1","innovations":[{"id":"","version":"4.1@beta","innovationName":"Шаблонный литеральный строковой тип","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":[],"path":"shablonnyi literalnyi strokovoi tip"},{"id":"","version":"4.1@beta","innovationName":"Переопределение ключей в сопоставленных типах","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":[],"path":"pereopredelenie kluchei v sopostavlennyh tipah"},{"id":"","version":"4.1@beta","innovationName":"Рекурсивные условные типы","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":[],"path":"rekursivnye uslovnye tipy"},{"id":"","version":"4.1@beta","innovationName":"paths без baseUrl","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":[],"path":"paths bez baseurl"},{"id":"","version":"4.1@beta","innovationName":"checkJs не требует активации allowJs","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":[],"path":"checkjs ne trebuet aktivacii allowjs"},{"id":"","version":"4.1@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] abstract больше не совместим с async","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":[],"path":"[kriticheskoe izmenenie] abstract bolshe ne sovmestim s async"},{"id":"","version":"4.1@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] any и unknown доминируют в ложных позициях","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":[],"path":"[kriticheskoe izmenenie] any i unknown dominiruut v lojnyh poziciyah"},{"id":"","version":"4.1@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] --declaration и --outFile требуют имя корневого пакета","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":[],"path":"[kriticheskoe izmenenie] --declaration i --outfile trebuut imya kornevogo paketa"},{"id":"","version":"4.1@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] параметры resolve теперь обязательные","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":[],"path":"[kriticheskoe izmenenie] parametry resolve teper obyazatelnye"}]}}],"pageNavDataAll":[{"name":"3.3","path":"3.3","sections":[{"name":"Повышение производительности сборки для команды --build --watch","path":"povyshenie proizvoditelnosti sborki dlya komandy --build --watch","data":{"version":"3.3"}},{"name":"Улучшение поведения для типов Union указанных в качестве параметров функции","path":"uluchshenie povedeniya dlya tipov union ukazannyh v kachestve parametrov funkcii","data":{"version":"3.3"}}]},{"name":"3.4","path":"3.4","sections":[{"name":"Опции компилятора --tsBuildInfoFile","path":"opcii kompilyatora --tsbuildinfofile","data":{"version":"3.4"}},{"name":"Опции компилятора --incremental","path":"opcii kompilyatora --incremental","data":{"version":"3.4"}},{"name":"Массивоподобные readonly типы","path":"massivopodobnye readonly tipy","data":{"version":"3.4"}},{"name":"Расширенный тип ReadonlyArray","path":"rasshirennyi tip readonlyarray","data":{"version":"3.4"}},{"name":"Привидение к константе (const assertion)","path":"prividenie k konstante (const assertion)","data":{"version":"3.4"}},{"name":"Проверка типов для globalThis","path":"proverka tipov dlya globalthis","data":{"version":"3.4"}}]},{"name":"3.5","path":"3.5","sections":[{"name":"Вспомогательный тип Omit","path":"vspomogatelnyi tip omit","data":{"version":"3.5"}},{"name":"Улучшение механизма проверки избыточных полей в объедененных типах (Union types)","path":"uluchshenie mehanizma proverki izbytochnyh polei v obedenennyh tipah (union types)","data":{"version":"3.5"}},{"name":"Введение нового флага --allowUmdGlobalAccess","path":"vvedenie novogo flaga --allowumdglobalaccess","data":{"version":"3.5"}},{"name":"Улучшение механизма проверки объединенных типов","path":"uluchshenie mehanizma proverki obedinennyh tipov","data":{"version":"3.5"}},{"name":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов","path":"uluchshenie mehanizma vyvoda tipa vysshego poryadka dlya obobshchennyh konstruktorov","data":{"version":"3.5"}},{"name":"Неявное ограничение обобщенных параметров типом unknown","path":"neyavnoe ogranichenie obobshchennyh parametrov tipom unknown","data":{"version":"3.5"}},{"name":"Изменение правил для типа unknown и индексной сигнатуре","path":"izmenenie pravil dlya tipa unknown i indeksnoi signature","data":{"version":"3.5"}},{"name":"Изменение логики для Object.keys для версии es5","path":"izmenenie logiki dlya object.keys dlya versii es5","data":{"version":"3.5"}}]},{"name":"3.6","path":"3.6","sections":[{"name":"Повышение типобезопасности генероторов","path":"povyshenie tipobezopasnosti generotorov","data":{"version":"3.6"}},{"name":"Добавление хелпера иметирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration","path":"dobavlenie helpera imetiruushchego mehanizm spread array pri kompilyacii v ecmascript nije versii 6 pri neaktivnom flage --downleveliteration","data":{"version":"3.6"}},{"name":"Расширение системы типов типами представляющими структуры данных только для чтения","path":"rasshirenie sistemy tipov tipami predstavlyaushchimi struktury dannyh tolko dlya chteniya","data":{"version":"3.6"}},{"name":"Строковой идентификатор функции-конструктора","path":"strokovoi identifikator funkcii-konstruktora","data":{"version":"3.6"}},{"name":"Расширение вывода об ошибках при работе с Promise","path":"rasshirenie vyvoda ob oshibkah pri rabote s promise","data":{"version":"3.6"}},{"name":"Слияние одноименных классов и функций из окружающего контекста","path":"sliyanie odnoimennyh klassov i funkcii iz okrujaushchego konteksta","data":{"version":"3.6"}},{"name":"Добавлена поддержка Unicode для идентификаторов","path":"dobavlena podderjka unicode dlya identifikatorov","data":{"version":"3.6"}},{"name":"Поддержка import.meta для SystemJS","path":"podderjka import.meta dlya systemjs","data":{"version":"3.6"}},{"name":"get и set в окружающем контексте","path":"get i set v okrujaushchem kontekste","data":{"version":"3.6"}},{"name":"Api для поддержки --build и --incremental","path":"api dlya podderjki --build i --incremental","data":{"version":"3.6"}},{"name":"Интеллектуальное определение синтаксиса авто-импорта","path":"intellektualnoe opredelenie sintaksisa avto-importa","data":{"version":"3.6"}}]},{"name":"3.7","path":"3.7","sections":[{"name":"Оператор опциональной последовательности (?.)","path":"operator opcionalnoi posledovatelnosti (?.)","data":{"version":"3.7-rc"}},{"name":"Оператор объединения со значением null (??)","path":"operator obedineniya so znacheniem null (??)","data":{"version":"3.7-rc"}},{"name":"Утверждение в сигнатуре (Signature Assertion)","path":"utverjdenie v signature (signature assertion)","data":{"version":"3.7-rc"}},{"name":"Улучшена поддержка для типа never возвращаемого из функций","path":"uluchshena podderjka dlya tipa never vozvrashchaemogo iz funkcii","data":{"version":"3.7-rc"}},{"name":"Проверка невызванных функций","path":"proverka nevyzvannyh funkcii","data":{"version":"3.7-beta"}},{"name":"Рекурсивность для псевдононимов типов","path":"rekursivnost dlya psevdononimov tipov","data":{"version":"3.7-beta"}},{"name":"Совместное использование флагов --declaration и --allowJs","path":"sovmestnoe ispolzovanie flagov --declaration i --allowjs","data":{"version":"3.7-alpha"}},{"name":"@ts-nocheck в TypeScript файлах","path":"@ts-nocheck v typescript failah","data":{"version":"3.7-alpha"}}]},{"name":"3.8","path":"3.8","sections":[{"name":"Импорт и экспорт только типа и флаг --importsNotUsedAsValues","path":"import i eksport tolko tipa i flag --importsnotusedasvalues","data":{"version":"3.8"}},{"name":"Закрытые поля ECMAScript","path":"zakrytye polya ecmascript","data":{"version":"3.8"}},{"name":"await высшего уровня","path":"await vysshego urovnya","data":{"version":"3.8"}},{"name":"Реализация новой формы ре-экспорта","path":"realizaciya novoi formy re-eksporta","data":{"version":"3.8"}},{"name":"Новая конфигурационная группа параметров watchOptions","path":"novaya konfiguracionnaya gruppa parametrov watchoptions","data":{"version":"3.8"}},{"name":"Новый флаг --assumeChangesOnlyAffectDirectDependencies","path":"novyi flag --assumechangesonlyaffectdirectdependencies","data":{"version":"3.8"}},{"name":"Модификаторы JSDocs","path":"modifikatory jsdocs","data":{"version":"3.8"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Более строгие проверки объединений имеющих с индексной сигнатурой","path":"[kriticheskoe izmenenie] bolee strogie proverki obedinenii imeushchih s indeksnoi signaturoi","data":{"version":"3.8"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Тип object в JSDoc при активном флаге --noImplicitAny больше не расценивается как any","path":"[kriticheskoe izmenenie] tip object v jsdoc pri aktivnom flage --noimplicitany bolshe ne rascenivaetsya kak any","data":{"version":"3.8"}}]},{"name":"3.9","path":"3.9","sections":[{"name":"Улучшение вывода типа для Promise.all","path":"uluchshenie vyvoda tipa dlya promise.all","data":{"version":"3.9"}},{"name":"Сокращение скорости компиляции","path":"sokrashchenie skorosti kompilyacii","data":{"version":"3.9"}},{"name":"Комментарная директива @ts-expect-error","path":"kommentarnaya direktiva @ts-expect-error","data":{"version":"3.9"}},{"name":"Проверка вызова функции в тернарном условном операторе","path":"proverka vyzova funkcii v ternarnom uslovnom operatore","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение поведения для оператора Non-Null при совместном использовании с оператором опциональной цепочки","path":"[kriticheskoe izmenenie] izmenenie povedeniya dlya operatora non-null pri sovmestnom ispolzovanii s operatorom opcionalnoi cepochki","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Возникновение ошибки при наличии в строке закрывающей фигурной или угловатой скобки в файлах с расширением TSX","path":"[kriticheskoe izmenenie] vozniknovenie oshibki pri nalichii v stroke zakryvaushchei figurnoi ili uglovatoi skobki v failah s rasshireniem tsx","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Повышение уровня проверки необязательных полей для типов определяющих тип пересечение","path":"[kriticheskoe izmenenie] povyshenie urovnya proverki neobyazatelnyh polei dlya tipov opredelyaushchih tip peresechenie","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Определение типа пересечения дескриминантными полями","path":"[kriticheskoe izmenenie] opredelenie tipa peresecheniya deskriminantnymi polyami","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Параметр типа расширяющий тип any больше не наследует его характеристики","path":"[kriticheskoe izmenenie] parametr tipa rasshiryaushchii tip any bolshe ne nasleduet ego harakteristiki","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] get и set больше не перечисляемы","path":"[kriticheskoe izmenenie] get i set bolshe ne perechislyaemy","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] export * теперь всегда включается в сборку","path":"[kriticheskoe izmenenie] export * teper vsegda vkluchaetsya v sborku","data":{"version":"3.9"}}]},{"name":"4.0","path":"4.0","sections":[{"name":"Вариативный кортеж","path":"variativnyi kortej","data":{"version":"4.0"}},{"name":"Помечанные элементы кортежа","path":"pomechannye elementy korteja","data":{"version":"4.0"}},{"name":"Операторы присваивания короткого замыкания","path":"operatory prisvaivaniya korotkogo zamykaniya","data":{"version":"4.0"}},{"name":"Вывод типов для полей класса по параметрам конструктора","path":"vyvod tipov dlya polei klassa po parametram konstruktora","data":{"version":"4.0"}},{"name":"unknown как тип исключения блока catch","path":"unknown kak tip isklucheniya bloka catch","data":{"version":"4.0"}},{"name":"--noEmit совмещенный с --incremental","path":"--noemit sovmeshchennyi s --incremental","data":{"version":"4.0"}},{"name":"Пользовательская фабрика jsx фрагментов","path":"polzovatelskaya fabrika jsx fragmentov","data":{"version":"4.0"}},{"name":"Добавление комментарной директивы @deprecated","path":"dobavlenie kommentarnoi direktivy @deprecated","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Изменение lib.d.ts","path":"[kriticheskoe izmenenie]  izmenenie lib.d.ts","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Переопределение аксессоров полем и наоборот теперь является ошибкой","path":"[kriticheskoe izmenenie]  pereopredelenie aksessorov polem i naoborot teper yavlyaetsya oshibkoi","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Операнды для delete должны быть необязательными","path":"[kriticheskoe izmenenie]  operandy dlya delete doljny byt neobyazatelnymi","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Изменение фабричного api Nodejs","path":"[kriticheskoe izmenenie]  izmenenie fabrichnogo api nodejs","data":{"version":"4.0"}}]},{"name":"4.1","path":"4.1","sections":[{"name":"Шаблонный литеральный строковой тип","path":"shablonnyi literalnyi strokovoi tip","data":{"version":"4.1@beta"}},{"name":"Переопределение ключей в сопоставленных типах","path":"pereopredelenie kluchei v sopostavlennyh tipah","data":{"version":"4.1@beta"}},{"name":"Рекурсивные условные типы","path":"rekursivnye uslovnye tipy","data":{"version":"4.1@beta"}},{"name":"paths без baseUrl","path":"paths bez baseurl","data":{"version":"4.1@beta"}},{"name":"checkJs не требует активации allowJs","path":"checkjs ne trebuet aktivacii allowjs","data":{"version":"4.1@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] abstract больше не совместим с async","path":"[kriticheskoe izmenenie] abstract bolshe ne sovmestim s async","data":{"version":"4.1@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] any и unknown доминируют в ложных позициях","path":"[kriticheskoe izmenenie] any i unknown dominiruut v lojnyh poziciyah","data":{"version":"4.1@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] --declaration и --outFile требуют имя корневого пакета","path":"[kriticheskoe izmenenie] --declaration i --outfile trebuut imya kornevogo paketa","data":{"version":"4.1@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] параметры resolve теперь обязательные","path":"[kriticheskoe izmenenie] parametry resolve teper obyazatelnye","data":{"version":"4.1@beta"}}]}]}},"staticQueryHashes":["408059355","63159454"]}