{"componentChunkName":"component---src-page-templates-what-is-new-page-what-is-new-page-provider-tsx","path":"/what-is-new/3.6","result":{"pageContext":{"localization":{"lang":"ru","title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи.","appNavigation":[{"id":"index","path":"/","name":"Главная"},{"id":"book-contents","path":"/book/chapters","name":"Оглавление"},{"id":"what-is-new-contents","path":"/what-is-new","name":"Что нового?"},{"id":"pdf","path":"/pdf","name":"PDF Версия"}],"notification":{"behaviorNotification":{"copyLink":"Ссылка скопирована!"}},"layouts":{"shared":{"informers":{"donateInformer":{"minBanner":{"label":"Хочешь поддержать проект финансово?","buttons":{"yes":"Да, хочу! Узнать подробнее...","no":"Нет. Закрыть окно."}},"maxBanner":{"html":{"__html":"Чтобы <b>контент</b> приносил <b>максимальную пользу</b> его <b>необходимо</b> постоянно <b>совершенствовать</b> и <b>адаптировать</b>\n        под каждую новую версию <i>TypeScript</i>. Это отнимает <b>много времени</b> и без Вашей, даже <b>незначительно\n        финансовой</b>, поддержки практически <b>невозможно</b>. Помогая проекту вы прежде всего принимаете <b>участие</b> в\n        <b>развитии</b> профессионального уровня ваших <b>друзей</b>, <b>коллег</b>, <b>подчиненных</b>. Выпусти желание\n        сделать свой мир лучше. <b>Сделай контент для будующих специалистов ещё качественей и доступней!</b>"},"href":"#"}},"watchWithTelegramInformer":{"text":["Хочешь поддерживать свои знания в актуальном состоянии?","Тогда подписывайся на Telegram канал и узнавай обо всех изменениях!"],"subscribeButton":{"label":"Подписаться"}}},"links":{"telegram":"#"},"appContent":{"contentNav":{"prevButton":{"label":"Назад"},"nextButton":{"label":"Вперед"}}},"appHeader":{"navToggleButton":{"tooltips":{"open":["Открыть боковое","меню"],"close":["Закрыть боковое","меню"]}},"appMenu":{"pdfButton":{"href":"#","tooltip":["Скачать","PDF версию"],"label":"Скачать PDF версию"},"telegramButton":{"href":"https://t.me/nauchikus","tooltip":["Следить за","изменениями в","Telegram"],"label":"Следить за изменениями в Telegram"},"githubButton":{"href":"https://github.com/nauchikus/typescript-definitive-guide","tooltip":["Посетить проект на","Github"],"label":"Посетить проект на Github"}},"donateDropdown":{"href":"https://yasobe.ru/na/typescript_definitive_guide","toggleButton":{"label":["Поддержать","финансово"]},"content":{"title":"Сделай контент для будующих поколений ещё качественей и доступней!","subtitle":{"__html":"Контент требует постоянного совершенстования и адаптации под каждую новую версию\nязыка TypeScript.\nЭто отнимает много времени и без Вашей, даже незначительно финансовой, поддержки практически\nневозможно.\nПрийми участие в развитии профессионального уровня своих друзей, коллег, подчиненных. Встань на\nсторону небезразличных!"}}},"appSearch":{"inputPlaceholder":"Я ищу...","submitButton":{"ariaLabel":"Отправить"}}},"pdf":{"downloadPdfBookButton":{"title":"Скачать PDF Версию","href":"pdf/TypeScript Подробное Руководство.pdf"}}}},"pages":{"index":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"appDescription":"Книга и документация в одном","subtitleAll":["TypeScript в деталях","TypeScript крупным планом","TypeScript под микроскопом","TypeScript со всех сторон"]}},"book__chapters":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"tocItem":{"copyLinkToBufferButton":{"tooltip":"Скопировать ссылку в буфер обмена"},"collapseTocButton":{"tooltip":{"openState":"Открыть","closeState":"Закрыть"}}},"secondaryContentBar":{"label":"Оглавление","tocFilterButton":{"tooltip":"Отфильтровать на основе разделов"},"tocCollapseAllButton":{"tooltip":{"openState":"Раскрыть все","closeState":"Закрыть все"}}},"asideLayout":{"tagBarLabel":"Тематические разделы","tagBar":{"cleanFilterButton":"Все разделы"}}}},"book__chapter":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"secondaryContentBar":{"editOnGithubButton":{"tooltip":"Редактировать на Github"}}}},"what-is-new__toc":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"primaryContentBar":{"label":"История нововведений"},"tocItem":{"copyLinkToBufferButton":{"tooltip":"Скопировать ссылку в буфер обмена"}}}},"not-found":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"notFound_404":{"status":"404","title":"Страница не найдена :("}}},"pdf":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"title":"TypeScript Подробное Руководство","subtitle":"PDF Версия"}}}},"innovationData":{"releaseHistory":[{"version":"3.6","dateRelease":"August 28, 2019"}],"mmp":"3.6","innovations":[{"id":"","version":"3.6","innovationName":"Повышение типобезопасности генероторов","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"povyshenie tipobezopasnosti generotorov","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"povyshenie tipobezopasnosti generotorov\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Повышение типобезопасности генероторов</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">До текущей версии такие конструкции как генераторы (<code>generators</code>) имели недоработки косающиеся определения типа данных возвращаемых, как из, так и во внутрь генератора, значений.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// пример со значением возвращающимся из генератора</span>\n\n<span class=\"token comment\">// function generator(): IterableIterator&lt;\"Done\" | 100></span>\n<span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">yield</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Done</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> iterator <span class=\"token operator\">=</span> <span class=\"token function\">generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// let iterator: IterableIterator&lt;\"Done\" | 100></span>\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> iterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// let result: IteratorResult&lt;\"Done\" | 100></span>\n\n<span class=\"token comment\">/**\n * Поскольку генератор перешел взавершенное состояние\n * значение result.value может принадлежать исключительно\n * к типу string ...\n */</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * ... тем не менее, вывод типов определеяет его\n     * как тип объединение (Union) string | number\n     */</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span> <span class=\"token comment\">// let value: string | number</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token comment\">// пример со значением возвращаемым в генератор</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Greeter</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// function generator(): IterableIterator&lt;undefined></span>\n<span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * В строке - let greeter: Greeter = yield;\n     * предполагается, что возвращенное извнешнего кода\n     * значение будетпринадлежать к типу Greeter...\n     *\n     */</span>\n    <span class=\"token keyword\">let</span> greeter<span class=\"token operator\">:</span> Greeter <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span><span class=\"token punctuation\">;</span>\n    greeter<span class=\"token punctuation\">.</span><span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> iterator <span class=\"token operator\">=</span> <span class=\"token function\">generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// let iterator: IterableIterator&lt;undefined></span>\niterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/**\n * Строка ниже приведт кошибке во время выполнения\n * внутри  генератора при вызове метода greeter.greet();\n * поскольку возращенное значение принадлежит к типу number,\n * в то время как ожидается тип Greeter.\n */</span>\niterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, runtime error</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nНачиная с версии _TypeScript_ </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token number\">3.6</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> описанные выше недостатки были устранены.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token comment\">// пример со значением возвращающимся из генератора</span>\n\n<span class=\"token comment\">/**\n *  &lt;v3.6: function generator(): IterableIterator&lt;\"Done\" | 100>\n * >=v3.6: function generator(): Generator&lt;number, string, unknown>\n */</span>\n<span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">yield</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Done</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n *  &lt;v3.6: let iterator: IterableIterator&lt;\"Done\" | 100>\n * >=v3.6: let iterator: Generator&lt;number, string, unknown>\n */</span>\n<span class=\"token keyword\">let</span> iterator <span class=\"token operator\">=</span> <span class=\"token function\">generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n *  &lt;v3.6: let result: IteratorResult&lt;\"Done\" | 100>\n * >=v3.6: let result: IteratorResult&lt;number, string>\n */</span>\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> iterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     *  &lt;v3.6: let value: string | number\n     * >=v3.6: let value: string\n     */</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token comment\">// пример со значением возвращаемым в генератор</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Greeter</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n *  &lt;v3.6: function generator(): IterableIterator&lt;undefined>\n * >=v3.6: function generator(): Generator&lt;undefined, void, Greeter>\n */</span>\n<span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> greeter<span class=\"token operator\">:</span> Greeter <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span><span class=\"token punctuation\">;</span>\n    greeter<span class=\"token punctuation\">.</span><span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n *  &lt;v3.6: let iterator: IterableIterator&lt;undefined>\n * >=v3.6: let iterator: Generator&lt;undefined, void, Greeter>\n */</span>\n<span class=\"token keyword\">let</span> iterator <span class=\"token operator\">=</span> <span class=\"token function\">generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\niterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\niterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error! Argument of type '[123]' is not assignable to parameter of type '[] | [Greeter]'.</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nПодобноестало возможно благодаря добавлению шести новых типов перечисленных ниже, которые вы также можете использовать при работе с генераторами.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Iterator<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> TReturn <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TNext <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/** ... */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">IteratorResult<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> TReturn <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span>\n    <span class=\"token operator\">|</span> IteratorYieldResult<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">|</span> IteratorReturnResult<span class=\"token operator\">&lt;</span>TReturn<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IteratorReturnResult<span class=\"token operator\">&lt;</span>TReturn<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/** ... */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IteratorYieldResult<span class=\"token operator\">&lt;</span>TYield<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/** ... */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Generator<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> TReturn <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TNext <span class=\"token operator\">=</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span></span>\n    <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Iterator<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> TReturn<span class=\"token punctuation\">,</span> TNext<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/** ... */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">GeneratorFunction</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/** ... */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">GeneratorFunctionConstructor</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/** ... */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nИ напоследок будет не лишним ещё раз взглянуть на очень простой и информативный пример более эффективной работы с генераторами.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token comment\">/**\n * Generator&lt;number, string, boolean>\n * или по другому\n * Generator&lt;\n *  возвращаемое с помощью оператора yield  значение,\n *  возвращаемое с помощью оператора return значение,\n *  передаваемое в метод next, то есть возвращаемое в генератор, значение\n * >\n */</span>\n<span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Generator<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">boolean</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">yield</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n                <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[if]  Block if in counter generator.\n                       Variable value \"i\": </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Done'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> iterator <span class=\"token operator\">=</span> <span class=\"token function\">counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> iterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>result<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> returnedFromGeneratorValue <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> passedToGeneratorValue <span class=\"token operator\">=</span> returnedFromGeneratorValue <span class=\"token operator\">===</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[out] Returned from generator value: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>returnedFromGeneratorValue<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[in]  Passed to generator  value: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>passedToGeneratorValue<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    result <span class=\"token operator\">=</span> iterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span>passedToGeneratorValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[end] Return from generator resultant value: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>result<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * \"[out] Returned from generator value: 0\"\n * \"[in]  Passed to generator  value: false\"\n * \"[out] Returned from generator value: 1\"\n * \"[in]  Passed to generator  value: false\"\n * \"[out] Returned from generator value: 2\"\n * \"[in]  Passed to generator  value: true\"\n * \"[if]  Block if in counter generator.\n          Variable value \"i\": 3\"\n * \"[end] Return from generator resultant value: DONE\"\n */</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.6/Повышение типобезопасности генероторов/content.md"},{"id":"","version":"3.6","innovationName":"Добавление хелпера иметирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"dobavlenie helpera imetiruushchego mehanizm spread array pri kompilyacii v ecmascript nije versii 6 pri neaktivnom flage --downleveliteration","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"dobavlenie helpera imetiruushchego mehanizm spread array pri kompilyacii v ecmascript nije versii 6 pri neaktivnom flage --downleveliteration\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Добавление хелпера иметирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">Начиная с версии <code>v3.6</code>, хелпер, генерирующийся при компиляции такой конструкции, как <code>array spread ([...Array(5)])</code>, в ECMAScript ниже 6 версии, при неактивном флаге <code>--downlevelIteration</code>, притерпел кардинальные изменения. Но обо всем по порядку.</p>\n<p class=\"content__paragraph\">До <code>TypeScript</code> версии <code>v3.6</code>, при компиляции кода в версию ниже <code>es6</code>, для эмитации механизма <code>spread</code> примененого к массиву генерировался код объединяющий массивы с помощью его метода <code>.concat()</code> -</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// этот код es6+ компилировался в..</span>\n<span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ..этот es5 код</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nНо эмитация подобным образом не соответствует поведению предполагаемого спецификацией </span><span class=\"token template-punctuation string\">`</span></span>es6<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> при использовании массива созданного с помощью конструктора, которому при вызове передали в качестве единственного аргумента числовое значение.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token keyword\">let</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// этот код es6+ компилировался в..</span>\n<span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ..этот es5 код</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nПолучение экземпляра массива подобным образом приводит к созданию объекта массива с заданной длиной, равной значению переданного вкачестве аргумента, а также полным отсутствием элементов и следовательно ассоциированных с ними ключей (индексов массива).\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [empty × 3]</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ['a', 'b', 'c']</span>\n\n<span class=\"token comment\">/**\n * У объекта массива созданного с помощью конструктора\n * длина равна переданному аргументу, то есть 3, но\n * ключи представляющие индекс массива, также как и\n * элементы - отсутствуют.\n */</span>\n<span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// псевдо объект массива {length: 3}</span>\n\n<span class=\"token comment\">/**\n * У объекта массива созданного с помощью литерала массива\n * длина равняется количеству его элементов, то есть 3, а также\n * существуют ключи (0, 1, 2) ассоциированные с элементами ('a','b','c').\n */</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// псевдо объект массива {length: 3, 0: 'a', 1: 'b', 2: 'c'}</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nНе будет лишним напомнить, что элементы у массива созданного с помощью конструктора буквально полностью отсутствуют, а не имеют значение </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">undefined</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, как может показаться. При обращении к элементам по индексу входящего в диапазон установленного его длиной, </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">undefined</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> возвращается не потому что хранится в качестве элемента, а потому что </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">undefined</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> возвращается всегда при обращении к несуществующему ключу объекта.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token comment\">// случай с объектом созданного при помощи литерала</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> prop<span class=\"token operator\">:</span> <span class=\"token string\">'value'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span><span class=\"token string\">'prop'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// value - обращение к существующему ключу prop</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span><span class=\"token string\">'prop'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined - обращение к не существующему ключу prop</span>\n\n<span class=\"token comment\">// случай с массивом созданного при помощи литерала</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// a - обращение к существующему ключу 0</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined - обращение к не существующему ключу 10</span>\n\n<span class=\"token comment\">// случай с массивом созданного при помощи конструктора</span>\n\n<span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined - обращение к не существующему ключу 0</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nОтсутствие ключей является причиной несоответствия количества реальных итераций и длины массива при работе с ними. Методы массива (</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> и др.) и итерирующие конструкции (</span><span class=\"token template-punctuation string\">`</span></span>forin\\forof<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">)проверяют ключи с помощью метода </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> доставшегося по наследству от базового типа </span><span class=\"token template-punctuation string\">`</span></span>Object<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token comment\">/**\n * псевдо объект массива {length: 3}\n * Нет ключей - нет итераций!\n * Вывод в консоль: (пусто)\n */</span>\n<span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">iteration</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * псевдо объект массива {length: 3}\n * Нет ключей - нет итераций!\n * Вывод в консоль: (пусто)\n */</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> item <span class=\"token keyword\">of</span> <span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">iteration</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nТем не менее при применении механиза </span><span class=\"token template-punctuation string\">`</span></span>spread<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> к массиву в </span><span class=\"token template-punctuation string\">`</span></span>es6<span class=\"token operator\">+</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> создает несуществующие элементы и заполняет их значениями </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">undefined</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token comment\">/**\n * Длина === 7, количество итераций === 7\n */</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// es6 - [1, 2, undefined, undefined, undefined, 3, 4]</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nНо скомпилированный </span><span class=\"token template-punctuation string\">`</span></span>TypeScript<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> в </span><span class=\"token template-punctuation string\">`</span></span>es <span class=\"token operator\">&lt;</span> v6<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> код при неактивном флаге </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token operator\">--</span>downlevelIteration<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, до версии </span><span class=\"token template-punctuation string\">`</span></span>v3<span class=\"token punctuation\">.</span><span class=\"token number\">6</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> не соответствовал этому поведению, поскольку не преобразовывал отсутствующие элементы в элементы ассоциированные со значением </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">undefined</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token comment\">/**\n * Длина === 7, количество итераций === 4!\n */</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// es6 синтаксис компилировался в..</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// в es5 подобный код - [1, 2, empty × 3, 2, 3]</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nПосле того, как коммунити обратило внимание на несоответствие в поведении, подход с нативным методом </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> заменили на генерацию хелпера </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token function\">__spreadArrays</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> и тем самым исправили поведение на предполагаемое спецификацией. Отказ от нативного </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>` замедлил сказался на производительности<span class=\"token punctuation\">,</span> снизив её ровно в два раза<span class=\"token punctuation\">.</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.6/Добавление хелпера иметирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration/content.md"},{"id":"","version":"3.6","innovationName":"Расширение системы типов типами представляющими структуры данных только для чтения","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"rasshirenie sistemy tipov tipami predstavlyaushchimi struktury dannyh tolko dlya chteniya","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"rasshirenie sistemy tipov tipami predstavlyaushchimi struktury dannyh tolko dlya chteniya\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Расширение системы типов типами представляющими структуры данных только для чтения</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">Начиная с версии <code>v3.6</code>, система типов <code>Typescript</code> пополнилась новыми вспомогательными типами представляющими структуры данных <em>только для чтения</em> (<code>readonly</code>). Такими типами стали <code>ReadonlyMap&#x3C;K, V></code> и <code>ReadonlySet&#x3C;T></code> и в отличии от своих прототипов они не имеют методов способных их изменить.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> map<span class=\"token operator\">:</span> ReadonlyMap<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> <span class=\"token keyword\">set</span><span class=\"token operator\">:</span> ReadonlySet<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.6/Расширение системы типов типами представляющими структуры данных только для чтения/content.md"},{"id":"","version":"3.6","innovationName":"Строковой идентификатор функции-конструктора","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"strokovoi identifikator funkcii-konstruktora","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"strokovoi identifikator funkcii-konstruktora\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Строковой идентификатор функции-конструктора</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\"><code>TypeScript</code>, начиная сверсии <code>v3.6</code> реализовывает механизм ecmascript спецификации предусматривающей строковое именование функции-конструктора. Другими словами, определение метода идентификатор которого представлен в виде строки экфивалентной <code>\"constructor\"</code> расценивается как определение функции-конструктора. Если идентификатор помеается как вычисляемый <code>[\"constructor\"]</code>, то такое объявление расценивается обычным методом класса.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// этот ts код...</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\"><span class=\"token constant\">T</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Constructor!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'constructor'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Method with name \"constructor\"!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> t <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">T</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// output: Constructor!</span>\nt<span class=\"token punctuation\">.</span><span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// output: Method with name \"constructor\"!</span>\n\n<span class=\"token comment\">// ...будетскомпилирован в этот js код</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\"><span class=\"token constant\">T</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Constructor!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'constructor'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Method with name \"constructor\"!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> t <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">T</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// output: Constructor!</span>\nt<span class=\"token punctuation\">.</span><span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// output: Method with name \"constructor\"!</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.6/Строковой идентификатор функции-конструктора/content.md"},{"id":"","version":"3.6","innovationName":"Расширение вывода об ошибках при работе с Promise","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"rasshirenie vyvoda ob oshibkah pri rabote s promise","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"rasshirenie vyvoda ob oshibkah pri rabote s promise\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Расширение вывода об ошибках при работе с Promise</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">Поскольку работа с <code>Promise</code> является очень важной частью повседневной разработки, <code>TypeScript</code>, начиная с версии <code>v3.6</code>, расширила информирование при возникновении ошибок связанными с ними, а также били добавлены механизмы их быстрогоустранения.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getPersonData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">printPersonInfo</span><span class=\"token punctuation\">(</span>personData<span class=\"token operator\">:</span> Person<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * До v3.6 возникала ошибка говорящая что\n     * тип Promise&lt;Person> не соответствует типу Person\n     *\n     * Argument of type 'Promise&lt;Person>' is not assignable\n     * to parameter of type 'Person'.\n     * Type 'Promise&lt;Person>' is missing the following properties\n     * from type 'Person': name, agets(2345)\n     *\n     *\n     * После v3.6 вывод расширили предложением пофиксить\n     * ошибку добавлением ключевого слова await\n     *\n     * Did you forget to use 'await'?\n     *\n     */</span>\n    <span class=\"token function\">printPersonInfo</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPersonData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span>\n    <span class=\"token function\">printPersonInfo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> <span class=\"token function\">getPersonData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getPersonData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * Также предлагается пофиксить ошибку путем\n     * добавления ключевого слова await\n     *\n     * Property 'json' does not exist on type 'Promise&lt;Response>'.ts(2339)\n     * Did you forget to use 'await'?\n     */</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.6/Расширение вывода об ошибках при работе с Promise/content.md"},{"id":"","version":"3.6","innovationName":"Слияние одноименных классов и функций из окружающего контекста","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"sliyanie odnoimennyh klassov i funkcii iz okrujaushchego konteksta","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"sliyanie odnoimennyh klassov i funkcii iz okrujaushchego konteksta\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Слияние одноименных классов и функций из окружающего контекста</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">Начиная с <code>v3.6</code> был реализован механизм позволяющий сливать воедино одноименные классы и функции находящиеся в одном окружающем контексте.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Point</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n    y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Point</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Point<span class=\"token punctuation\">;</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nНачиная с </span><span class=\"token template-punctuation string\">`</span></span>v3<span class=\"token punctuation\">.</span><span class=\"token number\">7</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> компилятор будет прибегать к данной возможности при генерации </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">.</span>d<span class=\"token punctuation\">.</span>ts<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> файлов из </span><span class=\"token template-punctuation string\">`</span></span>JavaScript` кода<span class=\"token punctuation\">.</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.6/Слияние одноименных классов и функций из окружающего контекста/content.md"},{"id":"","version":"3.6","innovationName":"Добавлена поддержка Unicode для идентификаторов","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"dobavlena podderjka unicode dlya identifikatorov","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"dobavlena podderjka unicode dlya identifikatorov\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Добавлена поддержка Unicode для идентификаторов</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">Начиная с версии <code>v3.6</code> в <em>TypeScript</em>, для кода компилируемого в <code>--target es2015</code> и выше, была добавлена поддержка символов <em>unicode</em> испольуемых в качестве идентификаторов синтаксических конструкций.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">/**\n * До v3.6:\n *      Error, Variable declaration expected.\n *\n * Начиная с v3.6 для --target es2015 и выше\n *      Ok\n */</span>\n<span class=\"token keyword\">const</span> 𝓱𝓮𝓵𝓵𝓸 <span class=\"token operator\">=</span> <span class=\"token string\">'world'</span><span class=\"token punctuation\">;</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.6/Добавлена поддержка Unicode для идентификаторов/content.md"},{"id":"","version":"3.6","innovationName":"Поддержка import.meta для SystemJS","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"podderjka import.meta dlya systemjs","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"podderjka import.meta dlya systemjs\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Поддержка import.meta для SystemJS</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">В <em>TypeScript</em> <code>v3.6</code> была добавлена возможность трансформации <code>import.meta</code> в <code>context.meta</code> что является необходимым функционалом при работе с такой модульной системой, как <em>SystemJS</em> (<code>--module system</code>).</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// этот код .ts ...</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">import</span><span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...преобразуется в этот .js код</span>\nSystem<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>exports_1<span class=\"token punctuation\">,</span> context_1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> __moduleName <span class=\"token operator\">=</span> context_1 <span class=\"token operator\">&amp;&amp;</span> context_1<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        setters<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">execute</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>context_1<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.6/Поддержка import\\.meta для SystemJS/content.md"},{"id":"","version":"3.6","innovationName":"get и set в окружающем контексте","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"get i set v okrujaushchem kontekste","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"get i set v okrujaushchem kontekste\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>get и set в окружающем контексте</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">Начаиная с версии <code>v3.6</code>, <code>TypeScript</code> получил возможность объявлять <code>get/set</code> в окружающем контексте (<code>declare class ID {}</code> или в файлах декларациях <code>.d.ts</code>).</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// Начиная с v3.6 - Ok</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\"><span class=\"token constant\">T</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">get</span> <span class=\"token function\">field</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">set</span> <span class=\"token function\">field</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nКроме того, начиная с версии </span><span class=\"token template-punctuation string\">`</span></span>v3<span class=\"token punctuation\">.</span><span class=\"token number\">7</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> компилятор начнет использовать данный функционал при генерации </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">.</span>d<span class=\"token punctuation\">.</span>ts` файлов<span class=\"token punctuation\">.</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.6/get и set в окружающем контексте/content.md"},{"id":"","version":"3.6","innovationName":"Api для поддержки --build и --incremental","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"api dlya podderjki --build i --incremental","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"api dlya podderjki --build i --incremental\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Api для поддержки --build и --incremental</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">С недавних пор в <em>TypeScript</em>, благодаря добавлению функционала скрывающегося за флагами <code>--build</code> и <code>--incremental</code>, появилась возможность создавать ссылки на другие проекты и генерировать метаинофрмацию о предыдущих компиляциях, позволяющую включать в последующие компиляции толькоте файлы, которые подверглись изменениям. Данный функционал позволил значительно увеличить скорость разработки, но до этого момента не был доступен для совместного использования с такими сборщиками, как например <code>Gulp</code> или <code>Webpack</code>. Начиная с версии <code>v3.6</code>, разработчики компилятора <em>TypeScript</em> добавили новое <em>api</em> позволяющее создателям плагинов для сторонних сборщиков использовать данный, увеличивающий скорость компиляции, механизм.</p>","commitInfoAll":[{"committedDate":"2020-08-14T10:46:48Z","message":"create github info configurator.","messageHeadline":"create github info configurator.","pushedDate":"2020-08-14T10:49:06Z","authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.6/Api для поддержки --build и --incremental/content.md"},{"id":"","version":"3.6","innovationName":"Интеллектуальное определение синтаксиса авто-импорта","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"intellektualnoe opredelenie sintaksisa avto-importa","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"intellektualnoe opredelenie sintaksisa avto-importa\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Интеллектуальное определение синтаксиса авто-импорта</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">Поскольку <em>TypeScript</em> позволяет напрямую работать с <em>JavaScript</em> кодом, который может содержать множество вариантов экспорта конструкций (стандарты <em>ECScript</em>, <em>CommonJS</em>, <em>AMD</em>, <em>SysytemJS</em>), возникают разногласия по поводу определения синтаксиса экспорта в коде <code>.ts</code> при авто-импорте. Начиная с версии <code>v3.6</code>, компилятору была добавлена возможность автоматического определения синтаксиса используемого при авто-импорте для каждого отдельного случая.</p>","commitInfoAll":[{"committedDate":"2020-08-14T10:46:48Z","message":"create github info configurator.","messageHeadline":"create github info configurator.","pushedDate":"2020-08-14T10:49:06Z","authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.6/Интеллектуальное определение синтаксиса авто-импорта/content.md"}]},"winTocTree":[{"id":"0","isCollapse":false,"index":0,"data":{"releaseHistory":[{"version":"3.3","dateRelease":"january 31, 2019"}],"mmp":"3.3","innovations":[{"id":"","version":"3.3","innovationName":"Повышение производительности сборки для команды --build --watch","dateRelease":"January 31, 2019","datePublication":"January 31, 2019","tags":[],"path":"povyshenie proizvoditelnosti sborki dlya komandy --build --watch"},{"id":"","version":"3.3","innovationName":"Улучшение поведения для типов Union указанных в качестве параметров функции","dateRelease":"January 31, 2019","datePublication":"January 31, 2019","tags":[],"path":"uluchshenie povedeniya dlya tipov union ukazannyh v kachestve parametrov funkcii"}]}},{"id":"1","isCollapse":false,"index":1,"data":{"releaseHistory":[{"version":"3.4","dateRelease":"March 29, 2019"}],"mmp":"3.4","innovations":[{"id":"","version":"3.4","innovationName":"Опции компилятора --tsBuildInfoFile","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"opcii kompilyatora --tsbuildinfofile"},{"id":"","version":"3.4","innovationName":"Опции компилятора --incremental","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"opcii kompilyatora --incremental"},{"id":"","version":"3.4","innovationName":"Массивоподобные readonly типы","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"massivopodobnye readonly tipy"},{"id":"","version":"3.4","innovationName":"Расширенный тип ReadonlyArray","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"rasshirennyi tip readonlyarray"},{"id":"","version":"3.4","innovationName":"Привидение к константе (const assertion)","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"prividenie k konstante (const assertion)"},{"id":"","version":"3.4","innovationName":"Проверка типов для globalThis","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"proverka tipov dlya globalthis"}]}},{"id":"2","isCollapse":false,"index":2,"data":{"releaseHistory":[{"version":"3.5","dateRelease":"May 29, 2019"}],"mmp":"3.5","innovations":[{"id":"","version":"3.5","innovationName":"Вспомогательный тип Omit","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"vspomogatelnyi tip omit"},{"id":"","version":"3.5","innovationName":"Улучшение механизма проверки избыточных полей в объедененных типах (Union types)","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie mehanizma proverki izbytochnyh polei v obedenennyh tipah (union types)"},{"id":"","version":"3.5","innovationName":"Введение нового флага --allowUmdGlobalAccess","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"vvedenie novogo flaga --allowumdglobalaccess"},{"id":"","version":"3.5","innovationName":"Улучшение механизма проверки объединенных типов","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie mehanizma proverki obedinennyh tipov"},{"id":"","version":"3.5","innovationName":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie mehanizma vyvoda tipa vysshego poryadka dlya obobshchennyh konstruktorov"},{"id":"","version":"3.5","innovationName":"Неявное ограничение обобщенных параметров типом unknown","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"neyavnoe ogranichenie obobshchennyh parametrov tipom unknown"},{"id":"","version":"3.5","innovationName":"Изменение правил для типа unknown и индексной сигнатуре","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"izmenenie pravil dlya tipa unknown i indeksnoi signature"},{"id":"","version":"3.5","innovationName":"Изменение логики для Object.keys для версии es5","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"izmenenie logiki dlya object.keys dlya versii es5"}]}},{"id":"3","isCollapse":false,"index":3,"data":{"releaseHistory":[{"version":"3.6","dateRelease":"August 28, 2019"}],"mmp":"3.6","innovations":[{"id":"","version":"3.6","innovationName":"Повышение типобезопасности генероторов","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"povyshenie tipobezopasnosti generotorov"},{"id":"","version":"3.6","innovationName":"Добавление хелпера иметирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"dobavlenie helpera imetiruushchego mehanizm spread array pri kompilyacii v ecmascript nije versii 6 pri neaktivnom flage --downleveliteration"},{"id":"","version":"3.6","innovationName":"Расширение системы типов типами представляющими структуры данных только для чтения","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"rasshirenie sistemy tipov tipami predstavlyaushchimi struktury dannyh tolko dlya chteniya"},{"id":"","version":"3.6","innovationName":"Строковой идентификатор функции-конструктора","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"strokovoi identifikator funkcii-konstruktora"},{"id":"","version":"3.6","innovationName":"Расширение вывода об ошибках при работе с Promise","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"rasshirenie vyvoda ob oshibkah pri rabote s promise"},{"id":"","version":"3.6","innovationName":"Слияние одноименных классов и функций из окружающего контекста","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"sliyanie odnoimennyh klassov i funkcii iz okrujaushchego konteksta"},{"id":"","version":"3.6","innovationName":"Добавлена поддержка Unicode для идентификаторов","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"dobavlena podderjka unicode dlya identifikatorov"},{"id":"","version":"3.6","innovationName":"Поддержка import.meta для SystemJS","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"podderjka import.meta dlya systemjs"},{"id":"","version":"3.6","innovationName":"get и set в окружающем контексте","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"get i set v okrujaushchem kontekste"},{"id":"","version":"3.6","innovationName":"Api для поддержки --build и --incremental","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"api dlya podderjki --build i --incremental"},{"id":"","version":"3.6","innovationName":"Интеллектуальное определение синтаксиса авто-импорта","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"intellektualnoe opredelenie sintaksisa avto-importa"}]}},{"id":"4","isCollapse":false,"index":4,"data":{"releaseHistory":[{"version":"3.7","dateRelease":"November 5, 2019"},{"version":"3.7-rc","dateRelease":"November 4, 2019"},{"version":"3.7-beta","dateRelease":"November 3, 2019"},{"version":"3.7-alpha","dateRelease":"November 2, 2019"}],"mmp":"3.7","innovations":[{"id":"","version":"3.7-rc","innovationName":"Оператор опциональной последовательности (?.)","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":["исправление","Критическое изменение","Компилятор"],"path":"operator opcionalnoi posledovatelnosti (?.)"},{"id":"","version":"3.7-rc","innovationName":"Оператор объединения со значением null (??)","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":["высокая ожидаемость"],"path":"operator obedineniya so znacheniem null (??)"},{"id":"","version":"3.7-rc","innovationName":"Утверждение в сигнатуре (Signature Assertion)","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":["важно"],"path":"utverjdenie v signature (signature assertion)"},{"id":"","version":"3.7-rc","innovationName":"Улучшена поддержка для типа never возвращаемого из функций","dateRelease":"November 4, 2019","datePublication":"November 5, 2019","tags":["изменение"],"path":"uluchshena podderjka dlya tipa never vozvrashchaemogo iz funkcii"},{"id":"","version":"3.7-beta","innovationName":"Проверка невызванных функций","dateRelease":"November 3, 2019","datePublication":"November 5, 2019","tags":["баг"],"path":"proverka nevyzvannyh funkcii"},{"id":"","version":"3.7-beta","innovationName":"Рекурсивность для псевдононимов типов","dateRelease":"November 3, 2019","datePublication":"November 5, 2019","tags":["компилятор"],"path":"rekursivnost dlya psevdononimov tipov"},{"id":"","version":"3.7-alpha","innovationName":"Совместное использование флагов --declaration и --allowJs","dateRelease":"November 2, 2019","datePublication":"November 5, 2019","tags":["директивы"],"path":"sovmestnoe ispolzovanie flagov --declaration i --allowjs"},{"id":"","version":"3.7-alpha","innovationName":"@ts-nocheck в TypeScript файлах","dateRelease":"November 2, 2019","datePublication":"November 5, 2019","tags":["общее"],"path":"@ts-nocheck v typescript failah"}]}},{"id":"5","isCollapse":false,"index":5,"data":{"releaseHistory":[{"version":"3.8","dateRelease":"February 20, 2020"}],"mmp":"3.8","innovations":[{"id":"","version":"3.8","innovationName":"Импорт и экспорт только типа и флаг --importsNotUsedAsValues","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"import i eksport tolko tipa i flag --importsnotusedasvalues"},{"id":"","version":"3.8","innovationName":"Закрытые поля ECMAScript","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"zakrytye polya ecmascript"},{"id":"","version":"3.8","innovationName":"await высшего уровня","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"await vysshego urovnya"},{"id":"","version":"3.8","innovationName":"Реализация новой формы ре-экспорта","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"realizaciya novoi formy re-eksporta"},{"id":"","version":"3.8","innovationName":"Новая конфигурационная группа параметров watchOptions","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"novaya konfiguracionnaya gruppa parametrov watchoptions"},{"id":"","version":"3.8","innovationName":"Новый флаг --assumeChangesOnlyAffectDirectDependencies","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"novyi flag --assumechangesonlyaffectdirectdependencies"},{"id":"","version":"3.8","innovationName":"Модификаторы JSDocs","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"modifikatory jsdocs"},{"id":"","version":"3.8","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Более строгие проверки объединений имеющих с индексной сигнатурой","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"[kriticheskoe izmenenie] bolee strogie proverki obedinenii imeushchih s indeksnoi signaturoi"},{"id":"","version":"3.8","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Тип object в JSDoc при активном флаге --noImplicitAny больше не расценивается как any","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"[kriticheskoe izmenenie] tip object v jsdoc pri aktivnom flage --noimplicitany bolshe ne rascenivaetsya kak any"}]}},{"id":"6","isCollapse":false,"index":6,"data":{"releaseHistory":[{"version":"3.9","dateRelease":"May 12, 2020"}],"mmp":"3.9","innovations":[{"id":"","version":"3.9","innovationName":"Улучшение вывода типа для Promise.all","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"uluchshenie vyvoda tipa dlya promise.all"},{"id":"","version":"3.9","innovationName":"Сокращение скорости компиляции","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"sokrashchenie skorosti kompilyacii"},{"id":"","version":"3.9","innovationName":"Комментарная директива @ts-expect-error","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"kommentarnaya direktiva @ts-expect-error"},{"id":"","version":"3.9","innovationName":"Проверка вызова функции в тернарном условном операторе","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"proverka vyzova funkcii v ternarnom uslovnom operatore"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение поведения для оператора Non-Null при совместном использовании с оператором опциональной цепочки","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] izmenenie povedeniya dlya operatora non-null pri sovmestnom ispolzovanii s operatorom opcionalnoi cepochki"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Возникновение ошибки при наличии в строке закрывающей фигурной или угловатой скобки в файлах с расширением TSX","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] vozniknovenie oshibki pri nalichii v stroke zakryvaushchei figurnoi ili uglovatoi skobki v failah s rasshireniem tsx"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Повышение уровня проверки необязательных полей для типов определяющих тип пересечение","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] povyshenie urovnya proverki neobyazatelnyh polei dlya tipov opredelyaushchih tip peresechenie"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Определение типа пересечения дескриминантными полями","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] opredelenie tipa peresecheniya deskriminantnymi polyami"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Параметр типа расширяющий тип any больше не наследует его характеристики","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] parametr tipa rasshiryaushchii tip any bolshe ne nasleduet ego harakteristiki"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] get и set больше не перечисляемы","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] get i set bolshe ne perechislyaemy"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] export * теперь всегда включается в сборку","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[kriticheskoe izmenenie] export * teper vsegda vkluchaetsya v sborku"}]}},{"id":"7","isCollapse":false,"index":7,"data":{"releaseHistory":[{"version":"4.0","dateRelease":"August 20, 2020"}],"mmp":"4.0","innovations":[{"id":"","version":"4.0","innovationName":"Вариативный кортеж","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"variativnyi kortej"},{"id":"","version":"4.0","innovationName":"Помеченные элементы кортежа","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"pomechennye elementy korteja"},{"id":"","version":"4.0","innovationName":"Операторы присваивания короткого замыкания","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"operatory prisvaivaniya korotkogo zamykaniya"},{"id":"","version":"4.0","innovationName":"Вывод типов для полей класса по параметрам конструктора","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"vyvod tipov dlya polei klassa po parametram konstruktora"},{"id":"","version":"4.0","innovationName":"unknown как тип исключения блока catch","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"unknown kak tip isklucheniya bloka catch"},{"id":"","version":"4.0","innovationName":"--noEmit совмещенный с --incremental","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"--noemit sovmeshchennyi s --incremental"},{"id":"","version":"4.0","innovationName":"Пользовательская фабрика jsx фрагментов","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"polzovatelskaya fabrika jsx fragmentov"},{"id":"","version":"4.0","innovationName":"Добавление комментарной директивы @deprecated","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"dobavlenie kommentarnoi direktivy @deprecated"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Изменение lib.d.ts","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[kriticheskoe izmenenie]  izmenenie lib.d.ts"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Переопределение аксессоров полем и наоборот теперь является ошибкой","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[kriticheskoe izmenenie]  pereopredelenie aksessorov polem i naoborot teper yavlyaetsya oshibkoi"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Операнды для delete должны быть необязательными","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[kriticheskoe izmenenie]  operandy dlya delete doljny byt neobyazatelnymi"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Изменение фабричного api Nodejs","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[kriticheskoe izmenenie]  izmenenie fabrichnogo api nodejs"}]}},{"id":"8","isCollapse":false,"index":8,"data":{"releaseHistory":[{"version":"4.1@beta","dateRelease":"September 18, 2020"}],"colors":{"--color_light":"#fff","--color_middle-lite":"#93cf94","--color_accent":"#aff933","--color_ambient":"#a12d2d"},"mmp":"4.1","innovations":[{"id":"","version":"4.1@beta","innovationName":"Шаблонный литеральный строковой тип","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Нововведение"],"path":"shablonnyi literalnyi strokovoi tip"},{"id":"","version":"4.1@beta","innovationName":"Переопределение ключей в сопоставленных типах","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Нововведение"],"path":"pereopredelenie kluchei v sopostavlennyh tipah"},{"id":"","version":"4.1@beta","innovationName":"Рекурсивные условные типы","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Изменение"],"path":"rekursivnye uslovnye tipy"},{"id":"","version":"4.1@beta","innovationName":"paths без baseUrl","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Изменение"],"path":"paths bez baseurl"},{"id":"","version":"4.1@beta","innovationName":"checkJs не требует активации allowJs","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Изменение"],"path":"checkjs ne trebuet aktivacii allowjs"},{"id":"","version":"4.1@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] abstract больше не совместим с async","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Критическое изменение"],"path":"[kriticheskoe izmenenie] abstract bolshe ne sovmestim s async"},{"id":"","version":"4.1@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] any и unknown доминируют в ложных позициях","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Критическое изменение"],"path":"[kriticheskoe izmenenie] any i unknown dominiruut v lojnyh poziciyah"},{"id":"","version":"4.1@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] --declaration и --outFile требуют имя корневого пакета","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Критическое изменение"],"path":"[kriticheskoe izmenenie] --declaration i --outfile trebuut imya kornevogo paketa"},{"id":"","version":"4.1@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] параметры resolve теперь обязательные","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Критическое изменение"],"path":"[kriticheskoe izmenenie] parametry resolve teper obyazatelnye"}]}}],"pageNavDataAll":[{"name":"3.3","path":"3.3","sections":[{"name":"Повышение производительности сборки для команды --build --watch","path":"povyshenie proizvoditelnosti sborki dlya komandy --build --watch","data":{"version":"3.3"}},{"name":"Улучшение поведения для типов Union указанных в качестве параметров функции","path":"uluchshenie povedeniya dlya tipov union ukazannyh v kachestve parametrov funkcii","data":{"version":"3.3"}}]},{"name":"3.4","path":"3.4","sections":[{"name":"Опции компилятора --tsBuildInfoFile","path":"opcii kompilyatora --tsbuildinfofile","data":{"version":"3.4"}},{"name":"Опции компилятора --incremental","path":"opcii kompilyatora --incremental","data":{"version":"3.4"}},{"name":"Массивоподобные readonly типы","path":"massivopodobnye readonly tipy","data":{"version":"3.4"}},{"name":"Расширенный тип ReadonlyArray","path":"rasshirennyi tip readonlyarray","data":{"version":"3.4"}},{"name":"Привидение к константе (const assertion)","path":"prividenie k konstante (const assertion)","data":{"version":"3.4"}},{"name":"Проверка типов для globalThis","path":"proverka tipov dlya globalthis","data":{"version":"3.4"}}]},{"name":"3.5","path":"3.5","sections":[{"name":"Вспомогательный тип Omit","path":"vspomogatelnyi tip omit","data":{"version":"3.5"}},{"name":"Улучшение механизма проверки избыточных полей в объедененных типах (Union types)","path":"uluchshenie mehanizma proverki izbytochnyh polei v obedenennyh tipah (union types)","data":{"version":"3.5"}},{"name":"Введение нового флага --allowUmdGlobalAccess","path":"vvedenie novogo flaga --allowumdglobalaccess","data":{"version":"3.5"}},{"name":"Улучшение механизма проверки объединенных типов","path":"uluchshenie mehanizma proverki obedinennyh tipov","data":{"version":"3.5"}},{"name":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов","path":"uluchshenie mehanizma vyvoda tipa vysshego poryadka dlya obobshchennyh konstruktorov","data":{"version":"3.5"}},{"name":"Неявное ограничение обобщенных параметров типом unknown","path":"neyavnoe ogranichenie obobshchennyh parametrov tipom unknown","data":{"version":"3.5"}},{"name":"Изменение правил для типа unknown и индексной сигнатуре","path":"izmenenie pravil dlya tipa unknown i indeksnoi signature","data":{"version":"3.5"}},{"name":"Изменение логики для Object.keys для версии es5","path":"izmenenie logiki dlya object.keys dlya versii es5","data":{"version":"3.5"}}]},{"name":"3.6","path":"3.6","sections":[{"name":"Повышение типобезопасности генероторов","path":"povyshenie tipobezopasnosti generotorov","data":{"version":"3.6"}},{"name":"Добавление хелпера иметирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration","path":"dobavlenie helpera imetiruushchego mehanizm spread array pri kompilyacii v ecmascript nije versii 6 pri neaktivnom flage --downleveliteration","data":{"version":"3.6"}},{"name":"Расширение системы типов типами представляющими структуры данных только для чтения","path":"rasshirenie sistemy tipov tipami predstavlyaushchimi struktury dannyh tolko dlya chteniya","data":{"version":"3.6"}},{"name":"Строковой идентификатор функции-конструктора","path":"strokovoi identifikator funkcii-konstruktora","data":{"version":"3.6"}},{"name":"Расширение вывода об ошибках при работе с Promise","path":"rasshirenie vyvoda ob oshibkah pri rabote s promise","data":{"version":"3.6"}},{"name":"Слияние одноименных классов и функций из окружающего контекста","path":"sliyanie odnoimennyh klassov i funkcii iz okrujaushchego konteksta","data":{"version":"3.6"}},{"name":"Добавлена поддержка Unicode для идентификаторов","path":"dobavlena podderjka unicode dlya identifikatorov","data":{"version":"3.6"}},{"name":"Поддержка import.meta для SystemJS","path":"podderjka import.meta dlya systemjs","data":{"version":"3.6"}},{"name":"get и set в окружающем контексте","path":"get i set v okrujaushchem kontekste","data":{"version":"3.6"}},{"name":"Api для поддержки --build и --incremental","path":"api dlya podderjki --build i --incremental","data":{"version":"3.6"}},{"name":"Интеллектуальное определение синтаксиса авто-импорта","path":"intellektualnoe opredelenie sintaksisa avto-importa","data":{"version":"3.6"}}]},{"name":"3.7","path":"3.7","sections":[{"name":"Оператор опциональной последовательности (?.)","path":"operator opcionalnoi posledovatelnosti (?.)","data":{"version":"3.7-rc"}},{"name":"Оператор объединения со значением null (??)","path":"operator obedineniya so znacheniem null (??)","data":{"version":"3.7-rc"}},{"name":"Утверждение в сигнатуре (Signature Assertion)","path":"utverjdenie v signature (signature assertion)","data":{"version":"3.7-rc"}},{"name":"Улучшена поддержка для типа never возвращаемого из функций","path":"uluchshena podderjka dlya tipa never vozvrashchaemogo iz funkcii","data":{"version":"3.7-rc"}},{"name":"Проверка невызванных функций","path":"proverka nevyzvannyh funkcii","data":{"version":"3.7-beta"}},{"name":"Рекурсивность для псевдононимов типов","path":"rekursivnost dlya psevdononimov tipov","data":{"version":"3.7-beta"}},{"name":"Совместное использование флагов --declaration и --allowJs","path":"sovmestnoe ispolzovanie flagov --declaration i --allowjs","data":{"version":"3.7-alpha"}},{"name":"@ts-nocheck в TypeScript файлах","path":"@ts-nocheck v typescript failah","data":{"version":"3.7-alpha"}}]},{"name":"3.8","path":"3.8","sections":[{"name":"Импорт и экспорт только типа и флаг --importsNotUsedAsValues","path":"import i eksport tolko tipa i flag --importsnotusedasvalues","data":{"version":"3.8"}},{"name":"Закрытые поля ECMAScript","path":"zakrytye polya ecmascript","data":{"version":"3.8"}},{"name":"await высшего уровня","path":"await vysshego urovnya","data":{"version":"3.8"}},{"name":"Реализация новой формы ре-экспорта","path":"realizaciya novoi formy re-eksporta","data":{"version":"3.8"}},{"name":"Новая конфигурационная группа параметров watchOptions","path":"novaya konfiguracionnaya gruppa parametrov watchoptions","data":{"version":"3.8"}},{"name":"Новый флаг --assumeChangesOnlyAffectDirectDependencies","path":"novyi flag --assumechangesonlyaffectdirectdependencies","data":{"version":"3.8"}},{"name":"Модификаторы JSDocs","path":"modifikatory jsdocs","data":{"version":"3.8"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Более строгие проверки объединений имеющих с индексной сигнатурой","path":"[kriticheskoe izmenenie] bolee strogie proverki obedinenii imeushchih s indeksnoi signaturoi","data":{"version":"3.8"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Тип object в JSDoc при активном флаге --noImplicitAny больше не расценивается как any","path":"[kriticheskoe izmenenie] tip object v jsdoc pri aktivnom flage --noimplicitany bolshe ne rascenivaetsya kak any","data":{"version":"3.8"}}]},{"name":"3.9","path":"3.9","sections":[{"name":"Улучшение вывода типа для Promise.all","path":"uluchshenie vyvoda tipa dlya promise.all","data":{"version":"3.9"}},{"name":"Сокращение скорости компиляции","path":"sokrashchenie skorosti kompilyacii","data":{"version":"3.9"}},{"name":"Комментарная директива @ts-expect-error","path":"kommentarnaya direktiva @ts-expect-error","data":{"version":"3.9"}},{"name":"Проверка вызова функции в тернарном условном операторе","path":"proverka vyzova funkcii v ternarnom uslovnom operatore","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение поведения для оператора Non-Null при совместном использовании с оператором опциональной цепочки","path":"[kriticheskoe izmenenie] izmenenie povedeniya dlya operatora non-null pri sovmestnom ispolzovanii s operatorom opcionalnoi cepochki","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Возникновение ошибки при наличии в строке закрывающей фигурной или угловатой скобки в файлах с расширением TSX","path":"[kriticheskoe izmenenie] vozniknovenie oshibki pri nalichii v stroke zakryvaushchei figurnoi ili uglovatoi skobki v failah s rasshireniem tsx","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Повышение уровня проверки необязательных полей для типов определяющих тип пересечение","path":"[kriticheskoe izmenenie] povyshenie urovnya proverki neobyazatelnyh polei dlya tipov opredelyaushchih tip peresechenie","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Определение типа пересечения дескриминантными полями","path":"[kriticheskoe izmenenie] opredelenie tipa peresecheniya deskriminantnymi polyami","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Параметр типа расширяющий тип any больше не наследует его характеристики","path":"[kriticheskoe izmenenie] parametr tipa rasshiryaushchii tip any bolshe ne nasleduet ego harakteristiki","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] get и set больше не перечисляемы","path":"[kriticheskoe izmenenie] get i set bolshe ne perechislyaemy","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] export * теперь всегда включается в сборку","path":"[kriticheskoe izmenenie] export * teper vsegda vkluchaetsya v sborku","data":{"version":"3.9"}}]},{"name":"4.0","path":"4.0","sections":[{"name":"Вариативный кортеж","path":"variativnyi kortej","data":{"version":"4.0"}},{"name":"Помеченные элементы кортежа","path":"pomechennye elementy korteja","data":{"version":"4.0"}},{"name":"Операторы присваивания короткого замыкания","path":"operatory prisvaivaniya korotkogo zamykaniya","data":{"version":"4.0"}},{"name":"Вывод типов для полей класса по параметрам конструктора","path":"vyvod tipov dlya polei klassa po parametram konstruktora","data":{"version":"4.0"}},{"name":"unknown как тип исключения блока catch","path":"unknown kak tip isklucheniya bloka catch","data":{"version":"4.0"}},{"name":"--noEmit совмещенный с --incremental","path":"--noemit sovmeshchennyi s --incremental","data":{"version":"4.0"}},{"name":"Пользовательская фабрика jsx фрагментов","path":"polzovatelskaya fabrika jsx fragmentov","data":{"version":"4.0"}},{"name":"Добавление комментарной директивы @deprecated","path":"dobavlenie kommentarnoi direktivy @deprecated","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Изменение lib.d.ts","path":"[kriticheskoe izmenenie]  izmenenie lib.d.ts","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Переопределение аксессоров полем и наоборот теперь является ошибкой","path":"[kriticheskoe izmenenie]  pereopredelenie aksessorov polem i naoborot teper yavlyaetsya oshibkoi","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Операнды для delete должны быть необязательными","path":"[kriticheskoe izmenenie]  operandy dlya delete doljny byt neobyazatelnymi","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ]  Изменение фабричного api Nodejs","path":"[kriticheskoe izmenenie]  izmenenie fabrichnogo api nodejs","data":{"version":"4.0"}}]},{"name":"4.1","path":"4.1","sections":[{"name":"Шаблонный литеральный строковой тип","path":"shablonnyi literalnyi strokovoi tip","data":{"version":"4.1@beta"}},{"name":"Переопределение ключей в сопоставленных типах","path":"pereopredelenie kluchei v sopostavlennyh tipah","data":{"version":"4.1@beta"}},{"name":"Рекурсивные условные типы","path":"rekursivnye uslovnye tipy","data":{"version":"4.1@beta"}},{"name":"paths без baseUrl","path":"paths bez baseurl","data":{"version":"4.1@beta"}},{"name":"checkJs не требует активации allowJs","path":"checkjs ne trebuet aktivacii allowjs","data":{"version":"4.1@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] abstract больше не совместим с async","path":"[kriticheskoe izmenenie] abstract bolshe ne sovmestim s async","data":{"version":"4.1@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] any и unknown доминируют в ложных позициях","path":"[kriticheskoe izmenenie] any i unknown dominiruut v lojnyh poziciyah","data":{"version":"4.1@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] --declaration и --outFile требуют имя корневого пакета","path":"[kriticheskoe izmenenie] --declaration i --outfile trebuut imya kornevogo paketa","data":{"version":"4.1@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] параметры resolve теперь обязательные","path":"[kriticheskoe izmenenie] parametry resolve teper obyazatelnye","data":{"version":"4.1@beta"}}]}]}},"staticQueryHashes":["408059355","63159454"]}